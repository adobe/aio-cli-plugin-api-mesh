schema {
  query: Query
  mutation: Mutation
}

type Query {
  """
  Retrieve EAV attributes associated to a frontend form. Use countries query provided by DirectoryGraphQl module to retrieve region_id and country_id attribute options.
  """
  attributesForm(
    """Form code."""
    formCode: String!
  ): AttributesFormOutput!
  """Returns a list of attributes metadata for a given entity type."""
  attributesList(
    """Entity type."""
    entityType: AttributeEntityTypeEnum!
    """Identifies which filter inputs to search for and return."""
    filters: AttributeFilterInput
  ): AttributesMetadataOutput
  """
  Return details about custom EAV attributes, and optionally, system attributes.
  """
  attributesMetadata(
    """The type of entity to search."""
    entityType: AttributeEntityTypeEnum!
    """An array of attribute IDs to search."""
    attributeUids: [ID!]
    """Indicates whether to return matching system attributes as well."""
    showSystemAttributes: Boolean
  ): AttributesMetadata @deprecated(reason: "Use Adobe Commerce `customAttributeMetadataV2` query instead")
  """Get a list of available store views and their config information."""
  availableStores(
    """Filter store views by the current store group."""
    useCurrentGroup: Boolean
  ): [StoreConfig]
  """Return information about the specified shopping cart."""
  cart(
    """The unique ID of the cart to query."""
    cart_id: String!
  ): Cart
  """Return a list of categories that match the specified filter."""
  categories(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CategoryResult
  """
  Search for categories that match the criteria specified in the `search` and `filter` attributes.
  """
  category(
    """The category ID to use as the root of the search."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use `categories` instead.")
  """Return an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [CategoryTree] @deprecated(reason: "Use `categories` instead.")
  """Return Terms and Conditions configuration information."""
  checkoutAgreements: [CheckoutAgreement]
  """Return information about CMS blocks."""
  cmsBlocks(
    """An array of CMS block IDs."""
    identifiers: [String]
  ): CmsBlocks
  """Return details about a CMS page."""
  cmsPage(
    """The ID of the CMS page."""
    id: Int
    """The identifier of the CMS page."""
    identifier: String
  ): CmsPage
  """
  Return detailed information about the customer's company within the current company context.
  """
  company: Company
  """Return products that have been added to the specified compare list."""
  compareList(
    """The unique ID of the compare list to be queried."""
    uid: ID!
  ): CompareList
  """The countries query provides information for all countries."""
  countries: [Country]
  """The countries query provides information for a single country."""
  country(id: String): Country
  """Return information about the store's currency."""
  currency: Currency
  """Return the attribute type, given an attribute code and entity type."""
  customAttributeMetadata(
    """
    An input object that specifies the attribute code and entity type to search.
    """
    attributes: [AttributeInput!]!
  ): CustomAttributeMetadata @deprecated(reason: "Use `customAttributeMetadataV2` query instead.")
  """Retrieve EAV attributes metadata."""
  customAttributeMetadataV2(attributes: [AttributeInput!]): AttributesMetadataOutput!
  """Return detailed information about a customer account."""
  customer: Customer
  """Return information about the customer's shopping cart."""
  customerCart: Cart!
  """Return a list of downloadable products the customer has purchased."""
  customerDownloadableProducts: CustomerDownloadableProducts
  customerOrders: CustomerOrders @deprecated(reason: "Use the `customer` query instead.")
  """Return a list of customer payment tokens stored in the vault."""
  customerPaymentTokens: CustomerPaymentTokens
  """Return a list of dynamic blocks filtered by type, location, or UIDs."""
  dynamicBlocks(
    """Defines the filter for returning matching dynamic blocks."""
    input: DynamicBlocksFilterInput
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): DynamicBlocks!
  """
  Retrieve the secure PayPal URL for a Payments Pro Hosted Solution transaction.
  """
  getHostedProUrl(
    """An input object that specifies the cart ID."""
    input: HostedProUrlInput!
  ): HostedProUrl
  """
  Retrieve payment credentials for a transaction. Use this query for Payflow Link and Payments Advanced payment methods.
  """
  getPayflowLinkToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PayflowLinkTokenInput!
  ): PayflowLinkToken
  """Retrieves the payment configuration for a given location"""
  getPaymentConfig(
    """Defines the origin location for that payment request"""
    location: PaymentLocation!
  ): PaymentConfigOutput
  """Retrieves the payment details for the order"""
  getPaymentOrder(
    """The customer cart ID"""
    cartId: String!
    """PayPal order ID"""
    id: String!
  ): PaymentOrderOutput
  """Gets the payment SDK urls and values"""
  getPaymentSDK(
    """Defines the origin location for that payment request"""
    location: PaymentLocation!
  ): GetPaymentSDKOutput
  """Retrieves the vault configuration"""
  getVaultConfig: VaultConfigOutput
  """Return details about a specific gift card."""
  giftCardAccount(
    """An input object that specifies the gift card code."""
    input: GiftCardAccountInput!
  ): GiftCardAccount
  """
  Return the specified gift registry. Some details will not be available to guests.
  """
  giftRegistry(
    """The unique ID of the registry to search for."""
    giftRegistryUid: ID!
  ): GiftRegistry
  """Search for gift registries by specifying a registrant email address."""
  giftRegistryEmailSearch(
    """The registrant's email."""
    email: String!
  ): [GiftRegistrySearchResult]
  """Search for gift registries by specifying a registry URL key."""
  giftRegistryIdSearch(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
  ): [GiftRegistrySearchResult]
  """
  Search for gift registries by specifying the registrant name and registry type ID.
  """
  giftRegistryTypeSearch(
    """The first name of the registrant."""
    firstName: String!
    """The last name of the registrant."""
    lastName: String!
    """The type UID of the registry."""
    giftRegistryTypeUid: ID
  ): [GiftRegistrySearchResult]
  """Get a list of available gift registry types."""
  giftRegistryTypes: [GiftRegistryType]
  """Retrieve guest order details based on number, email and postcode."""
  guestOrder(input: OrderInformationInput!): CustomerOrder!
  """Retrieve guest order details based on token."""
  guestOrderByToken(input: OrderTokenInput!): CustomerOrder!
  """
  Check whether the specified email can be used to register a company admin.
  """
  isCompanyAdminEmailAvailable(email: String!): IsCompanyAdminEmailAvailableOutput
  """
  Check whether the specified email can be used to register a new company.
  """
  isCompanyEmailAvailable(email: String!): IsCompanyEmailAvailableOutput
  """Check whether the specified role name is valid for the company."""
  isCompanyRoleNameAvailable(name: String!): IsCompanyRoleNameAvailableOutput
  """
  Check whether the specified email can be used to register a company user.
  """
  isCompanyUserEmailAvailable(email: String!): IsCompanyUserEmailAvailableOutput
  """
  Check whether the specified email has already been used to create a customer account.
  """
  isEmailAvailable(
    """The email address to check."""
    email: String!
  ): IsEmailAvailableOutput
  """Retrieve the specified negotiable quote."""
  negotiableQuote(uid: ID!): NegotiableQuote
  """Retrieve the specified negotiable quote template."""
  negotiableQuoteTemplate(templateId: ID!): NegotiableQuoteTemplate
  """
  Return a list of negotiable quote templates that can be viewed by the logged-in customer.
  """
  negotiableQuoteTemplates(
    """
    The filter to use to determine which negotiable quote templates to return.
    """
    filter: NegotiableQuoteTemplateFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The field to use for sorting results."""
    sort: NegotiableQuoteTemplateSortInput
  ): NegotiableQuoteTemplatesOutput
  """
  Return a list of negotiable quotes that can be viewed by the logged-in customer.
  """
  negotiableQuotes(
    """The filter to use to determine which negotiable quotes to return."""
    filter: NegotiableQuoteFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The field to use for sorting results."""
    sort: NegotiableQuoteSortInput
  ): NegotiableQuotesOutput
  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  pickupLocations(
    """Perform search by location using radius and search term."""
    area: AreaInput
    """Apply filters by attributes."""
    filters: PickupLocationFilterInput
    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput
    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): PickupLocations
  """
  Return the active ratings attributes and the values each rating can have.
  """
  productReviewRatingsMetadata: ProductReviewRatingsMetadata!
  """
  Search for products that match the criteria specified in the `search` and `filter` attributes.
  """
  products(
    """One or more keywords to use in a full-text search."""
    search: String
    """The product attributes to search for and return."""
    filter: ProductAttributeFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): Products
  """Returns details about Google reCAPTCHA V3-Invisible configuration."""
  recaptchaV3Config: ReCaptchaConfigurationV3
  """
  Return the full details for a specified product, category, or CMS page.
  """
  route(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): RoutableInterface
  searchTerm(
    """An input of Search Term"""
    Search: String
  ): SearchTerm
  """Return details about the store's configuration."""
  storeConfig: StoreConfig
  """Return the relative URL for a specified product, category or CMS page."""
  urlResolver(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): EntityUrl @deprecated(reason: "Use the `route` query instead.")
  """Return the contents of a customer's wish list."""
  wishlist: WishlistOutput @deprecated(reason: "Moved under `Customer.wishlist`.")
}

type Mutation {
  """Accept invitation to the company."""
  acceptCompanyInvitation(input: CompanyInvitationInput!): CompanyInvitationOutput
  """Update an existing negotiable quote template."""
  acceptNegotiableQuoteTemplate(
    """
    An input object that contains the data to update a negotiable quote template.
    """
    input: AcceptNegotiableQuoteTemplateInput!
  ): NegotiableQuoteTemplate
  """
  Add one or more bundle products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addBundleProductsToCart(
    """An input object that defines which bundle products to add to the cart."""
    input: AddBundleProductsToCartInput
  ): AddBundleProductsToCartOutput
  """
  Add one or more configurable products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addConfigurableProductsToCart(
    """
    An input object that defines which configurable products to add to the cart.
    """
    input: AddConfigurableProductsToCartInput
  ): AddConfigurableProductsToCartOutput
  """
  Add one or more downloadable products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addDownloadableProductsToCart(
    """
    An input object that defines which downloadable products to add to the cart.
    """
    input: AddDownloadableProductsToCartInput
  ): AddDownloadableProductsToCartOutput
  """Add registrants to the specified gift registry."""
  addGiftRegistryRegistrants(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """An array registrants to add."""
    registrants: [AddGiftRegistryRegistrantInput!]!
  ): AddGiftRegistryRegistrantsOutput
  """Add any type of product to the cart."""
  addProductsToCart(
    """The cart ID of the shopper."""
    cartId: String!
    """An array that defines the products to add to the cart."""
    cartItems: [CartItemInput!]!
  ): AddProductsToCartOutput
  """Add products to the specified compare list."""
  addProductsToCompareList(
    """
    An input object that defines which products to add to an existing compare list.
    """
    input: AddProductsToCompareListInput
  ): CompareList
  """Add items to the specified requisition list."""
  addProductsToRequisitionList(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
    """An array of products to be added to the requisition list."""
    requisitionListItems: [RequisitionListItemsInput!]!
  ): AddProductsToRequisitionListOutput
  """
  Add one or more products to the specified wish list. This mutation supports all product types.
  """
  addProductsToWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of products to add to the wish list."""
    wishlistItems: [WishlistItemInput!]!
  ): AddProductsToWishlistOutput
  """Add a comment to an existing purchase order."""
  addPurchaseOrderComment(input: AddPurchaseOrderCommentInput!): AddPurchaseOrderCommentOutput
  """Add purchase order items to the shopping cart."""
  addPurchaseOrderItemsToCart(input: AddPurchaseOrderItemsToCartInput!): AddProductsToCartOutput
  """Add items in the requisition list to the customer's cart."""
  addRequisitionListItemsToCart(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
    """
    An array of UIDs presenting products to be added to the cart. If no UIDs are specified, all items in the requisition list will be added to the cart.
    """
    requisitionListItemUids: [ID!]
  ): AddRequisitionListItemsToCartOutput
  """Add a comment to an existing return."""
  addReturnComment(
    """An input object that defines a return comment."""
    input: AddReturnCommentInput!
  ): AddReturnCommentOutput
  """Add tracking information to the return."""
  addReturnTracking(
    """An input object that defines tracking information."""
    input: AddReturnTrackingInput!
  ): AddReturnTrackingOutput
  """
  Add one or more simple products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addSimpleProductsToCart(
    """An input object that defines which simple products to add to the cart."""
    input: AddSimpleProductsToCartInput
  ): AddSimpleProductsToCartOutput
  """
  Add one or more virtual products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addVirtualProductsToCart(
    """
    An input object that defines which virtual products to add to the cart.
    """
    input: AddVirtualProductsToCartInput
  ): AddVirtualProductsToCartOutput
  """Add items in the specified wishlist to the customer's cart."""
  addWishlistItemsToCart(
    """The unique ID of the wish list"""
    wishlistId: ID!
    """
    An array of IDs representing products to be added to the cart. If no IDs are specified, all items in the wishlist will be added to the cart
    """
    wishlistItemIds: [ID!]
  ): AddWishlistItemsToCartOutput
  """Apply a pre-defined coupon code to the specified cart."""
  applyCouponToCart(
    """An input object that defines the coupon code to apply to the cart."""
    input: ApplyCouponToCartInput
  ): ApplyCouponToCartOutput
  """Apply a pre-defined coupon code to the specified cart."""
  applyCouponsToCart(
    """An input object that defines the coupon code to apply to the cart."""
    input: ApplyCouponsToCartInput
  ): ApplyCouponToCartOutput
  """Apply a pre-defined gift card code to the specified cart."""
  applyGiftCardToCart(
    """An input object that specifies the gift card code and cart."""
    input: ApplyGiftCardToCartInput
  ): ApplyGiftCardToCartOutput
  """
  Apply all available points, up to the cart total. Partial redemption is not available.
  """
  applyRewardPointsToCart(cartId: ID!): ApplyRewardPointsToCartOutput
  """Apply store credit to the specified cart."""
  applyStoreCreditToCart(
    """An input object that specifies the cart ID."""
    input: ApplyStoreCreditToCartInput!
  ): ApplyStoreCreditToCartOutput
  """Approve purchase orders."""
  approvePurchaseOrders(input: PurchaseOrdersActionInput!): PurchaseOrdersActionOutput
  """Assign the specified compare list to the logged in customer."""
  assignCompareListToCustomer(
    """The unique ID of the compare list to be assigned."""
    uid: ID!
  ): AssignCompareListToCustomerOutput
  """Assign a logged-in customer to the specified guest shopping cart."""
  assignCustomerToGuestCart(cart_id: String!): Cart!
  """Cancel a negotiable quote template"""
  cancelNegotiableQuoteTemplate(
    """An input object that cancels a negotiable quote template."""
    input: CancelNegotiableQuoteTemplateInput!
  ): NegotiableQuoteTemplate
  """Cancel the specified customer order."""
  cancelOrder(input: CancelOrderInput!): CancelOrderOutput
  """Cancel purchase orders."""
  cancelPurchaseOrders(input: PurchaseOrdersActionInput!): PurchaseOrdersActionOutput
  """Change the password for the logged-in customer."""
  changeCustomerPassword(
    """The customer's original password."""
    currentPassword: String!
    """The customer's updated password."""
    newPassword: String!
  ): Customer
  """Remove all items from the specified cart."""
  clearCart(
    """An input object that defines cart ID of the shopper."""
    input: ClearCartInput!
  ): ClearCartOutput!
  """Remove all items from the specified cart."""
  clearCustomerCart(
    """The masked ID of the cart."""
    cartUid: String!
  ): ClearCustomerCartOutput
  """
  Mark a negotiable quote as closed. The negotiable quote is still visible on the storefront.
  """
  closeNegotiableQuotes(
    """An input object that closes a negotiable quote."""
    input: CloseNegotiableQuotesInput!
  ): CloseNegotiableQuotesOutput
  """Confirms the email address for a customer."""
  confirmEmail(
    """An input object to identify the customer to confirm the email."""
    input: ConfirmEmailInput!
  ): CustomerOutput
  """Send a 'Contact Us' email to the merchant."""
  contactUs(
    """An input object that defines shopper information."""
    input: ContactUsInput!
  ): ContactUsOutput
  """Copy items from one requisition list to another."""
  copyItemsBetweenRequisitionLists(
    """The unique ID of the source requisition list."""
    sourceRequisitionListUid: ID!
    """
    The unique ID of the destination requisition list. If null, a new requisition list will be created.
    """
    destinationRequisitionListUid: ID
    """The list of products to copy."""
    requisitionListItem: CopyItemsBetweenRequisitionListsInput
  ): CopyItemsFromRequisitionListsOutput
  """
  Copy products from one wish list to another. The original wish list is unchanged.
  """
  copyProductsBetweenWishlists(
    """The ID of the original wish list."""
    sourceWishlistUid: ID!
    """The ID of the target wish list."""
    destinationWishlistUid: ID!
    """An array of items to copy."""
    wishlistItems: [WishlistItemCopyInput!]!
  ): CopyProductsBetweenWishlistsOutput
  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!
  """
  Creates Client Token for Braintree PayPal Javascript SDK initialization.
  """
  createBraintreePayPalClientToken: String!
  """
  Creates Client Token for Braintree PayPal Vault Javascript SDK initialization.
  """
  createBraintreePayPalVaultClientToken(input: BraintreeVaultInput): String!
  """Create a company at the request of either a customer or a guest."""
  createCompany(input: CompanyCreateInput!): CreateCompanyOutput
  """Create a new company role."""
  createCompanyRole(input: CompanyRoleCreateInput!): CreateCompanyRoleOutput
  """
  Create a new team for the customer's company within the current company context.
  """
  createCompanyTeam(input: CompanyTeamCreateInput!): CreateCompanyTeamOutput
  """Create a new company user at the request of an existing customer."""
  createCompanyUser(input: CompanyUserCreateInput!): CreateCompanyUserOutput
  """
  Create a new compare list. The compare list is saved for logged in customers.
  """
  createCompareList(input: CreateCompareListInput): CompareList
  """Use `createCustomerV2` instead."""
  createCustomer(
    """An input object that defines the customer to be created."""
    input: CustomerInput!
  ): CustomerOutput
  """Create a billing or shipping address for a customer or guest."""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress
  """Create a customer account."""
  createCustomerV2(
    """An input object that defines the customer to be created."""
    input: CustomerCreateInput!
  ): CustomerOutput
  """Create an empty shopping cart for a guest or logged in user"""
  createEmptyCart(
    """An optional input object that assigns the specified ID to the cart."""
    input: createEmptyCartInput
  ): String @deprecated(reason: "Use `Mutation.createGuestCart` or `Query.customerCart` for logged in customer")
  """Create a gift registry on behalf of the customer."""
  createGiftRegistry(
    """An input object that defines a new gift registry."""
    giftRegistry: CreateGiftRegistryInput!
  ): CreateGiftRegistryOutput
  """Create a new shopping cart"""
  createGuestCart(input: CreateGuestCartInput): CreateGuestCartOutput
  """
  Initiate a transaction and receive a token. Use this mutation for Payflow Pro and Payments Pro payment methods
  """
  createPayflowProToken(
    """
    An input object that defines the requirements to fetch payment token information.
    """
    input: PayflowProTokenInput!
  ): CreatePayflowProTokenOutput
  """Creates a payment order for further payment processing"""
  createPaymentOrder(
    """
    Contains payment order details that are used while processing the payment order
    """
    input: CreatePaymentOrderInput!
  ): CreatePaymentOrderOutput
  """
  Initiate an Express Checkout transaction and receive a token. Use this mutation for Express Checkout and Payments Standard payment methods.
  """
  createPaypalExpressToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PaypalExpressTokenInput!
  ): PaypalExpressTokenOutput
  """Create a product review for the specified product."""
  createProductReview(
    """
    An input object that contains the details necessary to create a product review.
    """
    input: CreateProductReviewInput!
  ): CreateProductReviewOutput!
  """Create a purchase order approval rule."""
  createPurchaseOrderApprovalRule(input: PurchaseOrderApprovalRuleInput!): PurchaseOrderApprovalRule
  """Create an empty requisition list."""
  createRequisitionList(input: CreateRequisitionListInput): CreateRequisitionListOutput
  """Creates a vault payment token"""
  createVaultCardPaymentToken(
    """Describe the variables needed to create a vault card payment token"""
    input: CreateVaultCardPaymentTokenInput!
  ): CreateVaultCardPaymentTokenOutput
  """Creates a vault card setup token"""
  createVaultCardSetupToken(
    """Describe the variables needed to create a vault card setup token"""
    input: CreateVaultCardSetupTokenInput!
  ): CreateVaultCardSetupTokenOutput
  """Create a new wish list."""
  createWishlist(
    """An input object that defines a new wish list."""
    input: CreateWishlistInput!
  ): CreateWishlistOutput
  """Delete the specified company role."""
  deleteCompanyRole(id: ID!): DeleteCompanyRoleOutput
  """Delete the specified company team."""
  deleteCompanyTeam(id: ID!): DeleteCompanyTeamOutput
  """Delete the specified company user."""
  deleteCompanyUser(id: ID!): DeleteCompanyUserOutput @deprecated(reason: "Use deleteCompanyUserV2 instead. The current method only deactivates the user account associated with the company.")
  """Delete the specified company user."""
  deleteCompanyUserV2(id: ID!): DeleteCompanyUserOutput
  """Delete the specified compare list."""
  deleteCompareList(
    """The unique ID of the compare list to be deleted."""
    uid: ID!
  ): DeleteCompareListOutput
  """Delete customer account"""
  deleteCustomer: Boolean
  """Delete the billing or shipping address of a customer."""
  deleteCustomerAddress(
    """The ID of the customer address to be deleted."""
    id: Int!
  ): Boolean
  """Delete a negotiable quote template"""
  deleteNegotiableQuoteTemplate(
    """An input object that cancels a negotiable quote template."""
    input: DeleteNegotiableQuoteTemplateInput!
  ): Boolean!
  """
  Delete a negotiable quote. The negotiable quote will not be displayed on the storefront.
  """
  deleteNegotiableQuotes(
    """An input object that deletes a negotiable quote."""
    input: DeleteNegotiableQuotesInput!
  ): DeleteNegotiableQuotesOutput
  """Delete a customer's payment token."""
  deletePaymentToken(
    """The reusable payment token securely stored in the vault."""
    public_hash: String!
  ): DeletePaymentTokenOutput
  """Delete existing purchase order approval rules."""
  deletePurchaseOrderApprovalRule(input: DeletePurchaseOrderApprovalRuleInput!): DeletePurchaseOrderApprovalRuleOutput
  """Delete a requisition list."""
  deleteRequisitionList(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
  ): DeleteRequisitionListOutput
  """Delete items from a requisition list."""
  deleteRequisitionListItems(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
    """
    An array of UIDs representing products to be removed from the requisition list.
    """
    requisitionListItemUids: [ID!]!
  ): DeleteRequisitionListItemsOutput
  """
  Delete the specified wish list. You cannot delete the customer's default (first) wish list.
  """
  deleteWishlist(
    """The ID of the wish list to delete."""
    wishlistId: ID!
  ): DeleteWishlistOutput
  """Negotiable Quote resulting from duplication operation."""
  duplicateNegotiableQuote(
    """An input object that defines ID of the quote to be duplicated."""
    input: DuplicateNegotiableQuoteInput!
  ): DuplicateNegotiableQuoteOutput
  """Estimate shipping method(s) for cart based on address"""
  estimateShippingMethods(
    """
    An input object that specifies details for estimation of available shipping methods
    """
    input: EstimateTotalsInput!
  ): [AvailableShippingMethod]
  """Estimate totals for cart based on the address"""
  estimateTotals(
    """An input object that specifies details for cart totals estimation"""
    input: EstimateTotalsInput!
  ): EstimateTotalsOutput!
  """Generate a token for specified customer."""
  generateCustomerToken(
    """The customer's email address."""
    email: String!
    """The customer's password."""
    password: String!
  ): CustomerToken
  """
  Request a customer token so that an administrator can perform remote shopping assistance.
  """
  generateCustomerTokenAsAdmin(
    """An input object that defines the customer email address."""
    input: GenerateCustomerTokenAsAdminInput!
  ): GenerateCustomerTokenAsAdminOutput
  """Generate a negotiable quote from an accept quote template."""
  generateNegotiableQuoteFromTemplate(
    """
    An input object that contains the data to generate a negotiable quote from quote template.
    """
    input: GenerateNegotiableQuoteFromTemplateInput!
  ): GenerateNegotiableQuoteFromTemplateOutput
  """
  Handle a payment response and save the payment in Quote. Use this mutation for Payflow Pro and Payments Pro payment methods.
  """
  handlePayflowProResponse(
    """
    An input object that includes the payload returned by PayPal and the cart ID.
    """
    input: PayflowProResponseInput!
  ): PayflowProResponseOutput
  """
  Transfer the contents of a guest cart into the cart of a logged-in customer.
  """
  mergeCarts(
    """The guest's cart ID before they login."""
    source_cart_id: String!
    """The cart ID after the guest logs in."""
    destination_cart_id: String
  ): Cart!
  """Move all items from the cart to a gift registry."""
  moveCartItemsToGiftRegistry(
    """
    The unique ID of the cart containing items to be moved to a gift registry.
    """
    cartUid: ID!
    """The unique ID of the target gift registry."""
    giftRegistryUid: ID!
  ): MoveCartItemsToGiftRegistryOutput
  """Move Items from one requisition list to another."""
  moveItemsBetweenRequisitionLists(
    """The unique ID of the source requisition list."""
    sourceRequisitionListUid: ID!
    """
    The unique ID of the destination requisition list. If null, a new requisition list will be created.
    """
    destinationRequisitionListUid: ID
    """The list of products to move."""
    requisitionListItem: MoveItemsBetweenRequisitionListsInput
  ): MoveItemsBetweenRequisitionListsOutput
  """Move negotiable quote item to requisition list."""
  moveLineItemToRequisitionList(
    """
    An input object that defines the quote item and requisition list moved to.
    """
    input: MoveLineItemToRequisitionListInput!
  ): MoveLineItemToRequisitionListOutput
  """Move products from one wish list to another."""
  moveProductsBetweenWishlists(
    """The ID of the original wish list."""
    sourceWishlistUid: ID!
    """The ID of the target wish list."""
    destinationWishlistUid: ID!
    """An array of items to move."""
    wishlistItems: [WishlistItemMoveInput!]!
  ): MoveProductsBetweenWishlistsOutput
  """Open an existing negotiable quote template."""
  openNegotiableQuoteTemplate(
    """
    An input object that contains the data to open a negotiable quote template.
    """
    input: OpenNegotiableQuoteTemplateInput!
  ): NegotiableQuoteTemplate
  """Convert a negotiable quote into an order."""
  placeNegotiableQuoteOrder(
    """An input object that specifies the negotiable quote."""
    input: PlaceNegotiableQuoteOrderInput!
  ): PlaceNegotiableQuoteOrderOutput
  """Convert the quote into an order."""
  placeOrder(
    """An input object that defines the shopper's cart ID."""
    input: PlaceOrderInput
  ): PlaceOrderOutput
  """Convert the purchase order into an order."""
  placeOrderForPurchaseOrder(input: PlaceOrderForPurchaseOrderInput!): PlaceOrderForPurchaseOrderOutput
  """Place a purchase order."""
  placePurchaseOrder(input: PlacePurchaseOrderInput!): PlacePurchaseOrderOutput
  """Redeem a gift card for store credit."""
  redeemGiftCardBalanceAsStoreCredit(
    """An input object that specifies the gift card code to redeem."""
    input: GiftCardAccountInput!
  ): GiftCardAccount
  """Reject purchase orders."""
  rejectPurchaseOrders(input: PurchaseOrdersActionInput!): PurchaseOrdersActionOutput
  """
  Remove a previously-applied coupon from the cart. The cart must contain at least one item in order to remove the coupon.
  """
  removeCouponFromCart(
    """
    An input object that defines which coupon code to remove from the cart.
    """
    input: RemoveCouponFromCartInput
  ): RemoveCouponFromCartOutput
  """
  Remove a previously-applied coupon from the cart. The cart must contain at least one item in order to remove the coupon.
  """
  removeCouponsFromCart(
    """
    An input object that defines which coupon code to remove from the cart.
    """
    input: RemoveCouponsFromCartInput
  ): RemoveCouponFromCartOutput
  """Removes a gift card from the cart."""
  removeGiftCardFromCart(
    """
    An input object that specifies which gift card code to remove from the cart.
    """
    input: RemoveGiftCardFromCartInput
  ): RemoveGiftCardFromCartOutput
  """Delete the specified gift registry."""
  removeGiftRegistry(
    """The unique ID of the gift registry to delete."""
    giftRegistryUid: ID!
  ): RemoveGiftRegistryOutput
  """Delete the specified items from a gift registry."""
  removeGiftRegistryItems(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """An array of item IDs to remove from the gift registry."""
    itemsUid: [ID!]!
  ): RemoveGiftRegistryItemsOutput
  """Removes registrants from a gift registry."""
  removeGiftRegistryRegistrants(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """An array of registrant IDs to remove."""
    registrantsUid: [ID!]!
  ): RemoveGiftRegistryRegistrantsOutput
  """
  Delete the entire quantity of a specified item from the cart. If you remove all items from the cart, the cart continues to exist.
  """
  removeItemFromCart(
    """An input object that defines which products to remove from the cart."""
    input: RemoveItemFromCartInput
  ): RemoveItemFromCartOutput
  """Remove one or more products from a negotiable quote."""
  removeNegotiableQuoteItems(
    """
    An input object that removes one or more items from a negotiable quote.
    """
    input: RemoveNegotiableQuoteItemsInput!
  ): RemoveNegotiableQuoteItemsOutput
  """Remove one or more products from a negotiable quote template."""
  removeNegotiableQuoteTemplateItems(
    """
    An input object that removes one or more items from a negotiable quote template.
    """
    input: RemoveNegotiableQuoteTemplateItemsInput!
  ): NegotiableQuoteTemplate
  """Remove products from the specified compare list."""
  removeProductsFromCompareList(
    """
    An input object that defines which products to remove from a compare list.
    """
    input: RemoveProductsFromCompareListInput
  ): CompareList
  """Remove one or more products from the specified wish list."""
  removeProductsFromWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of item IDs representing products to be removed."""
    wishlistItemsIds: [ID!]!
  ): RemoveProductsFromWishlistOutput
  """Remove a tracked shipment from a return."""
  removeReturnTracking(
    """An input object that removes tracking information."""
    input: RemoveReturnTrackingInput!
  ): RemoveReturnTrackingOutput
  """Cancel the application of reward points to the cart."""
  removeRewardPointsFromCart(cartId: ID!): RemoveRewardPointsFromCartOutput
  """Remove store credit that has been applied to the specified cart."""
  removeStoreCreditFromCart(
    """An input object that specifies the cart ID."""
    input: RemoveStoreCreditFromCartInput!
  ): RemoveStoreCreditFromCartOutput
  """Rename negotiable quote."""
  renameNegotiableQuote(
    """An input object that defines the quote item name and comment."""
    input: RenameNegotiableQuoteInput!
  ): RenameNegotiableQuoteOutput
  """Add all products from a customer's previous order to the cart."""
  reorderItems(orderNumber: String!): ReorderItemsOutput
  """Request a new negotiable quote on behalf of the buyer."""
  requestNegotiableQuote(
    """
    An input object that contains a request to initiate a negotiable quote.
    """
    input: RequestNegotiableQuoteInput!
  ): RequestNegotiableQuoteOutput
  """Request a new negotiable quote on behalf of the buyer."""
  requestNegotiableQuoteTemplateFromQuote(
    """
    An input object that contains a request to initiate a negotiable quote template.
    """
    input: RequestNegotiableQuoteTemplateInput!
  ): NegotiableQuoteTemplate
  """
  Request an email with a reset password token for the registered customer identified by the specified email.
  """
  requestPasswordResetEmail(
    """The customer's email address."""
    email: String!
  ): Boolean
  """Initiates a buyer's request to return items for replacement or refund."""
  requestReturn(
    """
    An input object that contains the fields needed to start a return request.
    """
    input: RequestReturnInput!
  ): RequestReturnOutput
  """
  Reset a customer's password using the reset password token that the customer received in an email after requesting it using `requestPasswordResetEmail`.
  """
  resetPassword(
    """The customer's email address."""
    email: String!
    """A runtime token generated by the `requestPasswordResetEmail` mutation."""
    resetPasswordToken: String!
    """The customer's new password."""
    newPassword: String!
  ): Boolean
  """Revoke the customer token."""
  revokeCustomerToken: RevokeCustomerTokenOutput
  """
  Send a message on behalf of a customer to the specified email addresses.
  """
  sendEmailToFriend(
    """An input object that defines sender, recipients, and product."""
    input: SendEmailToFriendInput
  ): SendEmailToFriendOutput
  """Send the negotiable quote to the seller for review."""
  sendNegotiableQuoteForReview(
    """
    An input object that sends a request for the merchant to review a negotiable quote.
    """
    input: SendNegotiableQuoteForReviewInput!
  ): SendNegotiableQuoteForReviewOutput
  """Set the billing address on a specific cart."""
  setBillingAddressOnCart(
    """
    An input object that defines the billing address to be assigned to the cart.
    """
    input: SetBillingAddressOnCartInput
  ): SetBillingAddressOnCartOutput
  """
  Set gift options, including gift messages, gift wrapping, gift receipts, and printed cards.
  """
  setGiftOptionsOnCart(
    """An input object that defines the selected gift options."""
    input: SetGiftOptionsOnCartInput
  ): SetGiftOptionsOnCartOutput
  """Assign the email address of a guest to the cart."""
  setGuestEmailOnCart(
    """An input object that defines a guest email address."""
    input: SetGuestEmailOnCartInput
  ): SetGuestEmailOnCartOutput
  """Add buyer's note to a negotiable quote item."""
  setLineItemNote(
    """An input object that defines the quote item note."""
    input: LineItemNoteInput!
  ): SetLineItemNoteOutput
  """Assign a billing address to a negotiable quote."""
  setNegotiableQuoteBillingAddress(
    """
    An input object that defines the billing address to be assigned to a negotiable quote.
    """
    input: SetNegotiableQuoteBillingAddressInput!
  ): SetNegotiableQuoteBillingAddressOutput
  """Set the payment method on a negotiable quote."""
  setNegotiableQuotePaymentMethod(
    """
    An input object that defines the payment method for the specified negotiable quote.
    """
    input: SetNegotiableQuotePaymentMethodInput!
  ): SetNegotiableQuotePaymentMethodOutput
  """
  Assign a previously-defined address as the shipping address for a negotiable quote.
  """
  setNegotiableQuoteShippingAddress(
    """
    An input object that defines the shipping address to be assigned to a negotiable quote.
    """
    input: SetNegotiableQuoteShippingAddressInput!
  ): SetNegotiableQuoteShippingAddressOutput
  """Assign the shipping methods on the negotiable quote."""
  setNegotiableQuoteShippingMethods(
    """
    An input object that defines the shipping methods to be assigned to a negotiable quote.
    """
    input: SetNegotiableQuoteShippingMethodsInput!
  ): SetNegotiableQuoteShippingMethodsOutput
  """
  Assign a previously-defined address as the shipping address for a negotiable quote template.
  """
  setNegotiableQuoteTemplateShippingAddress(
    """
    An input object that defines the shipping address to be assigned to a negotiable quote template.
    """
    input: SetNegotiableQuoteTemplateShippingAddressInput!
  ): NegotiableQuoteTemplate
  """Set the cart payment method and convert the cart into an order."""
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")
  """Apply a payment method to the cart."""
  setPaymentMethodOnCart(
    """
    An input object that defines which payment method to apply to the cart.
    """
    input: SetPaymentMethodOnCartInput
  ): SetPaymentMethodOnCartOutput
  """Add buyer's note to a negotiable quote template item."""
  setQuoteTemplateLineItemNote(
    """An input object that defines the quote template item note."""
    input: QuoteTemplateLineItemNoteInput!
  ): NegotiableQuoteTemplate
  """Set one or more shipping addresses on a specific cart."""
  setShippingAddressesOnCart(
    """
    An input object that defines one or more shipping addresses to be assigned to the cart.
    """
    input: SetShippingAddressesOnCartInput
  ): SetShippingAddressesOnCartOutput
  """Set one or more delivery methods on a cart."""
  setShippingMethodsOnCart(
    """An input object that applies one or more shipping methods to the cart."""
    input: SetShippingMethodsOnCartInput
  ): SetShippingMethodsOnCartOutput
  """Send an email about the gift registry to a list of invitees."""
  shareGiftRegistry(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """The sender's email address and gift message."""
    sender: ShareGiftRegistrySenderInput!
    """An array containing invitee names and email addresses."""
    invitees: [ShareGiftRegistryInviteeInput!]!
  ): ShareGiftRegistryOutput
  """Accept an existing negotiable quote template."""
  submitNegotiableQuoteTemplateForReview(
    """
    An input object that contains the data to update a negotiable quote template.
    """
    input: SubmitNegotiableQuoteTemplateForReviewInput!
  ): NegotiableQuoteTemplate
  """Subscribe the specified email to the store's newsletter."""
  subscribeEmailToNewsletter(
    """The email address that will receive the store's newsletter."""
    email: String!
  ): SubscribeEmailToNewsletterOutput
  """Synchronizes the payment order details for further payment processing"""
  syncPaymentOrder(
    """
    Describes the variables needed to synchronize the payment order details
    """
    input: SyncPaymentOrderInput
  ): Boolean
  """Modify items in the cart."""
  updateCartItems(
    """An input object that defines products to be updated."""
    input: UpdateCartItemsInput
  ): UpdateCartItemsOutput
  """Update company information."""
  updateCompany(input: CompanyUpdateInput!): UpdateCompanyOutput
  """Update company role information."""
  updateCompanyRole(input: CompanyRoleUpdateInput!): UpdateCompanyRoleOutput
  """
  Change the parent node of a company team within the current company context.
  """
  updateCompanyStructure(input: CompanyStructureUpdateInput!): UpdateCompanyStructureOutput
  """Update company team data."""
  updateCompanyTeam(input: CompanyTeamUpdateInput!): UpdateCompanyTeamOutput
  """Update an existing company user."""
  updateCompanyUser(input: CompanyUserUpdateInput!): UpdateCompanyUserOutput
  """Use `updateCustomerV2` instead."""
  updateCustomer(
    """An input object that defines the customer characteristics to update."""
    input: CustomerInput!
  ): CustomerOutput
  """Update the billing or shipping address of a customer or guest."""
  updateCustomerAddress(
    """The ID assigned to the customer address."""
    id: Int!
    """An input object that contains changes to the customer address."""
    input: CustomerAddressInput
  ): CustomerAddress
  """Change the email address for the logged-in customer."""
  updateCustomerEmail(
    """The customer's email address."""
    email: String!
    """The customer's password."""
    password: String!
  ): CustomerOutput
  """Update the customer's personal information."""
  updateCustomerV2(
    """An input object that defines the customer characteristics to update."""
    input: CustomerUpdateInput!
  ): CustomerOutput
  """Update the specified gift registry."""
  updateGiftRegistry(
    """The unique ID of an existing gift registry."""
    giftRegistryUid: ID!
    """An input object that defines which fields to update."""
    giftRegistry: UpdateGiftRegistryInput!
  ): UpdateGiftRegistryOutput
  """Update the specified items in the gift registry."""
  updateGiftRegistryItems(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """An array of items to be updated."""
    items: [UpdateGiftRegistryItemInput!]!
  ): UpdateGiftRegistryItemsOutput
  """Modify the properties of one or more gift registry registrants."""
  updateGiftRegistryRegistrants(
    """The unique ID of the gift registry."""
    giftRegistryUid: ID!
    """An array of registrants to update."""
    registrants: [UpdateGiftRegistryRegistrantInput!]!
  ): UpdateGiftRegistryRegistrantsOutput
  """
  Change the quantity of one or more items in an existing negotiable quote.
  """
  updateNegotiableQuoteQuantities(
    """
    An input object that changes the quantity of one or more items in a negotiable quote.
    """
    input: UpdateNegotiableQuoteQuantitiesInput!
  ): UpdateNegotiableQuoteItemsQuantityOutput
  """
  Change the quantity of one or more items in an existing negotiable quote template.
  """
  updateNegotiableQuoteTemplateQuantities(
    """
    An input object that changes the quantity of one or more items in a negotiable quote template.
    """
    input: UpdateNegotiableQuoteTemplateQuantitiesInput!
  ): UpdateNegotiableQuoteTemplateItemsQuantityOutput
  """Update one or more products in the specified wish list."""
  updateProductsInWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of items to be updated."""
    wishlistItems: [WishlistItemUpdateInput!]!
  ): UpdateProductsInWishlistOutput
  """Update existing purchase order approval rules."""
  updatePurchaseOrderApprovalRule(input: UpdatePurchaseOrderApprovalRuleInput!): PurchaseOrderApprovalRule
  """Rename a requisition list and change its description."""
  updateRequisitionList(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
    input: UpdateRequisitionListInput
  ): UpdateRequisitionListOutput
  """Update items in a requisition list."""
  updateRequisitionListItems(
    """The unique ID of the requisition list."""
    requisitionListUid: ID!
    """Items to be updated in the requisition list."""
    requisitionListItems: [UpdateRequisitionListItemsInput!]!
  ): UpdateRequisitionListItemsOutput
  """Change the name and visibility of the specified wish list."""
  updateWishlist(
    """The ID of the wish list to update."""
    wishlistId: ID!
    """The name assigned to the wish list."""
    name: String
    """Indicates the visibility of the wish list."""
    visibility: WishlistVisibilityEnum
  ): UpdateWishlistOutput
  """Validate purchase orders."""
  validatePurchaseOrders(input: ValidatePurchaseOrdersInput!): ValidatePurchaseOrdersOutput
}

"""Defines the comparison operators that can be used in a filter."""
input FilterTypeInput {
  """Equals."""
  eq: String
  finset: [String]
  """From. Must be used with the `to` field."""
  from: String
  """Greater than."""
  gt: String
  """Greater than or equal to."""
  gteq: String
  """In. The value can contain a set of comma-separated values."""
  in: [String]
  """
  Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters.
  """
  like: String
  """Less than."""
  lt: String
  """Less than or equal to."""
  lteq: String
  """More than or equal to."""
  moreq: String
  """Not equal to."""
  neq: String
  """Not in. The value can contain a set of comma-separated values."""
  nin: [String]
  """Not null."""
  notnull: String
  """Is null."""
  null: String
  """To. Must be used with the `from` field."""
  to: String
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """
  Use this attribute to exactly match the specified string. For example, to filter on a specific category ID, specify a value such as `5`.
  """
  eq: String
  """
  Use this attribute to filter on an array of values. For example, to filter on category IDs 4, 5, and 6, specify a value of `["4", "5", "6"]`.
  """
  in: [String]
}

"""
Defines a filter that matches a range of values, such as prices or dates.
"""
input FilterRangeTypeInput {
  """Use this attribute to specify the lowest possible value in the range."""
  from: String
  """Use this attribute to specify the highest possible value in the range."""
  to: String
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """
  Use this attribute to fuzzy match the specified string. For example, to filter on a specific SKU, specify a value such as `24-MB01`.
  """
  match: String
  """
  Filter match type for fine-tuned results. Possible values FULL or PARTIAL. If match_type is not provided, returned results will default to FULL match.
  """
  match_type: FilterMatchTypeEnum
}

enum FilterMatchTypeEnum {
  FULL
  PARTIAL
}

"""Defines a filter for an input string."""
input FilterStringTypeInput {
  """Filters items that are exactly the same as the specified string."""
  eq: String
  """
  Filters items that are exactly the same as entries specified in an array of strings.
  """
  in: [String]
  """
  Defines a filter that performs a fuzzy search using the specified string.
  """
  match: String
}

"""Provides navigation for the query response."""
type SearchResultPageInfo {
  """The specific page to return."""
  current_page: Int
  """The maximum number of items to return per page of results."""
  page_size: Int
  """The total number of pages in the response."""
  total_pages: Int
}

"""Indicates whether to return results in ascending or descending order."""
enum SortEnum {
  ASC
  DESC
}

type ComplexTextValue {
  """Text that can contain HTML tags."""
  html: String!
}

"""
Defines a monetary value, including a numeric value and a currency code.
"""
type Money {
  """A three-letter currency code, such as USD or EUR."""
  currency: CurrencyEnum
  """A number expressing a monetary value."""
  value: Float
}

"""The list of available currency codes."""
enum CurrencyEnum {
  AFN
  ALL
  AZN
  DZD
  AOA
  ARS
  AMD
  AWG
  AUD
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  BMD
  BTN
  BOB
  BAM
  BWP
  BRL
  GBP
  BND
  BGN
  BUK
  BIF
  KHR
  CAD
  CVE
  CZK
  KYD
  GQE
  CLP
  CNY
  COP
  KMF
  CDF
  CRC
  HRK
  CUP
  DKK
  DJF
  DOP
  XCD
  EGP
  SVC
  ERN
  EEK
  ETB
  EUR
  FKP
  FJD
  GMD
  GEK
  GEL
  GHS
  GIP
  GTQ
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KWD
  KGS
  LAK
  LVL
  LBP
  LSL
  LRD
  LYD
  LTL
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  LSM
  MRO
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  ANG
  YTL
  NZD
  NIC
  NGN
  KPW
  NOK
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RHD
  RON
  RUB
  RWF
  SHP
  STD
  SAR
  RSD
  SCR
  SLL
  SGD
  SKK
  SBD
  SOS
  ZAR
  KRW
  LKR
  SDG
  SRD
  SZL
  SEK
  CHF
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TMM
  USD
  UGX
  UAH
  AED
  UYU
  UZS
  VUV
  VEB
  VEF
  VND
  CHE
  CHW
  XOF
  WST
  YER
  ZMK
  ZWD
  TRY
  AZM
  ROL
  TRL
  XPF
}

"""Defines a customer-entered option."""
input EnteredOptionInput {
  """
  The unique ID for a `CustomizableOptionInterface` object, such as a `CustomizableFieldOption`, `CustomizableFileOption`, or `CustomizableAreaOption` object.
  """
  uid: ID!
  """Text the customer entered."""
  value: String!
}

enum BatchMutationStatus {
  SUCCESS
  FAILURE
  MIXED_RESULTS
}

interface ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Contains an error message when an invalid UID was specified."""
type NoSuchEntityUidError implements ErrorInterface {
  """The returned error message."""
  message: String!
  """The specified invalid unique ID of an object."""
  uid: ID!
}

"""Contains an error message when an internal error occurred."""
type InternalError implements ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Defines an array of custom attributes."""
type CustomAttributeMetadata {
  """An array of attributes."""
  items: [Attribute]
}

"""Contains details about the attribute, including the code and type."""
type Attribute {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String
  """Attribute options list."""
  attribute_options: [AttributeOption]
  """The data type of the attribute."""
  attribute_type: String
  """The type of entity that defines the attribute."""
  entity_type: String
  """The frontend input type of the attribute."""
  input_type: String
  """Details about the storefront properties configured for the attribute."""
  storefront_properties: StorefrontProperties
}

"""Indicates where an attribute can be displayed."""
type StorefrontProperties {
  """
  The relative position of the attribute in the layered navigation block.
  """
  position: Int
  """
  Indicates whether the attribute is filterable with results, without results, or not at all.
  """
  use_in_layered_navigation: UseInLayeredNavigationOptions
  """Indicates whether the attribute is displayed in product listings."""
  use_in_product_listing: Boolean
  """
  Indicates whether the attribute can be used in layered navigation on search results pages.
  """
  use_in_search_results_layered_navigation: Boolean
  """Indicates whether the attribute is displayed on product pages."""
  visible_on_catalog_pages: Boolean
}

"""Defines whether the attribute is filterable in layered navigation."""
enum UseInLayeredNavigationOptions {
  NO
  FILTERABLE_WITH_RESULTS
  FILTERABLE_NO_RESULT
}

"""Defines an attribute option."""
type AttributeOption implements AttributeOptionInterface {
  """Indicates if option is set to be used as default value."""
  is_default: Boolean
  """The label assigned to the attribute option."""
  label: String
  """The unique ID of an attribute option."""
  uid: ID!
  """The attribute option value."""
  value: String
}

"""
Defines the attribute characteristics to search for the `attribute_code` and `entity_type` to search.
"""
input AttributeInput {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String
  """The type of entity that defines the attribute."""
  entity_type: String
}

"""Metadata of EAV attributes."""
type AttributesMetadataOutput {
  """Errors of retrieving certain attributes metadata."""
  errors: [AttributeMetadataError]!
  """Requested attributes metadata."""
  items: [CustomAttributeMetadataInterface]!
}

"""Attribute metadata retrieval error."""
type AttributeMetadataError {
  """Attribute metadata retrieval error message."""
  message: String!
  """Attribute metadata retrieval error type."""
  type: AttributeMetadataErrorType!
}

"""Attribute metadata retrieval error types."""
enum AttributeMetadataErrorType {
  """The requested entity was not found."""
  ENTITY_NOT_FOUND
  """The requested attribute was not found."""
  ATTRIBUTE_NOT_FOUND
  """The filter cannot be applied as it does not belong to the entity"""
  FILTER_NOT_FOUND
  """Not categorized error, see the error message."""
  UNDEFINED
}

"""An interface containing fields that define the EAV attribute."""
interface CustomAttributeMetadataInterface {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: ID!
  """Default attribute value."""
  default_value: String
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum!
  """The frontend class of the attribute."""
  frontend_class: String
  """The frontend input type of the attribute."""
  frontend_input: AttributeFrontendInputEnum
  """Whether the attribute value is required."""
  is_required: Boolean!
  """Whether the attribute value must be unique."""
  is_unique: Boolean!
  """The label assigned to the attribute."""
  label: String
  """Attribute options."""
  options: [CustomAttributeOptionInterface]!
}

interface CustomAttributeOptionInterface {
  """Is the option value default."""
  is_default: Boolean!
  """The label assigned to the attribute option."""
  label: String!
  """The attribute option value."""
  value: String!
}

"""Base EAV implementation of CustomAttributeOptionInterface."""
type AttributeOptionMetadata implements CustomAttributeOptionInterface {
  """Is the option value default."""
  is_default: Boolean!
  """The label assigned to the attribute option."""
  label: String!
  """The attribute option value."""
  value: String!
}

"""Base EAV implementation of CustomAttributeMetadataInterface."""
type AttributeMetadata implements CustomAttributeMetadataInterface {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: ID!
  """Default attribute value."""
  default_value: String
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum!
  """The frontend class of the attribute."""
  frontend_class: String
  """The frontend input type of the attribute."""
  frontend_input: AttributeFrontendInputEnum
  """Whether the attribute value is required."""
  is_required: Boolean!
  """Whether the attribute value must be unique."""
  is_unique: Boolean!
  """The label assigned to the attribute."""
  label: String
  """Attribute options."""
  options: [CustomAttributeOptionInterface]!
}

"""
List of all entity types. Populated by the modules introducing EAV entities.
"""
enum AttributeEntityTypeEnum {
  CATALOG_PRODUCT
  CATALOG_CATEGORY
  CUSTOMER
  CUSTOMER_ADDRESS
  PRODUCT
  RMA_ITEM
}

"""EAV attribute frontend input types."""
enum AttributeFrontendInputEnum {
  BOOLEAN
  DATE
  DATETIME
  FILE
  GALLERY
  HIDDEN
  IMAGE
  MEDIA_IMAGE
  MULTILINE
  MULTISELECT
  PRICE
  SELECT
  TEXT
  TEXTAREA
  WEIGHT
  UNDEFINED
}

"""Metadata of EAV attributes associated to form"""
type AttributesFormOutput {
  """Errors of retrieving certain attributes metadata."""
  errors: [AttributeMetadataError]!
  """Requested attributes metadata."""
  items: [CustomAttributeMetadataInterface]!
}

interface AttributeValueInterface {
  """The attribute code."""
  code: ID!
}

type AttributeValue implements AttributeValueInterface {
  """The attribute code."""
  code: ID!
  """The attribute value."""
  value: String!
}

type AttributeSelectedOptions implements AttributeValueInterface {
  """The attribute code."""
  code: ID!
  selected_options: [AttributeSelectedOptionInterface]!
}

interface AttributeSelectedOptionInterface {
  """The attribute selected option label."""
  label: String!
  """The attribute selected option value."""
  value: String!
}

type AttributeSelectedOption implements AttributeSelectedOptionInterface {
  """The attribute selected option label."""
  label: String!
  """The attribute selected option value."""
  value: String!
}

"""Specifies the value for attribute."""
input AttributeValueInput {
  """The code of the attribute."""
  attribute_code: String!
  """
  An array containing selected options for a select or multiselect attribute.
  """
  selected_options: [AttributeInputSelectedOption]
  """The value assigned to the attribute."""
  value: String
}

"""Specifies selected option for a select or multiselect attribute value."""
input AttributeInputSelectedOption {
  """The attribute option value."""
  value: String!
}

"""An input object that specifies the filters used for attributes."""
input AttributeFilterInput {
  """
  Whether a product or category attribute can be compared against another or not.
  """
  is_comparable: Boolean
  """Whether a product or category attribute can be filtered or not."""
  is_filterable: Boolean
  """
  Whether a product or category attribute can be filtered in search or not.
  """
  is_filterable_in_search: Boolean
  """Whether a product or category attribute can use HTML on front or not."""
  is_html_allowed_on_front: Boolean
  """Whether a product or category attribute can be searched or not."""
  is_searchable: Boolean
  """
  Whether a customer or customer address attribute is used for customer segment or not.
  """
  is_used_for_customer_segment: Boolean
  """
  Whether a product or category attribute can be used for price rules or not.
  """
  is_used_for_price_rules: Boolean
  """
  Whether a product or category attribute is used for promo rules or not.
  """
  is_used_for_promo_rules: Boolean
  """
  Whether a product or category attribute is visible in advanced search or not.
  """
  is_visible_in_advanced_search: Boolean
  """Whether a product or category attribute is visible on front or not."""
  is_visible_on_front: Boolean
  """Whether a product or category attribute has WYSIWYG enabled or not."""
  is_wysiwyg_enabled: Boolean
  """
  Whether a product or category attribute is used in product listing or not.
  """
  used_in_product_listing: Boolean
}

"""Contains information about a store's configuration."""
type StoreConfig {
  """
  Contains scripts that must be included in the HTML before the closing `<body>` tag.
  """
  absolute_footer: String
  """
  Indicates if the gift sender has the option to send a gift receipt. Possible values: 1 (Yes) and 0 (No).
  """
  allow_gift_receipt: String
  """
  Indicates whether gift wrapping can be added for the entire order. Possible values: 1 (Yes) and 0 (No).
  """
  allow_gift_wrapping_on_order: String
  """
  Indicates whether gift wrapping can be added for individual order items. Possible values: 1 (Yes) and 0 (No).
  """
  allow_gift_wrapping_on_order_items: String
  """
  Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No).
  """
  allow_guests_to_write_product_reviews: String
  """The value of the Allow Gift Messages for Order Items option"""
  allow_items: String
  """The value of the Allow Gift Messages on Order Level option"""
  allow_order: String
  """
  Indicates if a printed card can accompany an order. Possible values: 1 (Yes) and 0 (No).
  """
  allow_printed_card: String
  """
  Indicates whether to enable autocomplete on login and forgot password forms.
  """
  autocomplete_on_storefront: Boolean
  """The base currency code."""
  base_currency_code: String
  """
  A fully-qualified URL that is used to create relative links to the `base_url`.
  """
  base_link_url: String
  """The fully-qualified URL that specifies the location of media files."""
  base_media_url: String
  """
  The fully-qualified URL that specifies the location of static view files.
  """
  base_static_url: String
  """The store’s fully-qualified base URL."""
  base_url: String
  """Braintree 3D Secure, should 3D Secure be used for specific countries."""
  braintree_3dsecure_allowspecific: Boolean
  """Braintree 3D Secure, always request 3D Secure flag."""
  braintree_3dsecure_always_request_3ds: Boolean
  """
  Braintree 3D Secure, the specific countries to use 3D Secure in, to be used if allow specific is status is enabled.
  """
  braintree_3dsecure_specificcountry: String
  """
  Braintree 3D Secure, threshold above which 3D Secure should be requested.
  """
  braintree_3dsecure_threshold_amount: String
  """Braintree 3D Secure enabled/active status."""
  braintree_3dsecure_verify_3dsecure: Boolean
  """Braintree ACH vault status."""
  braintree_ach_direct_debit_vault_active: Boolean
  """Braintree Apple Pay merchant name."""
  braintree_applepay_merchant_name: String
  """Braintree Apple Pay vault status."""
  braintree_applepay_vault_active: Boolean
  """Braintree cc vault status."""
  braintree_cc_vault_active: String
  """Braintree cc vault CVV re-verification enabled status."""
  braintree_cc_vault_cvv: Boolean
  """Braintree environment."""
  braintree_environment: String
  """Braintree Google Pay button color."""
  braintree_googlepay_btn_color: String
  """Braintree Google Pay Card types supported."""
  braintree_googlepay_cctypes: String
  """Braintree Google Pay merchant ID."""
  braintree_googlepay_merchant_id: String
  """Braintree Google Pay vault status."""
  braintree_googlepay_vault_active: Boolean
  """Braintree Local Payment Methods allowed payment methods."""
  braintree_local_payment_allowed_methods: String
  """Braintree Local Payment Methods fallback button text."""
  braintree_local_payment_fallback_button_text: String
  """Braintree Local Payment Methods redirect URL on failed payment."""
  braintree_local_payment_redirect_on_fail: String
  """Braintree Merchant Account ID."""
  braintree_merchant_account_id: String
  """Braintree PayPal Credit mini-cart & cart button style color."""
  braintree_paypal_button_location_cart_type_credit_color: String
  """Braintree PayPal Credit mini-cart & cart button style label."""
  braintree_paypal_button_location_cart_type_credit_label: String
  """Braintree PayPal Credit mini-cart & cart button style shape."""
  braintree_paypal_button_location_cart_type_credit_shape: String
  """Braintree PayPal Credit mini-cart & cart button show status."""
  braintree_paypal_button_location_cart_type_credit_show: Boolean
  """Braintree PayPal Pay Later messaging mini-cart & cart style layout."""
  braintree_paypal_button_location_cart_type_messaging_layout: String
  """Braintree PayPal Pay Later messaging mini-cart & cart style logo."""
  braintree_paypal_button_location_cart_type_messaging_logo: String
  """
  Braintree PayPal Pay Later messaging mini-cart & cart style logo position.
  """
  braintree_paypal_button_location_cart_type_messaging_logo_position: String
  """Braintree PayPal Pay Later messaging mini-cart & cart show status."""
  braintree_paypal_button_location_cart_type_messaging_show: Boolean
  """Braintree PayPal Pay Later messaging checkout style text color."""
  braintree_paypal_button_location_cart_type_messaging_text_color: String
  """Braintree PayPal Pay Later mini-cart & cart button style color."""
  braintree_paypal_button_location_cart_type_paylater_color: String
  """Braintree PayPal Pay Later mini-cart & cart button style label."""
  braintree_paypal_button_location_cart_type_paylater_label: String
  """Braintree PayPal Pay Later mini-cart & cart button style shape."""
  braintree_paypal_button_location_cart_type_paylater_shape: String
  """Braintree PayPal Pay Later mini-cart & cart button show status."""
  braintree_paypal_button_location_cart_type_paylater_show: Boolean
  """Braintree PayPal mini-cart & cart button style color."""
  braintree_paypal_button_location_cart_type_paypal_color: String
  """Braintree PayPal mini-cart & cart button style label."""
  braintree_paypal_button_location_cart_type_paypal_label: String
  """Braintree PayPal mini-cart & cart button style shape."""
  braintree_paypal_button_location_cart_type_paypal_shape: String
  """Braintree PayPal mini-cart & cart button show."""
  braintree_paypal_button_location_cart_type_paypal_show: Boolean
  """Braintree PayPal Credit checkout button style color."""
  braintree_paypal_button_location_checkout_type_credit_color: String
  """Braintree PayPal Credit checkout button style label."""
  braintree_paypal_button_location_checkout_type_credit_label: String
  """Braintree PayPal Credit checkout button style shape."""
  braintree_paypal_button_location_checkout_type_credit_shape: String
  """Braintree PayPal Credit checkout button show status."""
  braintree_paypal_button_location_checkout_type_credit_show: Boolean
  """Braintree PayPal Pay Later messaging checkout style layout."""
  braintree_paypal_button_location_checkout_type_messaging_layout: String
  """Braintree PayPal Pay Later messaging checkout style logo."""
  braintree_paypal_button_location_checkout_type_messaging_logo: String
  """Braintree PayPal Pay Later messaging checkout style logo position."""
  braintree_paypal_button_location_checkout_type_messaging_logo_position: String
  """Braintree PayPal Pay Later messaging checkout show status."""
  braintree_paypal_button_location_checkout_type_messaging_show: Boolean
  """Braintree PayPal Pay Later messaging checkout style text color."""
  braintree_paypal_button_location_checkout_type_messaging_text_color: String
  """Braintree PayPal Pay Later checkout button style color."""
  braintree_paypal_button_location_checkout_type_paylater_color: String
  """Braintree PayPal Pay Later checkout button style label."""
  braintree_paypal_button_location_checkout_type_paylater_label: String
  """Braintree PayPal Pay Later checkout button style shape."""
  braintree_paypal_button_location_checkout_type_paylater_shape: String
  """Braintree PayPal Pay Later checkout button show status."""
  braintree_paypal_button_location_checkout_type_paylater_show: Boolean
  """Braintree PayPal checkout button style color."""
  braintree_paypal_button_location_checkout_type_paypal_color: String
  """Braintree PayPal checkout button style label."""
  braintree_paypal_button_location_checkout_type_paypal_label: String
  """Braintree PayPal checkout button style shape."""
  braintree_paypal_button_location_checkout_type_paypal_shape: String
  """Braintree PayPal checkout button show."""
  braintree_paypal_button_location_checkout_type_paypal_show: Boolean
  """Braintree PayPal Credit PDP button style color."""
  braintree_paypal_button_location_productpage_type_credit_color: String
  """Braintree PayPal Credit PDP button style label."""
  braintree_paypal_button_location_productpage_type_credit_label: String
  """Braintree PayPal Credit PDP button style shape."""
  braintree_paypal_button_location_productpage_type_credit_shape: String
  """Braintree PayPal Credit PDP button show status."""
  braintree_paypal_button_location_productpage_type_credit_show: Boolean
  """Braintree PayPal Pay Later messaging PDP style layout."""
  braintree_paypal_button_location_productpage_type_messaging_layout: String
  """Braintree PayPal Pay Later messaging PDP style logo."""
  braintree_paypal_button_location_productpage_type_messaging_logo: String
  """Braintree PayPal Pay Later messaging PDP style logo position."""
  braintree_paypal_button_location_productpage_type_messaging_logo_position: String
  """Braintree PayPal Pay Later messaging PDP show status."""
  braintree_paypal_button_location_productpage_type_messaging_show: Boolean
  """Braintree PayPal Pay Later messaging PDP style text color."""
  braintree_paypal_button_location_productpage_type_messaging_text_color: String
  """Braintree PayPal Pay Later PDP button style color."""
  braintree_paypal_button_location_productpage_type_paylater_color: String
  """Braintree PayPal Pay Later PDP button style label."""
  braintree_paypal_button_location_productpage_type_paylater_label: String
  """Braintree PayPal Pay Later PDP button style shape."""
  braintree_paypal_button_location_productpage_type_paylater_shape: String
  """Braintree PayPal Pay Later PDP button show status."""
  braintree_paypal_button_location_productpage_type_paylater_show: Boolean
  """Braintree PayPal PDP button style color."""
  braintree_paypal_button_location_productpage_type_paypal_color: String
  """Braintree PayPal PDP button style label."""
  braintree_paypal_button_location_productpage_type_paypal_label: String
  """Braintree PayPal PDP button style shape."""
  braintree_paypal_button_location_productpage_type_paypal_shape: String
  """Braintree PayPal PDP button show."""
  braintree_paypal_button_location_productpage_type_paypal_show: Boolean
  """Braintree PayPal Credit Merchant Name on the FCA Register."""
  braintree_paypal_credit_uk_merchant_name: String
  """Should display Braintree PayPal in mini-cart & cart?"""
  braintree_paypal_display_on_shopping_cart: Boolean
  """Braintree PayPal merchant's country."""
  braintree_paypal_merchant_country: String
  """Braintree PayPal override for Merchant Name."""
  braintree_paypal_merchant_name_override: String
  """Does Braintree PayPal require the customer's billing address?"""
  braintree_paypal_require_billing_address: Boolean
  """Does Braintree PayPal require the order line items?"""
  braintree_paypal_send_cart_line_items: Boolean
  """Braintree PayPal vault status."""
  braintree_paypal_vault_active: Boolean
  """Extended Config Data - checkout/cart/delete_quote_after"""
  cart_expires_in_days: Int
  """
  Indicates if gift wrapping prices are displayed on the Shopping Cart page. Possible values: 1 (Yes) and 0 (No).
  """
  cart_gift_wrapping: String
  """
  Indicates if printed card prices are displayed on the Shopping Cart page. Possible values: 1 (Yes) and 0 (No).
  """
  cart_printed_card: String
  """Extended Config Data - checkout/cart_link/use_qty"""
  cart_summary_display_quantity: Int
  """The default sort order of the search results list."""
  catalog_default_sort_by: String
  """
  Corresponds to the 'Display Prices In Product Lists' field in the Admin. It indicates how FPT information is displayed on category pages.
  """
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """The suffix applied to category pages, such as `.htm` or `.html`."""
  category_url_suffix: String
  """Indicates whether only specific countries can use this payment method."""
  check_money_order_enable_for_specific_countries: Boolean
  """Indicates whether the Check/Money Order payment method is enabled."""
  check_money_order_enabled: Boolean
  """The name of the party to whom the check must be payable."""
  check_money_order_make_check_payable_to: String
  """
  The maximum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_max_order_total: String
  """
  The minimum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_min_order_total: String
  """
  The status of new orders placed using the Check/Money Order payment method.
  """
  check_money_order_new_order_status: String
  """
  A comma-separated list of specific countries allowed to use the Check/Money Order payment method.
  """
  check_money_order_payment_from_specific_countries: String
  """The full street address or PO Box where the checks are mailed."""
  check_money_order_send_check_to: String
  """
  A number indicating the position of the Check/Money Order payment method in the list of available payment methods during checkout.
  """
  check_money_order_sort_order: Int
  """
  The title of the Check/Money Order payment method displayed on the storefront.
  """
  check_money_order_title: String
  """The name of the CMS page that identifies the home page for the store."""
  cms_home_page: String
  """
  A specific CMS page that displays when cookies are not enabled for the browser.
  """
  cms_no_cookies: String
  """
  A specific CMS page that displays when a 404 'Page Not Found' error occurs.
  """
  cms_no_route: String
  """A code assigned to the store to identify it."""
  code: String @deprecated(reason: "Use `store_code` instead.")
  """
  Indicates whether the `parent` or child (`itself`) thumbnail should be used in the cart for configurable products.
  """
  configurable_thumbnail_source: String
  """Indicates whether the Contact Us form in enabled."""
  contact_enabled: Boolean!
  """The copyright statement that appears at the bottom of each page."""
  copyright: String
  """Extended Config Data - general/region/state_required"""
  countries_with_required_region: String
  """Indicates if the new accounts need confirmation."""
  create_account_confirmation: Boolean
  """Customer access token lifetime."""
  customer_access_token_lifetime: Float
  """Extended Config Data - general/country/default"""
  default_country: String
  """
  The description that provides a summary of your site for search engine listings. It should not be more than 160 characters in length.
  """
  default_description: String
  """The default display currency code."""
  default_display_currency_code: String
  """
  A series of keywords that describe your store, each separated by a comma.
  """
  default_keywords: String
  """
  The title that appears at the title bar of each page when viewed in a browser.
  """
  default_title: String
  """
  Controls the display of the demo store notice at the top of the page. Options: 0 (No) or 1 (Yes).
  """
  demonotice: Int
  """Extended Config Data - general/region/display_all"""
  display_state_if_optional: Boolean
  """
  Indicates whether customers can have multiple wish lists. Possible values: 1 (Yes) and 0 (No).
  """
  enable_multiple_wishlists: String
  """The landing page that is associated with the base URL."""
  front: String
  """The default number of products per page in Grid View."""
  grid_per_page: Int
  """
  A list of numbers that define how many products can be displayed in Grid View.
  """
  grid_per_page_values: String
  """
  Scripts that must be included in the HTML before the closing `<head>` tag.
  """
  head_includes: String
  """
  The small graphic image (favicon) that appears in the address bar and tab of the browser.
  """
  head_shortcut_icon: String
  """The path to the logo that appears in the header."""
  header_logo_src: String
  """The ID number assigned to the store."""
  id: Int @deprecated(reason: "Use `store_code` instead.")
  """
  Indicates whether the store view has been designated as the default within the store group.
  """
  is_default_store: Boolean
  """
  Indicates whether the store group has been designated as the default within the website.
  """
  is_default_store_group: Boolean
  """Extended Config Data - checkout/options/guest_checkout"""
  is_guest_checkout_enabled: Boolean
  """Indicates whether negotiable quote functionality is enabled."""
  is_negotiable_quote_active: Boolean
  """Extended Config Data - checkout/options/onepage_checkout_enabled"""
  is_one_page_checkout_enabled: Boolean
  """
  Indicates whether requisition lists are enabled. Possible values: 1 (Yes) and 0 (No).
  """
  is_requisition_list_active: String
  """The format of the search results list."""
  list_mode: String
  """The default number of products per page in List View."""
  list_per_page: Int
  """
  A list of numbers that define how many products can be displayed in List View.
  """
  list_per_page_values: String
  """The store locale."""
  locale: String
  """The Alt text that is associated with the logo."""
  logo_alt: String
  """The height of the logo image, in pixels."""
  logo_height: Int
  """The width of the logo image, in pixels."""
  logo_width: Int
  """
  Indicates whether reward points functionality is enabled. Possible values: 1 (Enabled) and 0 (Disabled).
  """
  magento_reward_general_is_enabled: String
  """
  Indicates whether reward points functionality is enabled on the storefront. Possible values: 1 (Enabled) and 0 (Disabled).
  """
  magento_reward_general_is_enabled_on_front: String
  """
  The minimum point balance customers must have before they can redeem them. A null value indicates no minimum.
  """
  magento_reward_general_min_points_balance: String
  """
  When enabled, customers can see a detailed history of their reward points. Possible values: 1 (Enabled) and 0 (Disabled).
  """
  magento_reward_general_publish_history: String
  """
  The number of points for a referral when an invitee registers on the site.
  """
  magento_reward_points_invitation_customer: String
  """
  The maximum number of registration referrals that will qualify for rewards. A null value indicates no limit.
  """
  magento_reward_points_invitation_customer_limit: String
  """
  The number of points for a referral, when an invitee places their first order on the site.
  """
  magento_reward_points_invitation_order: String
  """
  The number of order conversions that can earn points for the customer who sends the invitation. A null value indicates no limit.
  """
  magento_reward_points_invitation_order_limit: String
  """
  The number of points earned by registered customers who subscribe to a newsletter.
  """
  magento_reward_points_newsletter: String
  """
  Indicates customers earn points for shopping according to the reward point exchange rate. In Luma, this also controls whether to show a message in the shopping cart about the rewards points earned for the purchase, as well as the customer’s current reward point balance.
  """
  magento_reward_points_order: String
  """The number of points customer gets for registering."""
  magento_reward_points_register: String
  """The number of points for writing a review."""
  magento_reward_points_review: String
  """
  The maximum number of reviews that will qualify for the rewards. A null value indicates no limit.
  """
  magento_reward_points_review_limit: String
  """Indicates whether wishlists are enabled (1) or disabled (0)."""
  magento_wishlist_general_is_enabled: String
  """Extended Config Data - checkout/options/max_items_display_count"""
  max_items_in_order_summary: Int
  """
  If multiple wish lists are enabled, the maximum number of wish lists the customer can have.
  """
  maximum_number_of_wishlists: String
  """Extended Config Data - checkout/sidebar/display"""
  minicart_display: Boolean
  """Extended Config Data - checkout/sidebar/count"""
  minicart_max_items: Int
  """The minimum number of characters required for a valid password."""
  minimum_password_length: String
  """Indicates whether newsletters are enabled."""
  newsletter_enabled: Boolean!
  """
  The default page that displays when a 404 'Page not Found' error occurs.
  """
  no_route: String
  """Extended Config Data - general/country/optional_zip_countries"""
  optional_zip_countries: String
  """Indicates whether orders can be cancelled by customers or not."""
  order_cancellation_enabled: Boolean!
  """An array containing available cancellation reasons."""
  order_cancellation_reasons: [CancellationReason]!
  """Payflow Pro vault status."""
  payment_payflowpro_cc_vault_active: String
  """The default price of a printed card that accompanies an order."""
  printed_card_price: String
  """
  Corresponds to the 'Display Prices On Product View Page' field in the Admin. It indicates how FPT information is displayed on product pages.
  """
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """
  Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No).
  """
  product_reviews_enabled: String
  """The suffix applied to product pages, such as `.htm` or `.html`."""
  product_url_suffix: String
  """Indicates whether quick order functionality is enabled."""
  quickorder_active: Boolean!
  """
  The number of different character classes (lowercase, uppercase, digits, special characters) required in a password.
  """
  required_character_classes_number: String
  """
  Indicates whether RMA is enabled on the storefront. Possible values: enabled/disabled.
  """
  returns_enabled: String!
  """The ID of the root category."""
  root_category_id: Int @deprecated(reason: "Use `root_category_uid` instead.")
  """The unique ID for a `CategoryInterface` object."""
  root_category_uid: ID
  """
  Corresponds to the 'Display Prices In Sales Modules' field in the Admin. It indicates how FPT information is displayed on cart, checkout, and order pages.
  """
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """
  Indicates if gift wrapping prices are displayed on the Orders page. Possible values: 1 (Yes) and 0 (No).
  """
  sales_gift_wrapping: String
  """
  Indicates if printed card prices are displayed on the Orders page. Possible values: 1 (Yes) and 0 (No).
  """
  sales_printed_card: String
  """
  A secure fully-qualified URL that is used to create relative links to the `base_url`.
  """
  secure_base_link_url: String
  """
  The secure fully-qualified URL that specifies the location of media files.
  """
  secure_base_media_url: String
  """
  The secure fully-qualified URL that specifies the location of static view files.
  """
  secure_base_static_url: String
  """The store’s fully-qualified secure base URL."""
  secure_base_url: String
  """Email to a Friend configuration."""
  send_friend: SendFriendConfiguration
  """Extended Config Data - tax/cart_display/full_summary"""
  shopping_cart_display_full_summary: Boolean
  """Extended Config Data - tax/cart_display/grandtotal"""
  shopping_cart_display_grand_total: Boolean
  """Extended Config Data - tax/cart_display/price"""
  shopping_cart_display_price: Int
  """Extended Config Data - tax/cart_display/shipping"""
  shopping_cart_display_shipping: Int
  """Extended Config Data - tax/cart_display/subtotal"""
  shopping_cart_display_subtotal: Int
  """Extended Config Data - tax/cart_display/gift_wrapping"""
  shopping_cart_display_tax_gift_wrapping: TaxWrappingEnum
  """Extended Config Data - tax/cart_display/zero_tax"""
  shopping_cart_display_zero_tax: Boolean
  """
  Indicates whether a breadcrumb trail appears on all CMS pages in the catalog. 0 (No) or 1 (Yes).
  """
  show_cms_breadcrumbs: Int
  """
  The unique ID of the store view. In the Admin, this is called the Store View Code. When making a GraphQL call, assign this value to the `Store` header to provide the scope.
  """
  store_code: ID
  """
  The unique ID assigned to the store group. In the Admin, this is called the Store Name.
  """
  store_group_code: ID
  """The label assigned to the store group."""
  store_group_name: String
  """The label assigned to the store view."""
  store_name: String
  """The store view sort order."""
  store_sort_order: Int
  """The time zone of the store."""
  timezone: String
  """
  A prefix that appears before the title to create a two- or three-part title.
  """
  title_prefix: String
  """
  The character that separates the category name and subcategory in the browser title bar.
  """
  title_separator: String
  """
  A suffix that appears after the title to create a two- or three-part title.
  """
  title_suffix: String
  """Indicates whether the store code should be used in the URL."""
  use_store_in_url: Boolean
  """The unique ID for the website."""
  website_code: ID
  """The ID number assigned to the website store."""
  website_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """The label assigned to the website."""
  website_name: String
  """The unit of weight."""
  weight_unit: String
  """
  Text that appears in the header of the page and includes the name of the logged in customer.
  """
  welcome: String
  """Indicates whether only specific countries can use this payment method."""
  zero_subtotal_enable_for_specific_countries: Boolean
  """Indicates whether the Zero Subtotal payment method is enabled."""
  zero_subtotal_enabled: Boolean
  """
  The status of new orders placed using the Zero Subtotal payment method.
  """
  zero_subtotal_new_order_status: String
  """
  When the new order status is 'Processing', this can be set to `authorize_capture` to automatically invoice all items that have a zero balance.
  """
  zero_subtotal_payment_action: String
  """
  A comma-separated list of specific countries allowed to use the Zero Subtotal payment method.
  """
  zero_subtotal_payment_from_specific_countries: String
  """
  A number indicating the position of the Zero Subtotal payment method in the list of available payment methods during checkout.
  """
  zero_subtotal_sort_order: Int
  """
  The title of the Zero Subtotal payment method displayed on the storefront.
  """
  zero_subtotal_title: String
}

"""Contains details about a CMS page."""
type CmsPage implements RoutableInterface {
  """The content of the CMS page in raw HTML."""
  content: String
  """The heading that displays at the top of the CMS page."""
  content_heading: String
  """The ID of a CMS page."""
  identifier: String
  """A brief description of the page for search results listings."""
  meta_description: String
  """A brief description of the page for search results listings."""
  meta_keywords: String
  """
  A page title that is indexed by search engines and appears in search results listings.
  """
  meta_title: String
  """
  The design layout of the page, indicating the number of columns and navigation features used on the page.
  """
  page_layout: String
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """
  The name that appears in the breadcrumb trail navigation and in the browser title bar and tab.
  """
  title: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  The URL key of the CMS page, which is often based on the `content_heading`.
  """
  url_key: String
}

"""Contains an array CMS block items."""
type CmsBlocks {
  """An array of CMS blocks."""
  items: [CmsBlock]
}

"""Contains details about a specific CMS block."""
type CmsBlock {
  """The content of the CMS block in raw HTML."""
  content: String
  """The CMS block identifier."""
  identifier: String
  """The title assigned to the CMS block."""
  title: String
}

"""
Deprecated. It should not be used on the storefront. Contains information about a website.
"""
type Website {
  """A code assigned to the website to identify it."""
  code: String @deprecated(reason: "The field should not be used on the storefront.")
  """The default group ID of the website."""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")
  """The ID number assigned to the website."""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """Indicates whether this is the default website."""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")
  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")
  """The attribute to use for sorting websites."""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

"""Contains an array of custom and system attributes."""
type AttributesMetadata {
  """An array of attributes."""
  items: [AttributeMetadataInterface]
}

"""An interface containing fields that define attributes."""
interface AttributeMetadataInterface {
  """An array of attribute labels defined for the current store."""
  attribute_labels: [StoreLabels]
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: String
  """The data type of the attribute."""
  data_type: ObjectDataTypeEnum
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum
  """Indicates whether the attribute is a system attribute."""
  is_system: Boolean
  """The label assigned to the attribute."""
  label: String
  """The relative position of the attribute."""
  sort_order: Int
  """Frontend UI properties of the attribute."""
  ui_input: UiInputTypeInterface
  """The unique ID of an attribute."""
  uid: ID
}

"""Defines frontend UI properties of an attribute."""
interface UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

"""Defines attribute options."""
interface AttributeOptionsInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

"""Defines selectable input types of the attribute."""
interface SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

"""Defines attribute options."""
interface AttributeOptionInterface {
  """Indicates if option is set to be used as default value."""
  is_default: Boolean
  """The label assigned to the attribute option."""
  label: String
  """The unique ID of an attribute option."""
  uid: ID!
}

type AttributeOptions implements AttributeOptionsInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

type UiAttributeTypeSelect implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeMultiSelect implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeBoolean implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeAny implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeTextarea implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeTextEditor implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

"""Contains the store code and label of an attribute."""
type StoreLabels {
  """The label assigned to the attribute."""
  label: String
  """The assigned store code."""
  store_code: String
}

enum ObjectDataTypeEnum {
  STRING
  FLOAT
  INT
  BOOLEAN
  COMPLEX
}

enum UiInputTypeEnum {
  BOOLEAN
  DATE
  DATETIME
  GALLERY
  IMAGE
  MEDIA_IMAGE
  MULTISELECT
  PRICE
  SELECT
  TEXT
  TEXTAREA
  TEXTEDITOR
  WEIGHT
  PAGEBUILDER
  FIXED_PRODUCT_TAX
}

"""Contains custom attribute value and metadata details."""
type CustomAttribute {
  """Attribute metadata details."""
  attribute_metadata: AttributeMetadataInterface
  """
  Attribute value represented as entered data using input type like text field.
  """
  entered_attribute_value: EnteredAttributeValue
  """
  Attribute value represented as selected options using input type like select.
  """
  selected_attribute_options: SelectedAttributeOption
}

type SelectedAttributeOption {
  """Selected attribute option details."""
  attribute_option: [AttributeOptionInterface]
}

type EnteredAttributeValue {
  """Attribute value."""
  value: String
}

"""Contains fields that are common to all types of products."""
interface ProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """An array of related products."""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""
This enumeration states whether a product stock status is in stock or out of stock
"""
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

"""
Deprecated. Use `ProductPrice` instead. Defines the price of a product as well as any tax-related adjustments.
"""
type Price {
  """
  An array that provides information about tax, weee, or weee_tax adjustments.
  """
  adjustments: [PriceAdjustment] @deprecated(reason: "Use `ProductPrice` instead.")
  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Use `ProductPrice` instead.")
}

"""
Deprecated. Taxes will be included or excluded in the price. Defines the amount of money to apply as an adjustment, the type of adjustment to apply, and whether the item is included or excluded from the adjustment.
"""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money
  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")
  """
  Indicates whether the entity described by the code attribute is included or excluded from the adjustment.
  """
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")
}

"""`PriceAdjustment.code` is deprecated."""
enum PriceAdjustmentCodesEnum {
  TAX @deprecated(reason: "`PriceAdjustmentCodesEnum` is deprecated. Tax is included or excluded in the price. Tax is not shown separately in Catalog.")
  WEEE @deprecated(reason: "WEEE code is deprecated. Use `fixed_product_taxes.label` instead.")
  WEEE_TAX @deprecated(reason: "Use `fixed_product_taxes` instead.  Tax is included or excluded in price. The tax is not shown separtely in Catalog.")
}

"""
`PriceAdjustmentDescriptionEnum` is deprecated. States whether a price adjustment is included or excluded.
"""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED
  EXCLUDED
}

"""Defines the price type."""
enum PriceTypeEnum {
  FIXED
  PERCENT
  DYNAMIC
}

"""Defines the customizable date type."""
enum CustomizableDateTypeEnum {
  DATE
  DATE_TIME
  TIME
}

"""
Deprecated. Use `PriceRange` instead. Contains the regular price of an item, as well as its minimum and maximum prices. Only composite products, which include bundle, configurable, and grouped products, can contain a minimum and maximum price.
"""
type ProductPrices {
  """
  The highest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the `to` value.
  """
  maximalPrice: Price @deprecated(reason: "Use `PriceRange.maximum_price` instead.")
  """
  The lowest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the `from` value.
  """
  minimalPrice: Price @deprecated(reason: "Use `PriceRange.minimum_price` instead.")
  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use `regular_price` from `PriceRange.minimum_price` or `PriceRange.maximum_price` instead.")
}

"""
Contains the price range for a product. If the product has a single price, the minimum and maximum price will be the same.
"""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice
  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""Represents a product price."""
type ProductPrice {
  """
  The price discount. Represents the difference between the regular and final price.
  """
  discount: ProductDiscount
  """The final price of the product after applying discounts."""
  final_price: Money!
  """
  An array of the multiple Fixed Product Taxes that can be applied to a product price.
  """
  fixed_product_taxes: [FixedProductTax]
  """The regular price of the product."""
  regular_price: Money!
}

"""Contains the discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float
  """The discount expressed a percentage."""
  percent_off: Float
}

"""An implementation of `ProductLinksInterface`."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

"""
Contains information about linked products, including the link type and product type of each item.
"""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

"""Contains attributes specific to tangible products."""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
Contains information about a text area that is defined as part of a customizable option.
"""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""
Defines the price and sku of a product whose page contains a customized text area.
"""
type CustomizableAreaValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableAreaValue` object."""
  uid: ID!
}

"""Contains the hierarchy of categories."""
type CategoryTree implements CategoryInterface & RoutableInterface {
  automatic_sorting: String
  available_sort_by: [String]
  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String
  """A tree of child categories."""
  children: [CategoryTree]
  children_count: String
  """Contains a category CMS block."""
  cms_block: CmsBlock
  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """The full category path."""
  path: String
  """The category path within the store."""
  path_in_store: String
  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """Indicates whether the category is staged for a future campaign."""
  staged: Boolean!
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The URL key assigned to the category."""
  url_key: String
  """The URL path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""
Contains a collection of `CategoryTree` objects and pagination information.
"""
type CategoryResult {
  """A list of categories that match the filter criteria."""
  items: [CategoryTree]
  """
  An object that includes the `page_info` and `currentPage` values specified in the query.
  """
  page_info: SearchResultPageInfo
  """The total number of categories that match the criteria."""
  total_count: Int
}

"""
Contains information about a date picker that is defined as part of a customizable option.
"""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""
Defines the price and sku of a product whose page contains a customized date picker.
"""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """DATE, DATE_TIME or TIME"""
  type: CustomizableDateTypeEnum
  """The unique ID for a `CustomizableDateValue` object."""
  uid: ID!
}

"""
Contains information about a drop down menu that is defined as part of a customizable option.
"""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""
Defines the price and sku of a product whose page contains a customized drop down menu.
"""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableDropDownValue` object."""
  uid: ID!
}

"""
Contains information about a multiselect that is defined as part of a customizable option.
"""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""
Defines the price and sku of a product whose page contains a customized multiselect.
"""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableMultipleValue` object."""
  uid: ID!
}

"""
Contains information about a text field that is defined as part of a customizable option.
"""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""
Defines the price and sku of a product whose page contains a customized text field.
"""
type CustomizableFieldValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int
  """The price of the custom value."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFieldValue` object."""
  uid: ID!
}

"""
Contains information about a file picker that is defined as part of a customizable option.
"""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""
Defines the price and sku of a product whose page contains a customized file picker.
"""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String
  """The maximum width of an image."""
  image_size_x: Int
  """The maximum height of an image."""
  image_size_y: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFileValue` object."""
  uid: ID!
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""Contains product image information, including the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
  """Contains a `ProductMediaGalleryEntriesVideoContent` object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""
Contains basic information about a customizable option. It can be implemented by several types of configurable options.
"""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
}

"""Contains information about customizable product options."""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""
Contains the full set of attributes that can be returned in a category search.
"""
interface CategoryInterface {
  automatic_sorting: String
  available_sort_by: [String]
  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String
  children_count: String
  """Contains a category CMS block."""
  cms_block: CmsBlock
  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """The full category path."""
  path: String
  """The category path within the store."""
  path_in_store: String
  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """Indicates whether the category is staged for a future campaign."""
  staged: Boolean!
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The URL key assigned to the category."""
  url_key: String
  """The URL path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""
Contains details about an individual category that comprises a breadcrumb.
"""
type Breadcrumb {
  """The ID of the category."""
  category_id: Int @deprecated(reason: "Use `category_uid` instead.")
  """The category level."""
  category_level: Int
  """The display name of the category."""
  category_name: String
  """The unique ID for a `Breadcrumb` object."""
  category_uid: ID!
  """The URL key of the category."""
  category_url_key: String
  """The URL path of the category."""
  category_url_path: String
}

"""
Contains information about a set of radio buttons that are defined as part of a customizable option.
"""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of radio buttons.
"""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the radio button is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableRadioValue` object."""
  uid: ID!
}

"""
Contains information about a set of checkbox values that are defined as part of a customizable option.
"""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of checkbox values.
"""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the checkbox value is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableCheckboxValue` object."""
  uid: ID!
}

"""
Defines a virtual product, which is a non-tangible product that does not require shipping and is not kept in inventory.
"""
type VirtualProduct implements ProductInterface & RoutableInterface & CustomizableProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""
Defines a simple product, which is tangible and is usually sold in single units or in fixed quantities.
"""
type SimpleProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains the results of a `products` query."""
type Products {
  """
  A bucket that contains the attribute code and label for each filterable option.
  """
  aggregations(filter: AggregationsFilterInput): [Aggregation]
  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use `aggregations` instead.")
  """An array of products that match the specified search criteria."""
  items: [ProductInterface]
  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo
  """
  An object that includes the default sort field and all available sort fields.
  """
  sort_fields: SortFields
  """
  An array of search suggestions for case when search query have no results.
  """
  suggestions: [SearchSuggestion]
  """
  The number of products that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
An input object that specifies the filters used in product aggregations.
"""
input AggregationsFilterInput {
  """Filter category aggregations in layered navigation."""
  category: AggregationsCategoryFilterInput
}

"""Filter category aggregations in layered navigation."""
input AggregationsCategoryFilterInput {
  """
  Indicates whether to include only direct subcategories or all children categories at all levels.
  """
  includeDirectChildrenOnly: Boolean
}

"""Contains details about the products assigned to a category."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input ProductAttributeFilterInput {
  """Attribute label: Brand"""
  accessory_brand: FilterEqualTypeInput
  """Attribute label: Gemstone Addon"""
  accessory_gemstone_addon: FilterEqualTypeInput
  """Attribute label: Recyclable Material"""
  accessory_recyclable_material: FilterEqualTypeInput
  """Deprecated: use `category_uid` to filter product by category ID."""
  category_id: FilterEqualTypeInput
  """Filter product by the unique ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """Filter product by category URL path."""
  category_url_path: FilterEqualTypeInput
  """Attribute label: Color"""
  color: FilterEqualTypeInput
  """Attribute label: Description"""
  description: FilterMatchTypeInput
  """Attribute label: Color"""
  fashion_color: FilterEqualTypeInput
  """Attribute label: Material"""
  fashion_material: FilterEqualTypeInput
  """Attribute label: Style"""
  fashion_style: FilterEqualTypeInput
  """Attribute label: Format"""
  format: FilterEqualTypeInput
  """Attribute label: Has Video"""
  has_video: FilterEqualTypeInput
  """Attribute label: Product Name"""
  name: FilterMatchTypeInput
  """Attribute label: Price"""
  price: FilterRangeTypeInput
  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput
  """Attribute label: SKU"""
  sku: FilterEqualTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

"""
Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input CategoryFilterInput {
  """Filter by the unique category ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """
  Deprecated: use 'category_uid' to filter uniquely identifiers of categories.
  """
  ids: FilterEqualTypeInput
  """Filter by the display name of the category."""
  name: FilterMatchTypeInput
  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_category_uid: FilterEqualTypeInput
  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_id: FilterEqualTypeInput
  """Filter by the part of the URL that identifies the category."""
  url_key: FilterEqualTypeInput
  """Filter by the URL path for the category."""
  url_path: FilterEqualTypeInput
}

"""
ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead. ProductFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input ProductFilterInput {
  """The category ID the product belongs to."""
  category_id: FilterTypeInput
  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput
  """The timestamp indicating when the product was created."""
  created_at: FilterTypeInput
  """The name of a custom layout."""
  custom_layout: FilterTypeInput
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: FilterTypeInput
  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput
  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: FilterTypeInput
  """The relative path to the main image on the product page."""
  image: FilterTypeInput
  """The label assigned to a product image."""
  image_label: FilterTypeInput
  """Indicates whether the product can be returned."""
  is_returnable: FilterTypeInput
  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput
  """
  The numeric maximal price of the product. Do not include the currency code.
  """
  max_price: FilterTypeInput
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: FilterTypeInput
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: FilterTypeInput
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: FilterTypeInput
  """
  The numeric minimal price of the product. Do not include the currency code.
  """
  min_price: FilterTypeInput
  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: FilterTypeInput
  """The end date for new product listings."""
  news_to_date: FilterTypeInput
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: FilterTypeInput
  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput
  """The price of an item."""
  price: FilterTypeInput
  """Indicates whether the product has required options."""
  required_options: FilterTypeInput
  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: FilterTypeInput
  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput
  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput
  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput
  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput
  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput
  """The file name of a swatch image."""
  swatch_image: FilterTypeInput
  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: FilterTypeInput
  """The timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput
  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""
Contains an image in base64 format and basic information about the image.
"""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String
  """The file name of the image."""
  name: String
  """The MIME type of the file, such as image/png."""
  type: String
}

"""Contains a link to a video file and basic information about the video."""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String
  """A description of the video."""
  video_description: String
  """Optional data about the video."""
  video_metadata: String
  """Describes the video source."""
  video_provider: String
  """The title of the video."""
  video_title: String
  """The URL to the video."""
  video_url: String
}

"""
Deprecated. Use `ProductAttributeSortInput` instead. Specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum
  """The timestamp indicating when the product was created."""
  created_at: SortEnum
  """The name of a custom layout."""
  custom_layout: SortEnum
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: SortEnum
  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum
  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: SortEnum
  """The relative path to the main image on the product page."""
  image: SortEnum
  """The label assigned to a product image."""
  image_label: SortEnum
  """Indicates whether the product can be returned."""
  is_returnable: SortEnum
  """A number representing the product's manufacturer."""
  manufacturer: SortEnum
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: SortEnum
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: SortEnum
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: SortEnum
  """The product name. Customers use this name to identify the product."""
  name: SortEnum
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: SortEnum
  """The end date for new product listings."""
  news_to_date: SortEnum
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: SortEnum
  """The price of the item."""
  price: SortEnum
  """Indicates whether the product has required options."""
  required_options: SortEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: SortEnum
  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum
  """The label assigned to a product's small image."""
  small_image_label: SortEnum
  """The beginning date that a product has a special price."""
  special_from_date: SortEnum
  """The discounted price of the product."""
  special_price: SortEnum
  """The end date that a product has a special price."""
  special_to_date: SortEnum
  """Indicates the criteria to sort swatches."""
  swatch_image: SortEnum
  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: SortEnum
  """The timestamp indicating when the product was updated."""
  updated_at: SortEnum
  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum
  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

"""
Specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order. It's possible to sort products using searchable attributes with enabled 'Use in Filter Options' option
"""
input ProductAttributeSortInput {
  """Attribute label: Brand"""
  accessory_brand: SortEnum
  """Attribute label: Product Name"""
  name: SortEnum
  """Sort by the position assigned to each product."""
  position: SortEnum
  """Attribute label: Price"""
  price: SortEnum
  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""
Defines characteristics about images and videos associated with a specific product.
"""
type MediaGalleryEntry {
  """Details about the content of the media gallery item."""
  content: ProductMediaGalleryEntriesContent
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The path of the image on the server."""
  file: String
  """The identifier assigned to the object."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  """
  The alt text displayed on the storefront when the user points to the image.
  """
  label: String
  """Either `image` or `video`."""
  media_type: String
  """The media item's position after it has been sorted."""
  position: Int
  """
  Array of image types. It can have the following values: image, small_image, thumbnail.
  """
  types: [String]
  """The unique ID for a `MediaGalleryEntry` object."""
  uid: ID!
  """Details about the content of a video item."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""Contains information for rendering layered navigation."""
type LayerFilter {
  """An array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use `Aggregation.options` instead.")
  """The count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use `Aggregation.count` instead.")
  """The name of a layered navigation filter."""
  name: String @deprecated(reason: "Use `Aggregation.label` instead.")
  """The request variable name for a filter query."""
  request_var: String @deprecated(reason: "Use `Aggregation.attribute_code` instead.")
}

interface LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

type LayerFilterItem implements LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

"""
Contains information for each filterable option (such as price, category `UID`, and custom attributes).
"""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!
  """The number of options in the aggregation group."""
  count: Int
  """The aggregation display name."""
  label: String
  """Array of options for the aggregation."""
  options: [AggregationOption]
  """The relative position of the attribute in a layered navigation block."""
  position: Int
}

"""A string that contains search suggestion"""
type SearchSuggestion {
  """The search suggestion of existing product."""
  search: String!
}

"""Defines aggregation option fields."""
interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """The display label for an aggregation option."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

"""An implementation of `AggregationOptionInterface`."""
type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """The display label for an aggregation option."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

"""Defines a possible sort field."""
type SortField {
  """The label of the sort field."""
  label: String
  """The attribute code of the sort field."""
  value: String
}

"""
Contains a default value for sort fields and all available sort fields.
"""
type SortFields {
  """The default sort field value."""
  default: String
  """An array of possible sort fields."""
  options: [SortField]
}

"""Contains a simple product wish list item."""
type SimpleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains a virtual product wish list item."""
type VirtualWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Swatch attribute metadata."""
type CatalogAttributeMetadata implements CustomAttributeMetadataInterface {
  """To which catalog types an attribute can be applied."""
  apply_to: [CatalogAttributeApplyToEnum]
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: ID!
  """Default attribute value."""
  default_value: String
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum!
  """The frontend class of the attribute."""
  frontend_class: String
  """The frontend input type of the attribute."""
  frontend_input: AttributeFrontendInputEnum
  """
  Whether a product or category attribute can be compared against another or not.
  """
  is_comparable: Boolean
  """Whether a product or category attribute can be filtered or not."""
  is_filterable: Boolean
  """
  Whether a product or category attribute can be filtered in search or not.
  """
  is_filterable_in_search: Boolean
  """Whether a product or category attribute can use HTML on front or not."""
  is_html_allowed_on_front: Boolean
  """Whether the attribute value is required."""
  is_required: Boolean!
  """Whether a product or category attribute can be searched or not."""
  is_searchable: Boolean
  """Whether the attribute value must be unique."""
  is_unique: Boolean!
  """
  Whether a product or category attribute can be used for price rules or not.
  """
  is_used_for_price_rules: Boolean
  """
  Whether a product or category attribute is used for promo rules or not.
  """
  is_used_for_promo_rules: Boolean
  """
  Whether a product or category attribute is visible in advanced search or not.
  """
  is_visible_in_advanced_search: Boolean
  """Whether a product or category attribute is visible on front or not."""
  is_visible_on_front: Boolean
  """Whether a product or category attribute has WYSIWYG enabled or not."""
  is_wysiwyg_enabled: Boolean
  """The label assigned to the attribute."""
  label: String
  """Attribute options."""
  options: [CustomAttributeOptionInterface]!
  """Input type of the swatch attribute option."""
  swatch_input_type: SwatchInputTypeEnum
  """Whether update product preview image or not."""
  update_product_preview_image: Boolean
  """Whether use product image for swatch or not."""
  use_product_image_for_swatch: Boolean
  """
  Whether a product or category attribute is used in product listing or not.
  """
  used_in_product_listing: Boolean
}

enum CatalogAttributeApplyToEnum {
  SIMPLE
  VIRTUAL
  BUNDLE
  DOWNLOADABLE
  CONFIGURABLE
  GROUPED
  CATEGORY
}

"""Product custom attributes"""
type ProductCustomAttributes {
  """Errors when retrieving custom attributes metadata."""
  errors: [AttributeMetadataError]!
  """Requested custom attributes"""
  items: [AttributeValueInterface]!
}

"""Contains the `uid`, `relative_url`, and `type` attributes."""
type EntityUrl {
  canonical_url: String @deprecated(reason: "Use `relative_url` instead.")
  """
  The unique ID for a `ProductInterface`, `CategoryInterface`, `CmsPage`, or similar object associated with the specified URL. This could be a product, category, or CMS page UID.
  """
  entity_uid: ID
  """
  The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID.
  """
  id: Int @deprecated(reason: "Use `entity_uid` instead.")
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirectCode: Int
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE
  PRODUCT
  CATEGORY
  PWA_404
}

"""Contains URL rewrite details."""
type UrlRewrite {
  """An array of request parameters."""
  parameters: [HttpQueryParameter]
  """The request URL."""
  url: String
}

"""Contains target path parameters."""
type HttpQueryParameter {
  """A parameter name."""
  name: String
  """A parameter value."""
  value: String
}

"""
Default implementation of RoutableInterface. This type is returned when the URL is not linked to an entity.
"""
type RoutableUrl implements RoutableInterface {
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""Routable entities serve as the model for a rendered page."""
interface RoutableInterface {
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

input CreateGuestCartInput {
  """Optional client-generated ID"""
  cart_uid: ID
}

"""Assigns a specific `cart_id` to the empty cart."""
input createEmptyCartInput {
  """The ID to assign to the cart."""
  cart_id: String
}

"""Defines the simple and group products to add to the cart."""
input AddSimpleProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of simple and group items to add."""
  cart_items: [SimpleProductCartItemInput]!
}

"""Defines a single product to add to the cart."""
input SimpleProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Defines the virtual products to add to the cart."""
input AddVirtualProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of virtual products to add."""
  cart_items: [VirtualProductCartItemInput]!
}

"""Defines a single product to add to the cart."""
input VirtualProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Defines an item to be added to the cart."""
input CartItemInput {
  """
  An array of entered options for the base product, such as personalization text.
  """
  entered_options: [EnteredOptionInput]
  """For a child product, the SKU of its parent product."""
  parent_sku: String
  """The amount or number of an item to add."""
  quantity: Float!
  """
  The selected options for the base product, such as color or size, using the unique ID for an object such as `CustomizableRadioOption`, `CustomizableDropDownOption`, or `ConfigurableProductOptionsValues`.
  """
  selected_options: [ID]
  """The SKU of the product."""
  sku: String!
}

"""Specifies the field to use for sorting quote items"""
enum SortQuoteItemsEnum {
  ITEM_ID
  CREATED_AT
  UPDATED_AT
  PRODUCT_ID
  SKU
  NAME
  DESCRIPTION
  WEIGHT
  QTY
  PRICE
  BASE_PRICE
  CUSTOM_PRICE
  DISCOUNT_PERCENT
  DISCOUNT_AMOUNT
  BASE_DISCOUNT_AMOUNT
  TAX_PERCENT
  TAX_AMOUNT
  BASE_TAX_AMOUNT
  ROW_TOTAL
  BASE_ROW_TOTAL
  ROW_TOTAL_WITH_DISCOUNT
  ROW_WEIGHT
  PRODUCT_TYPE
  BASE_TAX_BEFORE_DISCOUNT
  TAX_BEFORE_DISCOUNT
  ORIGINAL_CUSTOM_PRICE
  PRICE_INC_TAX
  BASE_PRICE_INC_TAX
  ROW_TOTAL_INC_TAX
  BASE_ROW_TOTAL_INC_TAX
  DISCOUNT_TAX_COMPENSATION_AMOUNT
  BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT
  FREE_SHIPPING
}

"""Specifies the field to use for sorting quote items"""
input QuoteItemsSortInput {
  """Specifies the quote items field to sort by"""
  field: SortQuoteItemsEnum!
  """Specifies the order of quote items' sorting"""
  order: SortEnum!
}

"""Defines a customizable option."""
input CustomizableOptionInput {
  """The customizable option ID of the product."""
  id: Int
  """The unique ID for a `CartItemInterface` object."""
  uid: ID
  """The string value of the option."""
  value_string: String!
}

"""Specifies the coupon code to apply to the cart."""
input ApplyCouponToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """A valid coupon code."""
  coupon_code: String!
}

"""Modifies the specified items in the cart."""
input UpdateCartItemsInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of items to be updated."""
  cart_items: [CartItemUpdateInput]!
}

"""A single item to be updated."""
input CartItemUpdateInput {
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """Gift message details for the cart item"""
  gift_message: GiftMessageInput
  """
  The unique ID for a `GiftWrapping` object to be used for the cart item.
  """
  gift_wrapping_id: ID
  """The new quantity of the item."""
  quantity: Float
}

"""Specifies which items to remove from the cart."""
input RemoveItemFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """Required field. The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID
}

"""Specifies an array of addresses to use for shipping."""
input SetShippingAddressesOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of shipping addresses."""
  shipping_addresses: [ShippingAddressInput]!
}

"""Defines a single shipping address."""
input ShippingAddressInput {
  """Defines a shipping address."""
  address: CartAddressInput
  """
  An ID from the customer's address book that uniquely identifies the address to be used for shipping.
  """
  customer_address_id: Int
  """Text provided by the shopper."""
  customer_notes: String
  """The code of Pickup Location which will be used for In-Store Pickup."""
  pickup_location_code: String
}

"""Sets the billing address."""
input SetBillingAddressOnCartInput {
  """The billing address."""
  billing_address: BillingAddressInput!
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Defines the billing address."""
input BillingAddressInput {
  """Defines a billing address."""
  address: CartAddressInput
  """
  An ID from the customer's address book that uniquely identifies the address to be used for billing.
  """
  customer_address_id: Int
  """
  Indicates whether to set the billing address to be the same as the existing shipping address on the cart.
  """
  same_as_shipping: Boolean
  """
  Indicates whether to set the shipping address to be the same as this billing address.
  """
  use_for_shipping: Boolean
}

"""Defines the billing or shipping address to be applied to the cart."""
input CartAddressInput {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """The country code and label for the billing or shipping address."""
  country_code: String!
  """The custom attribute values of the billing or shipping address."""
  custom_attributes: [AttributeValueInput]
  """The customer's fax number."""
  fax: String
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """
  A string that defines the state or province of the billing or shipping address.
  """
  region: String
  """
  An integer that defines the state or province of the billing or shipping address.
  """
  region_id: Int
  """
  Determines whether to save the address in the customer's address book. The default value is true.
  """
  save_in_address_book: Boolean
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Applies one or shipping methods to the cart."""
input SetShippingMethodsOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of shipping methods."""
  shipping_methods: [ShippingMethodInput]!
}

"""Defines the shipping carrier and method."""
input ShippingMethodInput {
  """
  A string that identifies a commercial carrier or an offline delivery method.
  """
  carrier_code: String!
  """
  A string that indicates which service a commercial carrier will use to ship items. For offline delivery methods, this value is similar to the label displayed on the checkout page.
  """
  method_code: String!
}

"""Applies a payment method to the quote."""
input SetPaymentMethodAndPlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Specifies the quote to be converted to an order."""
input PlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Applies a payment method to the cart."""
input SetPaymentMethodOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Defines the payment method."""
input PaymentMethodInput {
  braintree: BraintreeInput
  braintree_ach_direct_debit: BraintreeInput
  braintree_ach_direct_debit_vault: BraintreeVaultInput
  braintree_applepay_vault: BraintreeVaultInput
  braintree_cc_vault: BraintreeCcVaultInput
  braintree_googlepay_vault: BraintreeVaultInput
  braintree_paypal: BraintreeInput
  braintree_paypal_vault: BraintreeVaultInput
  """The internal name for the payment method."""
  code: String!
  """Required input for PayPal Hosted pro payments."""
  hosted_pro: HostedProInput
  """Required input for Payflow Express Checkout payments."""
  payflow_express: PayflowExpressInput
  """Required input for PayPal Payflow Link and Payments Advanced payments."""
  payflow_link: PayflowLinkInput
  """Required input for PayPal Payflow Pro and Payment Pro payments."""
  payflowpro: PayflowProInput
  """Required input for PayPal Payflow Pro vault payments."""
  payflowpro_cc_vault: VaultTokenInput
  """Required input for Apple Pay button"""
  payment_services_paypal_apple_pay: ApplePayMethodInput
  """Required input for Google Pay button"""
  payment_services_paypal_google_pay: GooglePayMethodInput
  """Required input for Hosted Fields"""
  payment_services_paypal_hosted_fields: HostedFieldsInput
  """Required input for Smart buttons"""
  payment_services_paypal_smart_buttons: SmartButtonMethodInput
  """Required input for vault"""
  payment_services_paypal_vault: VaultMethodInput
  """Required input for Express Checkout and Payments Standard payments."""
  paypal_express: PaypalExpressInput
  """The purchase order number. Optional for most payment methods."""
  purchase_order_number: String
}

"""Defines the guest email and cart."""
input SetGuestEmailOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The email address of the guest."""
  email: String!
}

"""
Contains details about the final price of items in the cart, including discount and tax information.
"""
type CartPrices {
  """
  An array containing the names and amounts of taxes applied to each item in the cart.
  """
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead.")
  """
  An array containing cart rule discounts, store credit and gift cards applied to the cart.
  """
  discounts: [Discount]
  """The list of prices for the selected gift options."""
  gift_options: GiftOptionsPrices
  """The total, including discounts, taxes, shipping, and other fees."""
  grand_total: Money
  """The subtotal without any applied taxes."""
  subtotal_excluding_tax: Money
  """The subtotal including any applied taxes."""
  subtotal_including_tax: Money
  """The subtotal with any discounts applied, but not taxes."""
  subtotal_with_discount_excluding_tax: Money
}

"""Contains tax information about an item in the cart."""
type CartTaxItem {
  """The amount of tax applied to the item."""
  amount: Money!
  """The description of the tax."""
  label: String!
}

"""Contains information about discounts applied to the cart."""
type CartDiscount {
  """The amount of the discount applied to the item."""
  amount: Money!
  """The description of the discount."""
  label: [String]!
}

type CreateGuestCartOutput {
  """The newly created cart."""
  cart: Cart
}

"""Contains details about the cart after setting the payment method."""
type SetPaymentMethodOnCartOutput {
  """The cart after setting the payment method."""
  cart: Cart!
}

"""Contains details about the cart after setting the billing address."""
type SetBillingAddressOnCartOutput {
  """The cart after setting the billing address."""
  cart: Cart!
}

"""Contains details about the cart after setting the shipping addresses."""
type SetShippingAddressesOnCartOutput {
  """The cart after setting the shipping addresses."""
  cart: Cart!
}

"""Contains details about the cart after setting the shipping methods."""
type SetShippingMethodsOnCartOutput {
  """The cart after setting the shipping methods."""
  cart: Cart!
}

"""Contains details about the cart after applying a coupon."""
type ApplyCouponToCartOutput {
  """The cart after applying a coupon."""
  cart: Cart!
}

"""Contains the results of the request to place an order."""
type PlaceOrderOutput {
  """An array of place order errors."""
  errors: [PlaceOrderError]!
  """The ID of the order."""
  order: Order @deprecated(reason: "Use `orderV2` instead.")
  """Full order information."""
  orderV2: CustomerOrder
}

"""An error encountered while placing an order."""
type PlaceOrderError {
  """An error code that is specific to place order."""
  code: PlaceOrderErrorCodes!
  """A localized error message."""
  message: String!
}

"""
Contains the contents and other details about a guest or customer cart.
"""
type Cart {
  applied_coupon: AppliedCoupon @deprecated(reason: "Use `applied_coupons` instead.")
  """
  An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code.
  """
  applied_coupons: [AppliedCoupon]
  """An array of gift card items applied to the cart."""
  applied_gift_cards: [AppliedGiftCard]
  """The amount of reward points applied to the cart."""
  applied_reward_points: RewardPointsAmount
  """Store credit information applied to the cart."""
  applied_store_credit: AppliedStoreCredit
  """The list of available gift wrapping options for the cart."""
  available_gift_wrappings: [GiftWrapping]!
  """An array of available payment methods."""
  available_payment_methods: [AvailablePaymentMethod]
  """The billing address assigned to the cart."""
  billing_address: BillingCartAddress
  """The email address of the guest or customer."""
  email: String
  """The entered gift message for the cart"""
  gift_message: GiftMessage
  """Indicates whether the shopper requested gift receipt for the cart."""
  gift_receipt_included: Boolean!
  """The selected gift wrapping for the cart."""
  gift_wrapping: GiftWrapping
  """The unique ID for a `Cart` object."""
  id: ID!
  """Indicates whether the cart contains only virtual products."""
  is_virtual: Boolean!
  """An array of products that have been added to the cart."""
  items: [CartItemInterface] @deprecated(reason: "Use `itemsV2` instead.")
  itemsV2(pageSize: Int = 20, currentPage: Int = 1, sort: QuoteItemsSortInput): CartItems
  """Pricing details for the quote."""
  prices: CartPrices
  """Indicates whether the shopper requested a printed card for the cart."""
  printed_card_included: Boolean!
  """Indicates which payment method was applied to the cart."""
  selected_payment_method: SelectedPaymentMethod
  """An array of shipping addresses assigned to the cart."""
  shipping_addresses: [ShippingCartAddress]!
  """The total number of items in the cart."""
  total_quantity: Float!
  """The total number of items in the cart."""
  total_summary_quantity_including_config: Float!
}

type CartItems {
  """An array of products that have been added to the cart."""
  items: [CartItemInterface]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo
  """The number of returned cart items."""
  total_count: Int!
}

interface CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  """The custom attribute values of the billing or shipping address."""
  custom_attributes: [AttributeValueInterface]!
  """The customer's fax number."""
  fax: String
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Contains shipping addresses and methods."""
type ShippingCartAddress implements CartAddressInterface {
  """
  An array that lists the shipping methods that can be applied to the cart.
  """
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "Use `cart_items_v2` instead.")
  """An array that lists the items in the cart."""
  cart_items_v2: [CartItemInterface]
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  """The custom attribute values of the billing or shipping address."""
  custom_attributes: [AttributeValueInterface]!
  """Text provided by the shopper."""
  customer_notes: String
  """The customer's fax number."""
  fax: String
  """The first name of the customer or guest."""
  firstname: String!
  items_weight: Float @deprecated(reason: "This information should not be exposed on the frontend.")
  """The last name of the customer or guest."""
  lastname: String!
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  pickup_location_code: String
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An object that describes the selected shipping method."""
  selected_shipping_method: SelectedShippingMethod
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Contains details about the billing address."""
type BillingCartAddress implements CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  """The custom attribute values of the billing or shipping address."""
  custom_attributes: [AttributeValueInterface]!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address.")
  """The customer's fax number."""
  fax: String
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""
Deprecated: The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.
"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
  quantity: Float! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
}

"""Contains details about the region in a billing or shipping address."""
type CartAddressRegion {
  """The state or province code."""
  code: String
  """The display label for the region."""
  label: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Contains details the country in a billing or shipping address."""
type CartAddressCountry {
  """The country code."""
  code: String!
  """The display label for the country."""
  label: String!
}

"""Contains details about the selected shipping method and carrier."""
type SelectedShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")
  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!
  """The label for the carrier code."""
  carrier_title: String!
  """A shipping method code associated with a carrier."""
  method_code: String!
  """The label for the method code."""
  method_title: String!
  """The cost of shipping using this shipping method, excluding tax."""
  price_excl_tax: Money!
  """The cost of shipping using this shipping method, including tax."""
  price_incl_tax: Money!
}

"""Contains details about the possible shipping methods and carriers."""
type AvailableShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!
  """Indicates whether this shipping method can be applied to the cart."""
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")
  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!
  """The label for the carrier code."""
  carrier_title: String!
  """Describes an error condition."""
  error_message: String
  """
  A shipping method code associated with a carrier. The value could be null if no method is available.
  """
  method_code: String
  """
  The label for the shipping method code. The value could be null if no method is available.
  """
  method_title: String
  """The cost of shipping using this shipping method, excluding tax."""
  price_excl_tax: Money!
  """The cost of shipping using this shipping method, including tax."""
  price_incl_tax: Money!
}

"""
Describes a payment method that the shopper can use to pay for the order.
"""
type AvailablePaymentMethod {
  """The payment method code."""
  code: String!
  """If the payment method is an online integration"""
  is_deferred: Boolean!
  """The payment method title."""
  title: String!
}

"""Describes the payment method the shopper selected."""
type SelectedPaymentMethod {
  """The payment method code."""
  code: String!
  """The purchase order number."""
  purchase_order_number: String
  """The payment method title."""
  title: String!
}

"""Contains the applied coupon code."""
type AppliedCoupon {
  """The coupon code the shopper applied to the card."""
  code: String!
}

"""Specifies the cart from which to remove a coupon."""
input RemoveCouponFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Contains details about the cart after removing a coupon."""
type RemoveCouponFromCartOutput {
  """The cart after removing a coupon."""
  cart: Cart
}

"""Contains details about the cart after adding simple or group products."""
type AddSimpleProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about the cart after adding virtual products."""
type AddVirtualProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about the cart after updating items."""
type UpdateCartItemsOutput {
  """The cart after updating products."""
  cart: Cart!
}

"""Contains details about the cart after removing an item."""
type RemoveItemFromCartOutput {
  """The cart after removing an item."""
  cart: Cart!
}

"""Contains details about the cart after setting the email of a guest."""
type SetGuestEmailOnCartOutput {
  """The cart after setting the guest email."""
  cart: Cart!
}

"""An implementation for simple product cart items."""
type SimpleCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item."""
  available_gift_wrapping: [GiftWrapping]!
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the cart item."""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""An implementation for virtual product cart items."""
type VirtualCartItem implements CartItemInterface {
  """An array containing customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""An interface for products in a cart."""
interface CartItemInterface {
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

type CartItemError {
  """An error code that describes the error encountered"""
  code: CartItemErrorType!
  """A localized error message"""
  message: String!
}

enum CartItemErrorType {
  UNDEFINED
  ITEM_QTY
  ITEM_INCREMENTS
}

"""Specifies the discount type and value for quote line item."""
type Discount {
  """The amount of the discount."""
  amount: Money!
  """The type of the entity the discount is applied to."""
  applied_to: CartDiscountType!
  """The coupon related to the discount."""
  coupon: AppliedCoupon
  """Is quote discounting locked for line item."""
  is_discounting_locked: Boolean
  """A description of the discount."""
  label: String!
  """
  Quote line item discount type. Values: 1 = PERCENTAGE_DISCOUNT; 2 = AMOUNT_DISCOUNT; 3 = PROPOSED_TOTAL.
  """
  type: String
  """Quote line item discount value."""
  value: Float
}

enum CartDiscountType {
  ITEM
  SHIPPING
}

"""
Contains details about the price of the item, including taxes and discounts.
"""
type CartItemPrices {
  """An array of discounts to be applied to the cart item."""
  discounts: [Discount]
  """An array of FPTs applied to the cart item."""
  fixed_product_taxes: [FixedProductTax]
  """
  The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
  """
  price: Money!
  """
  The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
  """
  price_including_tax: Money!
  """The value of the price multiplied by the quantity of the item."""
  row_total: Money!
  """The value of `row_total` plus the tax applied to the item."""
  row_total_including_tax: Money!
  """The total of all discounts applied to the item."""
  total_item_discount: Money
}

"""Identifies a customized product that has been placed in a cart."""
type SelectedCustomizableOption {
  """
  The unique ID for a specific `CustomizableOptionInterface` object, such as a `CustomizableFieldOption`, `CustomizableFileOption`, or `CustomizableAreaOption` object.
  """
  customizable_option_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOption.customizable_option_uid` instead.")
  """Indicates whether the customizable option is required."""
  is_required: Boolean!
  """The display name of the selected customizable option."""
  label: String!
  """A value indicating the order to display this option."""
  sort_order: Int!
  """The type of `CustomizableOptionInterface` object."""
  type: String!
  """An array of selectable values."""
  values: [SelectedCustomizableOptionValue]!
}

"""Identifies the value of the selected customized option."""
type SelectedCustomizableOptionValue {
  """
  The unique ID for a value object that corresponds to the object represented by the `customizable_option_uid` attribute.
  """
  customizable_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOptionValue.customizable_option_value_uid` instead.")
  """The display name of the selected value."""
  label: String!
  """The price of the selected customizable value."""
  price: CartItemSelectedOptionValuePrice!
  """The text identifying the selected value."""
  value: String!
}

"""Contains details about the price of a selected customizable value."""
type CartItemSelectedOptionValuePrice {
  """Indicates whether the price type is fixed, percent, or dynamic."""
  type: PriceTypeEnum!
  """A string that describes the unit of the value."""
  units: String!
  """A price value."""
  value: Float!
}

"""Contains the order ID."""
type Order {
  order_id: String @deprecated(reason: "Use `order_number` instead.")
  """The unique ID for an `Order` object."""
  order_number: String!
}

"""An error encountered while adding an item to the the cart."""
type CartUserInputError {
  """A cart-specific error code."""
  code: CartUserInputErrorType!
  """A localized error message."""
  message: String!
}

"""Contains details about the cart after adding products to it."""
type AddProductsToCartOutput {
  """The cart after products have been added."""
  cart: Cart!
  """Contains errors encountered while adding an item to the cart."""
  user_errors: [CartUserInputError]!
}

enum CartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
  PERMISSION_DENIED
}

enum PlaceOrderErrorCodes {
  CART_NOT_FOUND
  CART_NOT_ACTIVE
  GUEST_EMAIL_MISSING
  UNABLE_TO_PLACE_ORDER
  UNDEFINED
}

input EstimateTotalsInput {
  """Customer's address to estimate totals."""
  address: EstimateAddressInput!
  """The unique ID of the cart to query."""
  cart_id: String!
  """Selected shipping method to estimate totals."""
  shipping_method: ShippingMethodInput
}

"""Estimate totals output."""
type EstimateTotalsOutput {
  """Cart after totals estimation"""
  cart: Cart
}

"""Contains details about an address."""
input EstimateAddressInput {
  """The two-letter code representing the customer's country."""
  country_code: CountryCodeEnum!
  """The customer's ZIP or postal code."""
  postcode: String
  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegionInput
}

"""Defines details about an individual checkout agreement."""
type CheckoutAgreement {
  """The ID for a checkout agreement."""
  agreement_id: Int!
  """The checkbox text for the checkout agreement."""
  checkbox_text: String!
  """Required. The text of the agreement."""
  content: String!
  """
  The height of the text box where the Terms and Conditions statement appears during checkout.
  """
  content_height: String
  """Indicates whether the `content` text is in HTML format."""
  is_html: Boolean!
  """Indicates whether agreements are accepted automatically or manually."""
  mode: CheckoutAgreementMode!
  """The name given to the condition."""
  name: String!
}

"""Indicates how agreements are accepted."""
enum CheckoutAgreementMode {
  """Conditions are automatically accepted upon checkout."""
  AUTO
  """Shoppers must manually accept the conditions to place an order."""
  MANUAL
}

"""Contains details about a customer email address to confirm."""
input ConfirmEmailInput {
  """The key to confirm the email address."""
  confirmation_key: String!
  """The email address to be confirmed."""
  email: String!
}

"""Contains details about a billing or shipping address."""
input CustomerAddressInput {
  """The customer's city or town."""
  city: String
  """The customer's company."""
  company: String
  """The two-letter code representing the customer's country."""
  country_code: CountryCodeEnum
  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum
  """Deprecated. Use custom_attributesV2 instead."""
  custom_attributes: [CustomerAddressAttributeInput]
  """Custom attributes assigned to the customer address."""
  custom_attributesV2: [AttributeValueInput]
  """Indicates whether the address is the default billing address."""
  default_billing: Boolean
  """Indicates whether the address is the default shipping address."""
  default_shipping: Boolean
  """The customer's fax number."""
  fax: String
  """
  The first name of the person associated with the billing/shipping address.
  """
  firstname: String
  """
  The family name of the person associated with the billing/shipping address.
  """
  lastname: String
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegionInput
  """An array of strings that define the street number and name."""
  street: [String]
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's telephone number."""
  telephone: String
  """The customer's Tax/VAT number (for corporate customers)."""
  vat_id: String
}

"""Defines the customer's state or province."""
input CustomerAddressRegionInput {
  """The state or province name."""
  region: String
  """The address region code."""
  region_code: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Specifies the attribute code and value of a customer attribute."""
input CustomerAddressAttributeInput {
  """The name assigned to the attribute."""
  attribute_code: String!
  """The value assigned to the attribute."""
  value: String!
}

"""Contains a customer authorization token."""
type CustomerToken {
  """Generate logout time"""
  customer_token_lifetime: Int
  """The customer authorization token."""
  token: String
}

"""An input object that assigns or updates customer attributes."""
input CustomerInput {
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's email address. Required when creating a customer."""
  email: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  """The customer's password."""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""An input object for creating a customer."""
input CustomerCreateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean
  """The customer's custom attributes."""
  custom_attributes: [AttributeValueInput]
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's email address."""
  email: String!
  """The customer's first name."""
  firstname: String!
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String!
  """The customer's middle name."""
  middlename: String
  """The customer's password."""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""An input object for updating a customer."""
input CustomerUpdateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean
  """The customer's custom attributes."""
  custom_attributes: [AttributeValueInput]
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""Contains details about a newly-created or updated customer."""
type CustomerOutput {
  """Customer details after creating or updating a customer."""
  customer: Customer!
}

"""Contains the result of a request to revoke a customer token."""
type RevokeCustomerTokenOutput {
  """The result of a request to revoke a customer token."""
  result: Boolean!
}

"""Defines the customer name, addresses, and other details."""
type Customer {
  """An array containing the customer's shipping and billing addresses."""
  addresses: [CustomerAddress]
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean!
  """An object that contains a list of companies user is assigned to."""
  companies(input: UserCompaniesInput): UserCompaniesOutput!
  """The contents of the customer's compare list."""
  compare_list: CompareList
  """The customer's confirmation status."""
  confirmation_status: ConfirmationStatusEnum!
  """Timestamp indicating when the account was created."""
  created_at: String
  """Customer's custom attributes."""
  custom_attributes(attributeCodes: [ID!]): [AttributeValueInterface]
  """The customer's date of birth."""
  date_of_birth: String
  """The ID assigned to the billing address."""
  default_billing: String
  """The ID assigned to the shipping address."""
  default_shipping: String
  """The customer's date of birth."""
  dob: String @deprecated(reason: "Use `date_of_birth` instead.")
  """The customer's email address. Required."""
  email: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """Details about all of the customer's gift registries."""
  gift_registries: [GiftRegistry]
  """Details about a specific gift registry."""
  gift_registry(giftRegistryUid: ID!): GiftRegistry
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios.")
  """The ID assigned to the customer."""
  id: Int @deprecated(reason: "`id` is not needed as part of `Customer`, because on the server side, it can be identified based on the customer token used for authentication. There is no need to know customer ID on the client side.")
  """
  Customer's confirmation status (confirmed/confirmation not required - true, unconfirmed - false).
  """
  is_confirmed: Boolean
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The job title of a company user."""
  job_title: String
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  orders(
    """Defines the filter to use for searching customer orders."""
    filter: CustomerOrdersFilterInput
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """
    Specifies which field to sort on, and whether to return the results in ascending or descending order.
    """
    sort: CustomerOrderSortInput
    """
    Specifies the scope to search for customer orders. The Store request header identifies the customer's store view code. The default value of STORE limits the search to the value specified in the header. Specify WEBSITE to expand the search to include all customer orders assigned to the website that is defined in the header, or specify GLOBAL to include all customer orders across all websites and stores.
    """
    scope: ScopeTypeEnum
  ): CustomerOrders
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """Purchase order details."""
  purchase_order(uid: ID!): PurchaseOrder
  """Details about a single purchase order approval rule."""
  purchase_order_approval_rule(uid: ID!): PurchaseOrderApprovalRule
  """
  Purchase order approval rule metadata that can be used for rule edit form rendering.
  """
  purchase_order_approval_rule_metadata: PurchaseOrderApprovalRuleMetadata
  """A list of purchase order approval rules visible to the customer."""
  purchase_order_approval_rules(currentPage: Int = 1, pageSize: Int = 20): PurchaseOrderApprovalRules
  """A list of purchase orders visible to the customer."""
  purchase_orders(filter: PurchaseOrdersFilterInput, currentPage: Int = 1, pageSize: Int = 20): PurchaseOrders
  """
  Indicates whether purchase order functionality is enabled for the current customer. Global and company-level settings are factored into the result.
  """
  purchase_orders_enabled: Boolean!
  """An object that contains the customer's requisition lists."""
  requisition_lists(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The filter to use to limit the number of requisition lists to return."""
    filter: RequisitionListFilterInput
  ): RequisitionLists
  """
  Details about the specified return request from the unique ID for a `Return` object.
  """
  return(uid: ID!): Return
  """Information about the customer's return requests."""
  returns(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): Returns
  """Contains the customer's product reviews."""
  reviews(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """Customer reward points details."""
  reward_points: RewardPoints
  """The role name and permissions assigned to the company user."""
  role: CompanyRole
  """Indicates whether the company user is ACTIVE or INACTIVE."""
  status: CompanyUserStatusEnum
  """Store credit information applied for the logged in customer."""
  store_credit: CustomerStoreCredit
  """ID of the company structure"""
  structure_id: ID!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  taxvat: String
  """The team the company user is assigned to."""
  team: CompanyTeam
  """The phone number of the company user."""
  telephone: String
  """Return a customer's wish lists."""
  wishlist: Wishlist! @deprecated(reason: "Use `Customer.wishlists` or `Customer.wishlist_v2` instead.")
  """
  Retrieve the wish list identified by the unique ID for a `Wishlist` object.
  """
  wishlist_v2(id: ID!): Wishlist
  """
  An array of wishlists. In Magento Open Source, customers are limited to one wish list. The number of wish lists is configurable for Adobe Commerce.
  """
  wishlists(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [Wishlist]!
}

"""
Contains detailed information about a customer's billing or shipping address.
"""
type CustomerAddress {
  """The customer's city or town."""
  city: String
  """The customer's company."""
  company: String
  """The customer's country."""
  country_code: CountryCodeEnum
  """The customer's country."""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Use custom_attributesV2 instead.")
  """Custom attributes assigned to the customer address."""
  custom_attributesV2(attributeCodes: [ID!]): [AttributeValueInterface]!
  """The customer ID"""
  customer_id: Int @deprecated(reason: "`customer_id` is not needed as part of `CustomerAddress`. The `id` is a unique identifier for the addresses.")
  """
  Indicates whether the address is the customer's default billing address.
  """
  default_billing: Boolean
  """
  Indicates whether the address is the customer's default shipping address.
  """
  default_shipping: Boolean
  """Contains any extension attributes for the address."""
  extension_attributes: [CustomerAddressAttribute]
  """The customer's fax number."""
  fax: String
  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String
  """The ID of a `CustomerAddress` object."""
  id: Int
  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String
  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegion
  """The unique ID for a pre-defined region."""
  region_id: Int
  """An array of strings that define the street number and name."""
  street: [String]
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's telephone number."""
  telephone: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

"""Defines the customer's state or province."""
type CustomerAddressRegion {
  """The state or province name."""
  region: String
  """The address region code."""
  region_code: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""
Specifies the attribute code and value of a customer address attribute.
"""
type CustomerAddressAttribute {
  """The name assigned to the customer address attribute."""
  attribute_code: String
  """The value assigned to the customer address attribute."""
  value: String
}

"""Contains the result of the `isEmailAvailable` query."""
type IsEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a customer.
  """
  is_email_available: Boolean
}

"""The list of country codes."""
enum CountryCodeEnum {
  """Afghanistan"""
  AF
  """Åland Islands"""
  AX
  """Albania"""
  AL
  """Algeria"""
  DZ
  """American Samoa"""
  AS
  """Andorra"""
  AD
  """Angola"""
  AO
  """Anguilla"""
  AI
  """Antarctica"""
  AQ
  """Antigua & Barbuda"""
  AG
  """Argentina"""
  AR
  """Armenia"""
  AM
  """Aruba"""
  AW
  """Australia"""
  AU
  """Austria"""
  AT
  """Azerbaijan"""
  AZ
  """Bahamas"""
  BS
  """Bahrain"""
  BH
  """Bangladesh"""
  BD
  """Barbados"""
  BB
  """Belarus"""
  BY
  """Belgium"""
  BE
  """Belize"""
  BZ
  """Benin"""
  BJ
  """Bermuda"""
  BM
  """Bhutan"""
  BT
  """Bolivia"""
  BO
  """Bosnia & Herzegovina"""
  BA
  """Botswana"""
  BW
  """Bouvet Island"""
  BV
  """Brazil"""
  BR
  """British Indian Ocean Territory"""
  IO
  """British Virgin Islands"""
  VG
  """Brunei"""
  BN
  """Bulgaria"""
  BG
  """Burkina Faso"""
  BF
  """Burundi"""
  BI
  """Cambodia"""
  KH
  """Cameroon"""
  CM
  """Canada"""
  CA
  """Cape Verde"""
  CV
  """Cayman Islands"""
  KY
  """Central African Republic"""
  CF
  """Chad"""
  TD
  """Chile"""
  CL
  """China"""
  CN
  """Christmas Island"""
  CX
  """Cocos (Keeling) Islands"""
  CC
  """Colombia"""
  CO
  """Comoros"""
  KM
  """Congo-Brazzaville"""
  CG
  """Congo-Kinshasa"""
  CD
  """Cook Islands"""
  CK
  """Costa Rica"""
  CR
  """Côte d’Ivoire"""
  CI
  """Croatia"""
  HR
  """Cuba"""
  CU
  """Cyprus"""
  CY
  """Czech Republic"""
  CZ
  """Denmark"""
  DK
  """Djibouti"""
  DJ
  """Dominica"""
  DM
  """Dominican Republic"""
  DO
  """Ecuador"""
  EC
  """Egypt"""
  EG
  """El Salvador"""
  SV
  """Equatorial Guinea"""
  GQ
  """Eritrea"""
  ER
  """Estonia"""
  EE
  """Eswatini"""
  SZ
  """Ethiopia"""
  ET
  """Falkland Islands"""
  FK
  """Faroe Islands"""
  FO
  """Fiji"""
  FJ
  """Finland"""
  FI
  """France"""
  FR
  """French Guiana"""
  GF
  """French Polynesia"""
  PF
  """French Southern Territories"""
  TF
  """Gabon"""
  GA
  """Gambia"""
  GM
  """Georgia"""
  GE
  """Germany"""
  DE
  """Ghana"""
  GH
  """Gibraltar"""
  GI
  """Greece"""
  GR
  """Greenland"""
  GL
  """Grenada"""
  GD
  """Guadeloupe"""
  GP
  """Guam"""
  GU
  """Guatemala"""
  GT
  """Guernsey"""
  GG
  """Guinea"""
  GN
  """Guinea-Bissau"""
  GW
  """Guyana"""
  GY
  """Haiti"""
  HT
  """Heard &amp; McDonald Islands"""
  HM
  """Honduras"""
  HN
  """Hong Kong SAR China"""
  HK
  """Hungary"""
  HU
  """Iceland"""
  IS
  """India"""
  IN
  """Indonesia"""
  ID
  """Iran"""
  IR
  """Iraq"""
  IQ
  """Ireland"""
  IE
  """Isle of Man"""
  IM
  """Israel"""
  IL
  """Italy"""
  IT
  """Jamaica"""
  JM
  """Japan"""
  JP
  """Jersey"""
  JE
  """Jordan"""
  JO
  """Kazakhstan"""
  KZ
  """Kenya"""
  KE
  """Kiribati"""
  KI
  """Kuwait"""
  KW
  """Kyrgyzstan"""
  KG
  """Laos"""
  LA
  """Latvia"""
  LV
  """Lebanon"""
  LB
  """Lesotho"""
  LS
  """Liberia"""
  LR
  """Libya"""
  LY
  """Liechtenstein"""
  LI
  """Lithuania"""
  LT
  """Luxembourg"""
  LU
  """Macau SAR China"""
  MO
  """Macedonia"""
  MK
  """Madagascar"""
  MG
  """Malawi"""
  MW
  """Malaysia"""
  MY
  """Maldives"""
  MV
  """Mali"""
  ML
  """Malta"""
  MT
  """Marshall Islands"""
  MH
  """Martinique"""
  MQ
  """Mauritania"""
  MR
  """Mauritius"""
  MU
  """Mayotte"""
  YT
  """Mexico"""
  MX
  """Micronesia"""
  FM
  """Moldova"""
  MD
  """Monaco"""
  MC
  """Mongolia"""
  MN
  """Montenegro"""
  ME
  """Montserrat"""
  MS
  """Morocco"""
  MA
  """Mozambique"""
  MZ
  """Myanmar (Burma)"""
  MM
  """Namibia"""
  NA
  """Nauru"""
  NR
  """Nepal"""
  NP
  """Netherlands"""
  NL
  """Netherlands Antilles"""
  AN
  """New Caledonia"""
  NC
  """New Zealand"""
  NZ
  """Nicaragua"""
  NI
  """Niger"""
  NE
  """Nigeria"""
  NG
  """Niue"""
  NU
  """Norfolk Island"""
  NF
  """Northern Mariana Islands"""
  MP
  """North Korea"""
  KP
  """Norway"""
  NO
  """Oman"""
  OM
  """Pakistan"""
  PK
  """Palau"""
  PW
  """Palestinian Territories"""
  PS
  """Panama"""
  PA
  """Papua New Guinea"""
  PG
  """Paraguay"""
  PY
  """Peru"""
  PE
  """Philippines"""
  PH
  """Pitcairn Islands"""
  PN
  """Poland"""
  PL
  """Portugal"""
  PT
  """Qatar"""
  QA
  """Réunion"""
  RE
  """Romania"""
  RO
  """Russia"""
  RU
  """Rwanda"""
  RW
  """Samoa"""
  WS
  """San Marino"""
  SM
  """São Tomé & Príncipe"""
  ST
  """Saudi Arabia"""
  SA
  """Senegal"""
  SN
  """Serbia"""
  RS
  """Seychelles"""
  SC
  """Sierra Leone"""
  SL
  """Singapore"""
  SG
  """Slovakia"""
  SK
  """Slovenia"""
  SI
  """Solomon Islands"""
  SB
  """Somalia"""
  SO
  """South Africa"""
  ZA
  """South Georgia & South Sandwich Islands"""
  GS
  """South Korea"""
  KR
  """Spain"""
  ES
  """Sri Lanka"""
  LK
  """St. Barthélemy"""
  BL
  """St. Helena"""
  SH
  """St. Kitts & Nevis"""
  KN
  """St. Lucia"""
  LC
  """St. Martin"""
  MF
  """St. Pierre & Miquelon"""
  PM
  """St. Vincent & Grenadines"""
  VC
  """Sudan"""
  SD
  """Suriname"""
  SR
  """Svalbard & Jan Mayen"""
  SJ
  """Sweden"""
  SE
  """Switzerland"""
  CH
  """Syria"""
  SY
  """Taiwan"""
  TW
  """Tajikistan"""
  TJ
  """Tanzania"""
  TZ
  """Thailand"""
  TH
  """Timor-Leste"""
  TL
  """Togo"""
  TG
  """Tokelau"""
  TK
  """Tonga"""
  TO
  """Trinidad & Tobago"""
  TT
  """Tunisia"""
  TN
  """Turkey"""
  TR
  """Turkmenistan"""
  TM
  """Turks & Caicos Islands"""
  TC
  """Tuvalu"""
  TV
  """Uganda"""
  UG
  """Ukraine"""
  UA
  """United Arab Emirates"""
  AE
  """United Kingdom"""
  GB
  """United States"""
  US
  """Uruguay"""
  UY
  """U.S. Outlying Islands"""
  UM
  """U.S. Virgin Islands"""
  VI
  """Uzbekistan"""
  UZ
  """Vanuatu"""
  VU
  """Vatican City"""
  VA
  """Venezuela"""
  VE
  """Vietnam"""
  VN
  """Wallis & Futuna"""
  WF
  """Western Sahara"""
  EH
  """Yemen"""
  YE
  """Zambia"""
  ZM
  """Zimbabwe"""
  ZW
}

"""Customer attribute metadata."""
type CustomerAttributeMetadata implements CustomAttributeMetadataInterface {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: ID!
  """Default attribute value."""
  default_value: String
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum!
  """The frontend class of the attribute."""
  frontend_class: String
  """The frontend input type of the attribute."""
  frontend_input: AttributeFrontendInputEnum
  """The template used for the input of the attribute (e.g., 'date')."""
  input_filter: InputFilterEnum
  """Whether the attribute value is required."""
  is_required: Boolean!
  """Whether the attribute value must be unique."""
  is_unique: Boolean!
  """The label assigned to the attribute."""
  label: String
  """The number of lines of the attribute value."""
  multiline_count: Int
  """Attribute options."""
  options: [CustomAttributeOptionInterface]!
  """The position of the attribute in the form."""
  sort_order: Int
  """The validation rules of the attribute value."""
  validate_rules: [ValidationRule]
}

"""List of templates/filters applied to customer attribute input."""
enum InputFilterEnum {
  """There are no templates or filters to be applied."""
  NONE
  """Forces attribute input to follow the date format."""
  DATE
  """
  Strip whitespace (or other characters) from the beginning and end of the input.
  """
  TRIM
  """Strip HTML Tags."""
  STRIPTAGS
  """Escape HTML Entities."""
  ESCAPEHTML
}

"""Defines a customer attribute validation rule."""
type ValidationRule {
  """Validation rule name applied to a customer attribute."""
  name: ValidationRuleEnum
  """Validation rule value."""
  value: String
}

"""List of validation rule names applied to a customer attribute."""
enum ValidationRuleEnum {
  DATE_RANGE_MAX
  DATE_RANGE_MIN
  FILE_EXTENSIONS
  INPUT_VALIDATION
  MAX_TEXT_LENGTH
  MIN_TEXT_LENGTH
  MAX_FILE_SIZE
  MAX_IMAGE_HEIGHT
  MAX_IMAGE_WIDTH
}

"""List of account confirmation statuses."""
enum ConfirmationStatusEnum {
  """Account confirmed"""
  ACCOUNT_CONFIRMED
  """Account confirmation not required"""
  ACCOUNT_CONFIRMATION_NOT_REQUIRED
}

"""Defines properties of a negotiable quote request."""
input RequestNegotiableQuoteInput {
  """The cart ID of the buyer requesting a new negotiable quote."""
  cart_id: ID!
  """Comments the buyer entered to describe the request."""
  comment: NegotiableQuoteCommentInput!
  """Flag indicating if quote is draft or not."""
  is_draft: Boolean
  """The name the buyer assigned to the negotiable quote request."""
  quote_name: String!
}

"""Specifies the items to update."""
input UpdateNegotiableQuoteQuantitiesInput {
  """An array of items to update."""
  items: [NegotiableQuoteItemQuantityInput]!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Specifies the updated quantity of an item."""
input NegotiableQuoteItemQuantityInput {
  """The new quantity of the negotiable quote item."""
  quantity: Float!
  """The unique ID of a `CartItemInterface` object."""
  quote_item_uid: ID!
}

"""Contains the updated negotiable quote."""
type UpdateNegotiableQuoteItemsQuantityOutput {
  """The updated negotiable quote."""
  quote: NegotiableQuote
}

"""Specifies the negotiable quote to convert to an order."""
input PlaceNegotiableQuoteOrderInput {
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""An output object that returns the generated order."""
type PlaceNegotiableQuoteOrderOutput {
  """Contains the generated order number."""
  order: Order!
}

"""Specifies which negotiable quote to send for review."""
input SendNegotiableQuoteForReviewInput {
  """A comment for the seller to review."""
  comment: NegotiableQuoteCommentInput
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Contains the negotiable quote."""
type SendNegotiableQuoteForReviewOutput {
  """The negotiable quote after sending for seller review."""
  quote: NegotiableQuote
}

"""Defines the shipping address to assign to the negotiable quote."""
input SetNegotiableQuoteShippingAddressInput {
  """The unique ID of a `CustomerAddress` object."""
  customer_address_id: ID
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
  """An array of shipping addresses to apply to the negotiable quote."""
  shipping_addresses: [NegotiableQuoteShippingAddressInput]
}

"""Defines shipping addresses for the negotiable quote."""
input NegotiableQuoteShippingAddressInput {
  """A shipping address."""
  address: NegotiableQuoteAddressInput
  """
  An ID from the company user's address book that uniquely identifies the address to be used for shipping.
  """
  customer_address_uid: ID
  """Text provided by the company user."""
  customer_notes: String
}

"""Sets the billing address."""
input SetNegotiableQuoteBillingAddressInput {
  """The billing address to be added."""
  billing_address: NegotiableQuoteBillingAddressInput!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Defines the billing address."""
input NegotiableQuoteBillingAddressInput {
  """Defines a billing address."""
  address: NegotiableQuoteAddressInput
  """The unique ID of a `CustomerAddress` object."""
  customer_address_uid: ID
  """
  Indicates whether to set the billing address to be the same as the existing shipping address on the negotiable quote.
  """
  same_as_shipping: Boolean
  """
  Indicates whether to set the shipping address to be the same as this billing address.
  """
  use_for_shipping: Boolean
}

"""Defines the billing or shipping address to be applied to the cart."""
input NegotiableQuoteAddressInput {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company name."""
  company: String
  """The country code and label for the billing or shipping address."""
  country_code: String!
  """The first name of the company user."""
  firstname: String!
  """The last name of the company user."""
  lastname: String!
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """
  A string that defines the state or province of the billing or shipping address.
  """
  region: String
  """
  An integer that defines the state or province of the billing or shipping address.
  """
  region_id: Int
  """
  Determines whether to save the address in the customer's address book. The default value is true.
  """
  save_in_address_book: Boolean
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """The telephone number for the billing or shipping address."""
  telephone: String
}

"""Defines the shipping method to apply to the negotiable quote."""
input SetNegotiableQuoteShippingMethodsInput {
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
  """An array of shipping methods to apply to the negotiable quote."""
  shipping_methods: [ShippingMethodInput]!
}

"""Sets quote item note."""
input LineItemNoteInput {
  """The note text to be added."""
  note: String
  """The unique ID of a `CartLineItem` object."""
  quote_item_uid: ID!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Sets new name for a negotiable quote."""
input RenameNegotiableQuoteInput {
  """The reason for the quote name change specified by the buyer."""
  quote_comment: String
  """
  The new quote name the buyer specified to the negotiable quote request.
  """
  quote_name: String!
  """The cart ID of the buyer requesting a new negotiable quote."""
  quote_uid: ID!
}

"""Contains the updated negotiable quote."""
type SetLineItemNoteOutput {
  """The negotiable quote after sending for seller review."""
  quote: NegotiableQuote
}

"""Move Line Item to Requisition List."""
input MoveLineItemToRequisitionListInput {
  """The unique ID of a `CartLineItem` object."""
  quote_item_uid: ID!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
  """The unique ID of a requisition list."""
  requisition_list_uid: ID!
}

"""Contains the updated negotiable quote."""
type MoveLineItemToRequisitionListOutput {
  """The negotiable quote after moving item to requisition list."""
  quote: NegotiableQuote
}

"""Contains the negotiable quote."""
type SetNegotiableQuoteShippingMethodsOutput {
  """The negotiable quote after applying shipping methods."""
  quote: NegotiableQuote
}

"""Contains the negotiable quote."""
type SetNegotiableQuoteShippingAddressOutput {
  """The negotiable quote after assigning a shipping address."""
  quote: NegotiableQuote
}

"""Contains the negotiable quote."""
type SetNegotiableQuoteBillingAddressOutput {
  """The negotiable quote after assigning a billing address."""
  quote: NegotiableQuote
}

"""Defines the items to remove from the specified negotiable quote."""
input RemoveNegotiableQuoteItemsInput {
  """
  An array of IDs indicating which items to remove from the negotiable quote.
  """
  quote_item_uids: [ID]!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Contains the negotiable quote."""
type RemoveNegotiableQuoteItemsOutput {
  """The negotiable quote after removing items."""
  quote: NegotiableQuote
}

"""Defines the negotiable quotes to mark as closed."""
input CloseNegotiableQuotesInput {
  """A list of unique IDs from `NegotiableQuote` objects."""
  quote_uids: [ID]!
}

"""
Contains the closed negotiable quotes and other negotiable quotes the company user can view.
"""
type CloseNegotiableQuotesOutput {
  """An array containing the negotiable quotes that were just closed."""
  closed_quotes: [NegotiableQuote] @deprecated(reason: "Use `operation_results` instead.")
  """
  A list of negotiable quotes that can be viewed by the logged-in customer
  """
  negotiable_quotes(
    """The filter to use to determine which negotiable quotes to close."""
    filter: NegotiableQuoteFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The field to use for sorting results."""
    sort: NegotiableQuoteSortInput
  ): NegotiableQuotesOutput
  """An array of closed negotiable quote UIDs and details about any errors."""
  operation_results: [CloseNegotiableQuoteOperationResult]!
  """The status of the request to close one or more negotiable quotes."""
  result_status: BatchMutationStatus!
}

"""Contains the updated negotiable quote."""
type RenameNegotiableQuoteOutput {
  """The negotiable quote after updating the name."""
  quote: NegotiableQuote
}

union CloseNegotiableQuoteOperationResult = NegotiableQuoteUidOperationSuccess | CloseNegotiableQuoteOperationFailure

union CloseNegotiableQuoteError = NegotiableQuoteInvalidStateError | NoSuchEntityUidError | InternalError

"""
Contains a list of undeleted negotiable quotes the company user can view.
"""
type DeleteNegotiableQuotesOutput {
  """A list of negotiable quotes that the customer can view"""
  negotiable_quotes(
    """The filter to use to determine which negotiable quotes to delete."""
    filter: NegotiableQuoteFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The field to use for sorting results."""
    sort: NegotiableQuoteSortInput
  ): NegotiableQuotesOutput
  """
  An array of deleted negotiable quote UIDs and details about any errors.
  """
  operation_results: [DeleteNegotiableQuoteOperationResult]!
  """The status of the request to delete one or more negotiable quotes."""
  result_status: BatchMutationStatus!
}

union DeleteNegotiableQuoteOperationResult = NegotiableQuoteUidOperationSuccess | DeleteNegotiableQuoteOperationFailure

union DeleteNegotiableQuoteError = NegotiableQuoteInvalidStateError | NoSuchEntityUidError | InternalError

"""Defines the payment method to be applied to the negotiable quote."""
input NegotiableQuotePaymentMethodInput {
  """Payment method code"""
  code: String!
  """The purchase order number. Optional for most payment methods."""
  purchase_order_number: String
}

"""
Contains details about the negotiable quote after setting the payment method.
"""
type SetNegotiableQuotePaymentMethodOutput {
  """The updated negotiable quote."""
  quote: NegotiableQuote
}

"""Contains a list of negotiable that match the specified filter."""
type NegotiableQuotesOutput {
  """A list of negotiable quotes"""
  items: [NegotiableQuote]!
  """Contains pagination metadata"""
  page_info: SearchResultPageInfo!
  """Contains the default sort field and all available sort fields."""
  sort_fields: SortFields
  """The number of negotiable quotes returned"""
  total_count: Int!
}

"""Defines the field to use to sort a list of negotiable quotes."""
input NegotiableQuoteSortInput {
  """Whether to return results in ascending or descending order."""
  sort_direction: SortEnum!
  """The specified sort field."""
  sort_field: NegotiableQuoteSortableField!
}

enum NegotiableQuoteSortableField {
  """Sorts negotiable quotes by name."""
  QUOTE_NAME
  """Sorts negotiable quotes by the dates they were created."""
  CREATED_AT
  """Sorts negotiable quotes by the dates they were last modified."""
  UPDATED_AT
}

"""Contains the commend provided by the buyer."""
input NegotiableQuoteCommentInput {
  """The comment provided by the buyer."""
  comment: String!
}

"""Contains a single plain text comment from either the buyer or seller."""
type NegotiableQuoteComment {
  """The first and last name of the commenter."""
  author: NegotiableQuoteUser!
  """Timestamp indicating when the comment was created."""
  created_at: String!
  """Indicates whether a buyer or seller commented."""
  creator_type: NegotiableQuoteCommentCreatorType!
  """The plain text comment."""
  text: String!
  """The unique ID of a `NegotiableQuoteComment` object."""
  uid: ID!
}

enum NegotiableQuoteCommentCreatorType {
  BUYER
  SELLER
}

"""Contains details about a negotiable quote."""
type NegotiableQuote {
  """
  An array of payment methods that can be applied to the negotiable quote.
  """
  available_payment_methods: [AvailablePaymentMethod]
  """The billing address applied to the negotiable quote."""
  billing_address: NegotiableQuoteBillingAddress
  """The first and last name of the buyer."""
  buyer: NegotiableQuoteUser!
  """A list of comments made by the buyer and seller."""
  comments: [NegotiableQuoteComment]
  """Timestamp indicating when the negotiable quote was created."""
  created_at: String
  """The email address of the company user."""
  email: String
  """A list of status and price changes for the negotiable quote."""
  history: [NegotiableQuoteHistoryEntry]
  """Indicates whether the negotiable quote contains only virtual products."""
  is_virtual: Boolean!
  """The list of items in the negotiable quote."""
  items: [CartItemInterface]
  """The title assigned to the negotiable quote."""
  name: String!
  """A set of subtotals and totals applied to the negotiable quote."""
  prices: CartPrices
  """The payment method that was applied to the negotiable quote."""
  selected_payment_method: SelectedPaymentMethod
  """A list of shipping addresses applied to the negotiable quote."""
  shipping_addresses: [NegotiableQuoteShippingAddress]!
  """The status of the negotiable quote."""
  status: NegotiableQuoteStatus!
  """The total number of items in the negotiable quote."""
  total_quantity: Float!
  """The unique ID of a `NegotiableQuote` object."""
  uid: ID!
  """Timestamp indicating when the negotiable quote was updated."""
  updated_at: String
}

enum NegotiableQuoteStatus {
  SUBMITTED
  PENDING
  UPDATED
  OPEN
  ORDERED
  CLOSED
  DECLINED
  EXPIRED
  DRAFT
}

"""Defines a filter to limit the negotiable quotes to return."""
input NegotiableQuoteFilterInput {
  """Filter by the ID of one or more negotiable quotes."""
  ids: FilterEqualTypeInput
  """Filter by the negotiable quote name."""
  name: FilterMatchTypeInput
}

"""Contains details about a change for a negotiable quote."""
type NegotiableQuoteHistoryEntry {
  """The person who made a change in the status of the negotiable quote."""
  author: NegotiableQuoteUser!
  """
  An enum that describes the why the entry in the negotiable quote history changed status.
  """
  change_type: NegotiableQuoteHistoryEntryChangeType!
  """The set of changes in the negotiable quote."""
  changes: NegotiableQuoteHistoryChanges
  """Timestamp indicating when the negotiable quote entry was created."""
  created_at: String
  """The unique ID of a `NegotiableQuoteHistoryEntry` object."""
  uid: ID!
}

"""Contains a list of changes to a negotiable quote."""
type NegotiableQuoteHistoryChanges {
  """The comment provided with a change in the negotiable quote history."""
  comment_added: NegotiableQuoteHistoryCommentChange
  """Lists log entries added by third-party extensions."""
  custom_changes: NegotiableQuoteCustomLogChange
  """
  The expiration date of the negotiable quote before and after a change in the quote history.
  """
  expiration: NegotiableQuoteHistoryExpirationChange
  """
  Lists products that were removed as a result of a change in the quote history.
  """
  products_removed: NegotiableQuoteHistoryProductsRemovedChange
  """The status before and after a change in the negotiable quote history."""
  statuses: NegotiableQuoteHistoryStatusesChange
  """
  The total amount of the negotiable quote before and after a change in the quote history.
  """
  total: NegotiableQuoteHistoryTotalChange
}

"""
Lists a new status change applied to a negotiable quote and the previous status.
"""
type NegotiableQuoteHistoryStatusChange {
  """The updated status."""
  new_status: NegotiableQuoteStatus!
  """
  The previous status. The value will be null for the first history entry in a negotiable quote.
  """
  old_status: NegotiableQuoteStatus
}

"""
Contains a list of status changes that occurred for the negotiable quote.
"""
type NegotiableQuoteHistoryStatusesChange {
  """A list of status changes."""
  changes: [NegotiableQuoteHistoryStatusChange]!
}

"""Contains a comment submitted by a seller or buyer."""
type NegotiableQuoteHistoryCommentChange {
  """A plain text comment submitted by a seller or buyer."""
  comment: String!
}

"""Contains a new price and the previous price."""
type NegotiableQuoteHistoryTotalChange {
  """The total price as a result of the change."""
  new_price: Money
  """The previous total price on the negotiable quote."""
  old_price: Money
}

"""Contains a new expiration date and the previous date."""
type NegotiableQuoteHistoryExpirationChange {
  """
  The expiration date after the change. The value will be 'null' if not set.
  """
  new_expiration: String
  """
  The previous expiration date. The value will be 'null' if not previously set.
  """
  old_expiration: String
}

"""
Contains lists of products that have been removed from the catalog and negotiable quote.
"""
type NegotiableQuoteHistoryProductsRemovedChange {
  """A list of product IDs the seller removed from the catalog."""
  products_removed_from_catalog: [ID]
  """
  A list of products removed from the negotiable quote by either the buyer or the seller.
  """
  products_removed_from_quote: [ProductInterface]
}

"""Contains custom log entries added by third-party extensions."""
type NegotiableQuoteCustomLogChange {
  """The new entry content."""
  new_value: String!
  """The previous entry in the custom log."""
  old_value: String
  """The title of the custom log entry."""
  title: String!
}

enum NegotiableQuoteHistoryEntryChangeType {
  CREATED
  UPDATED
  CLOSED
  UPDATED_BY_SYSTEM
}

"""
Contains the `NegotiableQuote` object generated when a buyer requests a negotiable quote.
"""
type RequestNegotiableQuoteOutput {
  """Details about the negotiable quote."""
  quote: NegotiableQuote
}

interface NegotiableQuoteAddressInterface {
  """The company's city or town."""
  city: String!
  """The company name associated with the shipping/billing address."""
  company: String
  """The company's country."""
  country: NegotiableQuoteAddressCountry!
  """The first name of the company user."""
  firstname: String!
  """The last name of the company user."""
  lastname: String!
  """The company's ZIP or postal code."""
  postcode: String
  """An object containing the region name, region code, and region ID."""
  region: NegotiableQuoteAddressRegion
  """An array of strings that define the street number and name."""
  street: [String]!
  """The customer's telephone number."""
  telephone: String
}

"""Defines the company's state or province."""
type NegotiableQuoteAddressRegion {
  """The address region code."""
  code: String
  """The display name of the region."""
  label: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Defines the company's country."""
type NegotiableQuoteAddressCountry {
  """The address country code."""
  code: String!
  """The display name of the region."""
  label: String!
}

type NegotiableQuoteShippingAddress implements NegotiableQuoteAddressInterface {
  """An array of shipping methods available to the buyer."""
  available_shipping_methods: [AvailableShippingMethod]
  """The company's city or town."""
  city: String!
  """The company name associated with the shipping/billing address."""
  company: String
  """The company's country."""
  country: NegotiableQuoteAddressCountry!
  """The first name of the company user."""
  firstname: String!
  """The last name of the company user."""
  lastname: String!
  """The company's ZIP or postal code."""
  postcode: String
  """An object containing the region name, region code, and region ID."""
  region: NegotiableQuoteAddressRegion
  """The selected shipping method."""
  selected_shipping_method: SelectedShippingMethod
  """An array of strings that define the street number and name."""
  street: [String]!
  """The customer's telephone number."""
  telephone: String
}

type NegotiableQuoteBillingAddress implements NegotiableQuoteAddressInterface {
  """The company's city or town."""
  city: String!
  """The company name associated with the shipping/billing address."""
  company: String
  """The company's country."""
  country: NegotiableQuoteAddressCountry!
  """The first name of the company user."""
  firstname: String!
  """The last name of the company user."""
  lastname: String!
  """The company's ZIP or postal code."""
  postcode: String
  """An object containing the region name, region code, and region ID."""
  region: NegotiableQuoteAddressRegion
  """An array of strings that define the street number and name."""
  street: [String]!
  """The customer's telephone number."""
  telephone: String
}

"""A limited view of a Buyer or Seller in the negotiable quote process."""
type NegotiableQuoteUser {
  """The first name of the buyer or seller making a change."""
  firstname: String!
  """The buyer's or seller's last name."""
  lastname: String!
}

interface NegotiableQuoteUidNonFatalResultInterface {
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Contains details about a successful operation on a negotiable quote."""
type NegotiableQuoteUidOperationSuccess implements NegotiableQuoteUidNonFatalResultInterface {
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""
An error indicating that an operation was attempted on a negotiable quote in an invalid state.
"""
type NegotiableQuoteInvalidStateError implements ErrorInterface {
  """The returned error message."""
  message: String!
}

"""The note object for quote line item."""
type ItemNote {
  """Timestamp that reflects note creation date."""
  created_at: String
  """ID of the user who submitted a note."""
  creator_id: Int
  """Type of teh user who submitted a note."""
  creator_type: Int
  """The unique ID of a `CartItemInterface` object."""
  negotiable_quote_item_uid: ID
  """Note text."""
  note: String
  """The unique ID of a `ItemNote` object."""
  note_uid: ID
}

"""Contains details about a failed close operation on a negotiable quote."""
type CloseNegotiableQuoteOperationFailure {
  """
  An array of errors encountered while attempting close the negotiable quote.
  """
  errors: [CloseNegotiableQuoteError]!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

input DeleteNegotiableQuotesInput {
  """A list of unique IDs for `NegotiableQuote` objects to delete."""
  quote_uids: [ID]!
}

"""
Contains details about a failed delete operation on a negotiable quote.
"""
type DeleteNegotiableQuoteOperationFailure {
  errors: [DeleteNegotiableQuoteError]!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""Defines the payment method of the specified negotiable quote."""
input SetNegotiableQuotePaymentMethodInput {
  """The payment method to be assigned to the negotiable quote."""
  payment_method: NegotiableQuotePaymentMethodInput!
  """The unique ID of a `NegotiableQuote` object."""
  quote_uid: ID!
}

"""
Defines an object used to iterate through items for product comparisons.
"""
type ComparableItem {
  """An array of product attributes that can be used to compare products."""
  attributes: [ProductAttribute]!
  """Details about a product in a compare list."""
  product: ProductInterface!
  """The unique ID of an item in a compare list."""
  uid: ID!
}

"""Contains a product attribute code and value."""
type ProductAttribute {
  """The unique identifier for a product attribute code."""
  code: String!
  """The display value of the attribute."""
  value: String!
}

"""Contains an attribute code that is used for product comparisons."""
type ComparableAttribute {
  """An attribute code that is enabled for product comparisons."""
  code: String!
  """The label of the attribute code."""
  label: String!
}

"""
Contains iterable information such as the array of items, the count, and attributes that represent the compare list.
"""
type CompareList {
  """An array of attributes that can be used for comparing products."""
  attributes: [ComparableAttribute]
  """The number of items in the compare list."""
  item_count: Int!
  """An array of products to compare."""
  items: [ComparableItem]
  """The unique ID assigned to the compare list."""
  uid: ID!
}

"""Contains an array of product IDs to use for creating a compare list."""
input CreateCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]
}

"""Contains products to add to an existing compare list."""
input AddProductsToCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]!
  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Defines which products to remove from a compare list."""
input RemoveProductsFromCompareListInput {
  """An array of product IDs to remove from the compare list."""
  products: [ID]!
  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Contains the results of the request to delete a compare list."""
type DeleteCompareListOutput {
  """Indicates whether the compare list was successfully deleted."""
  result: Boolean!
}

"""Contains the results of the request to assign a compare list."""
type AssignCompareListToCustomerOutput {
  """The contents of the customer's compare list."""
  compare_list: CompareList
  """
  Indicates whether the compare list was successfully assigned to the customer.
  """
  result: Boolean!
}

"""
Defines basic features of a configurable product and its simple product variants.
"""
type ConfigurableProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of options for the configurable product."""
  configurable_options: [ConfigurableProductOptions]
  """
  An array of media gallery items and other details about selected configurable product options as well as details about remaining selectable options.
  """
  configurable_product_options_selection(configurableOptionValueUids: [ID!]): ConfigurableProductOptionsSelection
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of simple product variants."""
  variants: [ConfigurableVariant]
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains all the simple product variants of a configurable product."""
type ConfigurableVariant {
  """An array of configurable attribute options."""
  attributes: [ConfigurableAttributeOption]
  """An array of linked simple products."""
  product: SimpleProduct
}

"""Contains details about a configurable product attribute option."""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute."""
  code: String
  """A string that describes the configurable attribute option."""
  label: String
  """The unique ID for a `ConfigurableAttributeOption` object."""
  uid: ID!
  """A unique index number assigned to the configurable product option."""
  value_index: Int
}

"""Defines configurable attributes for the specified product."""
type ConfigurableProductOptions {
  """A string that identifies the attribute."""
  attribute_code: String
  """The ID assigned to the attribute."""
  attribute_id: String @deprecated(reason: "Use `attribute_uid` instead.")
  """The ID assigned to the attribute."""
  attribute_id_v2: Int @deprecated(reason: "Use `attribute_uid` instead.")
  """The unique ID for an `Attribute` object."""
  attribute_uid: ID!
  """The configurable option ID number assigned by the system."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  """A displayed string that describes the configurable product option."""
  label: String
  """A number that indicates the order in which the attribute is displayed."""
  position: Int
  """This is the same as a product's `id` field."""
  product_id: Int @deprecated(reason: "`product_id` is not needed and can be obtained from its parent.")
  """The unique ID for a `ConfigurableProductOptions` object."""
  uid: ID!
  """Indicates whether the option is the default."""
  use_default: Boolean
  """
  An array that defines the `value_index` codes assigned to the configurable product.
  """
  values: [ConfigurableProductOptionsValues]
}

"""Contains the index number assigned to a configurable product option."""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store."""
  default_label: String
  """The label of the product."""
  label: String
  """The label of the product on the current store."""
  store_label: String
  """Swatch data for a configurable product option."""
  swatch_data: SwatchDataInterface
  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  uid: ID
  """Indicates whether to use the default_label."""
  use_default_value: Boolean
  """A unique index number assigned to the configurable product option."""
  value_index: Int @deprecated(reason: "Use `uid` instead.")
}

"""Defines the configurable products to add to the cart."""
input AddConfigurableProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of configurable products to add."""
  cart_items: [ConfigurableProductCartItemInput]!
}

"""Contains details about the cart after adding configurable products."""
type AddConfigurableProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

input ConfigurableProductCartItemInput {
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the configurable product."""
  data: CartItemInput!
  """The SKU of the parent configurable product."""
  parent_sku: String
  """Deprecated. Use `CartItemInput.sku` instead."""
  variant_sku: String
}

"""An implementation for configurable product cart items."""
type ConfigurableCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item."""
  available_gift_wrapping: [GiftWrapping]!
  """An array containing the configuranle options the shopper selected."""
  configurable_options: [SelectedConfigurableOption]!
  """Product details of the cart item."""
  configured_variant: ProductInterface!
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the cart item."""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""Contains details about a selected configurable option."""
type SelectedConfigurableOption {
  """The unique ID for a `ConfigurableProductOptions` object."""
  configurable_product_option_uid: ID!
  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  configurable_product_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_uid` instead.")
  """The display text for the option."""
  option_label: String!
  value_id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_value_uid` instead.")
  """The display name of the selected configurable option."""
  value_label: String!
}

"""A configurable product wish list item."""
type ConfigurableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """
  The SKU of the simple product corresponding to a set of selected configurable options.
  """
  child_sku: String! @deprecated(reason: "Use `ConfigurableWishlistItem.configured_variant.sku` instead.")
  """An array of selected configurable options."""
  configurable_options: [SelectedConfigurableOption]
  """
  Product details of the selected variant. The value is null if some options are not configured.
  """
  configured_variant: ProductInterface
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains metadata corresponding to the selected configurable options."""
type ConfigurableProductOptionsSelection {
  """An array of all possible configurable options."""
  configurable_options: [ConfigurableProductOption]
  """
  Product images and videos corresponding to the specified configurable options selection.
  """
  media_gallery: [MediaGalleryInterface]
  """
  The configurable options available for further selection based on the current selection.
  """
  options_available_for_selection: [ConfigurableOptionAvailableForSelection]
  """
  A variant represented by the specified configurable options selection. The value is expected to be null until selections are made for each configurable option.
  """
  variant: SimpleProduct
}

"""
Describes configurable options that have been selected and can be selected as a result of the previous selections.
"""
type ConfigurableOptionAvailableForSelection {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!
  """An array of selectable option value IDs."""
  option_value_uids: [ID]!
}

"""Contains details about configurable product options."""
type ConfigurableProductOption {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!
  """The display name of the option."""
  label: String!
  """The unique ID of the configurable option."""
  uid: ID!
  """An array of values that are applicable for this option."""
  values: [ConfigurableProductOptionValue]
}

"""Defines a value for a configurable product option."""
type ConfigurableProductOptionValue {
  """Indicates whether the product is available with this selected option."""
  is_available: Boolean!
  """Indicates whether the value is the default."""
  is_use_default: Boolean!
  """The display name of the value."""
  label: String!
  """The URL assigned to the thumbnail of the swatch image."""
  swatch: SwatchDataInterface
  """The unique ID of the value."""
  uid: ID!
}

"""Defines customer requisition lists."""
type RequisitionLists {
  """An array of requisition lists."""
  items: [RequisitionList]
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """The number of returned requisition lists."""
  total_count: Int
}

"""Defines the contents of a requisition list."""
type RequisitionList {
  """Optional text that describes the requisition list."""
  description: String
  """An array of products added to the requisition list."""
  items(
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """The maximum number of results to return. The default value is 1."""
    pageSize: Int = 20
  ): RequistionListItems
  """The number of items in the list."""
  items_count: Int!
  """The requisition list name."""
  name: String!
  """The unique requisition list ID."""
  uid: ID!
  """The time of the last modification of the requisition list."""
  updated_at: String
}

"""Contains an array of items added to a requisition list."""
type RequistionListItems {
  """An array of items in the requisition list."""
  items: [RequisitionListItemInterface]!
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """The number of pages returned."""
  total_pages: Int!
}

"""The interface for requisition list items."""
interface RequisitionListItemInterface {
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The amount added."""
  quantity: Float!
  """The unique ID for the requisition list item."""
  uid: ID!
}

"""Contains details about simple products added to a requisition list."""
type SimpleRequisitionListItem implements RequisitionListItemInterface {
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The amount added."""
  quantity: Float!
  """The unique ID for the requisition list item."""
  uid: ID!
}

"""Contains details about virtual products added to a requisition list."""
type VirtualRequisitionListItem implements RequisitionListItemInterface {
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The amount added."""
  quantity: Float!
  """The unique ID for the requisition list item."""
  uid: ID!
}

"""An input object that identifies and describes a new requisition list."""
input CreateRequisitionListInput {
  """An optional description of the requisition list."""
  description: String
  """The name assigned to the requisition list."""
  name: String!
}

"""
An input object that defines which requistion list characteristics to update.
"""
input UpdateRequisitionListInput {
  """The updated description of the requisition list."""
  description: String
  """The new name of the requisition list."""
  name: String!
}

"""Output of the request to rename the requisition list."""
type UpdateRequisitionListOutput {
  """The renamed requisition list."""
  requisition_list: RequisitionList
}

"""Defines which items in a requisition list to update."""
input UpdateRequisitionListItemsInput {
  """An array of customer-entered options."""
  entered_options: [EnteredOptionInput]
  """The ID of the requisition list item to update."""
  item_id: ID!
  """The new quantity of the item."""
  quantity: Float
  """An array of selected option IDs."""
  selected_options: [String]
}

"""
Output of the request to update items in the specified requisition list.
"""
type UpdateRequisitionListItemsOutput {
  """The requisition list after updating items."""
  requisition_list: RequisitionList
}

"""
Indicates whether the request to delete the requisition list was successful.
"""
type DeleteRequisitionListOutput {
  """The customer's requisition lists after deleting a requisition list."""
  requisition_lists: RequisitionLists
  """
  Indicates whether the request to delete the requisition list was successful.
  """
  status: Boolean!
}

"""Output of the request to add products to a requisition list."""
type AddProductsToRequisitionListOutput {
  """The requisition list after adding products."""
  requisition_list: RequisitionList
}

"""Output of the request to remove items from the requisition list."""
type DeleteRequisitionListItemsOutput {
  """The requisition list after removing items."""
  requisition_list: RequisitionList
}

"""Output of the request to add items in a requisition list to the cart."""
type AddRequisitionListItemsToCartOutput {
  """
  Details about why the attempt to add items to the requistion list was not successful.
  """
  add_requisition_list_items_to_cart_user_errors: [AddRequisitionListItemToCartUserError]!
  """The cart after adding requisition list items."""
  cart: Cart
  """
  Indicates whether the attempt to add items to the requisition list was successful.
  """
  status: Boolean!
}

"""
Contains details about why an attempt to add items to the requistion list failed.
"""
type AddRequisitionListItemToCartUserError {
  """A description of the error."""
  message: String!
  """The type of error that occurred."""
  type: AddRequisitionListItemToCartUserErrorType!
}

enum AddRequisitionListItemToCartUserErrorType {
  OUT_OF_STOCK
  UNAVAILABLE_SKU
  OPTIONS_UPDATED
  LOW_QUANTITY
}

"""
An input object that defines the items in a requisition list to be copied.
"""
input CopyItemsBetweenRequisitionListsInput {
  """
  An array of IDs representing products copied from one requisition list to another.
  """
  requisitionListItemUids: [ID]!
}

"""
Output of the request to copy items to the destination requisition list.
"""
type CopyItemsFromRequisitionListsOutput {
  """The destination requisition list after the items were copied."""
  requisition_list: RequisitionList
}

"""
An input object that defines the items in a requisition list to be moved.
"""
input MoveItemsBetweenRequisitionListsInput {
  """
  An array of IDs representing products moved from one requisition list to another.
  """
  requisitionListItemUids: [ID]!
}

"""Output of the request to move items to another requisition list."""
type MoveItemsBetweenRequisitionListsOutput {
  """The destination requisition list after moving items."""
  destination_requisition_list: RequisitionList
  """The source requisition list after moving items."""
  source_requisition_list: RequisitionList
}

"""Defines requisition list filters."""
input RequisitionListFilterInput {
  """Filter by the display name of the requisition list."""
  name: FilterMatchTypeInput
  """Filter requisition lists by one or more requisition list IDs."""
  uids: FilterEqualTypeInput
}

"""Output of the request to create a requisition list."""
type CreateRequisitionListOutput {
  """The created requisition list."""
  requisition_list: RequisitionList
}

"""Output of the request to clear the customer cart."""
type ClearCustomerCartOutput {
  """The cart after clearing items."""
  cart: Cart
  """Indicates whether cart was cleared."""
  status: Boolean!
}

"""Defines the items to add."""
input RequisitionListItemsInput {
  """Entered option IDs."""
  entered_options: [EnteredOptionInput]
  """For configurable products, the SKU of the parent product."""
  parent_sku: String
  """The quantity of the product to add."""
  quantity: Float
  """Selected option IDs."""
  selected_options: [String]
  """The product SKU."""
  sku: String!
}

input ContactUsInput {
  """The shopper's comment to the merchant."""
  comment: String!
  """The email address of the shopper."""
  email: String!
  """The full name of the shopper."""
  name: String!
  """The shopper's telephone number."""
  telephone: String
}

"""Contains the status of the request."""
type ContactUsOutput {
  """Indicates whether the request was successful."""
  status: Boolean!
}

"""
Defines the input required to run the `applyStoreCreditToCart` mutation.
"""
input ApplyStoreCreditToCartInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
}

"""Defines the possible output for the `applyStoreCreditToCart` mutation."""
type ApplyStoreCreditToCartOutput {
  """The contents of the specified shopping cart."""
  cart: Cart!
}

"""
Defines the input required to run the `removeStoreCreditFromCart` mutation.
"""
input RemoveStoreCreditFromCartInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
}

"""
Defines the possible output for the `removeStoreCreditFromCart` mutation.
"""
type RemoveStoreCreditFromCartOutput {
  """The contents of the specified shopping cart."""
  cart: Cart!
}

"""Contains the applied and current balances."""
type AppliedStoreCredit {
  """The applied store credit balance to the current cart."""
  applied_balance: Money
  """The current balance remaining on store credit."""
  current_balance: Money
  """
  Indicates whether store credits are enabled. If the feature is disabled, then the current balance will not be returned.
  """
  enabled: Boolean
}

"""Contains store credit information with balance and history."""
type CustomerStoreCredit {
  """
  Contains the customer's store credit balance history. If the history or store credit feature is disabled, then a null value will be returned.
  """
  balance_history(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """
    The page of results to return. This value is optional. The default is 1.
    """
    currentPage: Int = 1
  ): CustomerStoreCreditHistory
  """The current balance of store credit."""
  current_balance: Money
  """
  Indicates whether store credits are enabled. If the feature is disabled, then the balance will not be returned.
  """
  enabled: Boolean
}

"""Lists changes to the amount of store credit available to the customer."""
type CustomerStoreCreditHistory {
  """
  An array containing information about changes to the store credit available to the customer.
  """
  items: [CustomerStoreCreditHistoryItem]
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo
  """The number of items returned."""
  total_count: Int
}

"""Contains store credit history information."""
type CustomerStoreCreditHistoryItem {
  """The action that was made on the store credit."""
  action: String
  """
  The store credit available to the customer as a result of this action. 
  """
  actual_balance: Money
  """
  The amount added to or subtracted from the store credit as a result of this action.
  """
  balance_change: Money
  """The date and time when the store credit change was made."""
  date_time_changed: String
}

input AddDownloadableProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of downloadable products to add."""
  cart_items: [DownloadableProductCartItemInput]!
}

"""Defines a single downloadable product."""
input DownloadableProductCartItemInput {
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the downloadable product."""
  data: CartItemInput!
  """
  An array of objects containing the link_id of the downloadable product link.
  """
  downloadable_product_links: [DownloadableProductLinksInput]
}

"""Contains the link ID for the downloadable product."""
input DownloadableProductLinksInput {
  """The unique ID of the downloadable product link."""
  link_id: Int!
}

"""Contains details about the cart after adding downloadable products."""
type AddDownloadableProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""An implementation for downloadable product cart items."""
type DownloadableCartItem implements CartItemInterface {
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """
  An array containing information about the links for the downloadable product added to the cart.
  """
  links: [DownloadableProductLinks]
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """
  An array containing information about samples of the selected downloadable product.
  """
  samples: [DownloadableProductSamples]
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""Defines a product that the shopper downloads."""
type DownloadableProduct implements ProductInterface & RoutableInterface & CustomizableProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  An array containing information about the links for this downloadable product.
  """
  downloadable_product_links: [DownloadableProductLinks]
  """
  An array containing information about samples of this downloadable product.
  """
  downloadable_product_samples: [DownloadableProductSamples]
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """
  A value of 1 indicates that each link in the array must be purchased separately.
  """
  links_purchased_separately: Int
  """The heading above the list of downloadable products."""
  links_title: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

enum DownloadableFileTypeEnum {
  FILE @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  URL @deprecated(reason: "`sample_url` serves to get the downloadable sample")
}

"""Defines characteristics of a downloadable product."""
type DownloadableProductLinks {
  id: Int @deprecated(reason: "This information should not be exposed on frontend.")
  is_shareable: Boolean @deprecated(reason: "This information should not be exposed on frontend.")
  link_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  number_of_downloads: Int @deprecated(reason: "This information should not be exposed on frontend.")
  """The price of the downloadable product."""
  price: Float
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """The full URL to the downloadable sample."""
  sample_url: String
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the link."""
  title: String
  """The unique ID for a `DownloadableProductLinks` object."""
  uid: ID!
}

"""Defines characteristics of a downloadable product."""
type DownloadableProductSamples {
  id: Int @deprecated(reason: "This information should not be exposed on frontend.")
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """The full URL to the downloadable sample."""
  sample_url: String
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the sample."""
  title: String
}

"""Defines downloadable product options for `OrderItemInterface`."""
type DownloadableOrderItem implements OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """
  A list of downloadable links that are ordered from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """
  Indicates whether the order item is eligible to be in a return request.
  """
  eligible_for_return: Boolean
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the order item."""
  gift_wrapping: GiftWrapping
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """
  The ProductInterface object, which contains details about the base product
  """
  product: ProductInterface
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Defines downloadable product options for `InvoiceItemInterface`."""
type DownloadableInvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """
  A list of downloadable links that are invoiced from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Defines downloadable product options for `CreditMemoItemInterface`."""
type DownloadableCreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """
  A list of downloadable links that are refunded from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""Defines characteristics of the links for downloadable product."""
type DownloadableItemsLinks {
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the link."""
  title: String
  """The unique ID for a `DownloadableItemsLinks` object."""
  uid: ID!
}

"""A downloadable product wish list item."""
type DownloadableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """An array containing information about the selected links."""
  links_v2: [DownloadableProductLinks]
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
  """An array containing information about the selected samples."""
  samples: [DownloadableProductSamples]
}

"""Contains the output schema for a company."""
type Company {
  """The list of all resources defined within the company."""
  acl_resources: [CompanyAclResource]
  """An object containing information about the company administrator."""
  company_admin: Customer
  """Company credit balances and limits."""
  credit: CompanyCredit!
  """Details about the history of company credit operations."""
  credit_history(filter: CompanyCreditHistoryFilterInput, pageSize: Int = 20, currentPage: Int = 1): CompanyCreditHistory!
  """The email address of the company contact."""
  email: String
  """The unique ID of a `Company` object."""
  id: ID!
  """The address where the company is registered to conduct business."""
  legal_address: CompanyLegalAddress
  """The full legal name of the company."""
  legal_name: String
  """The name of the company."""
  name: String
  """The list of payment methods available to a company."""
  payment_methods: [String]
  """
  The resale number that is assigned to the company for tax reporting purposes.
  """
  reseller_id: String
  """A company role filtered by the unique ID of a `CompanyRole` object."""
  role(id: ID!): CompanyRole
  """An object that contains a list of company roles."""
  roles(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1"""
    currentPage: Int = 1
  ): CompanyRoles!
  """
  An object containing information about the company sales representative.
  """
  sales_representative: CompanySalesRepresentative
  """The company structure of teams and customers in depth-first order."""
  structure(
    """
    The ID of the node in the company structure that serves as the root for the query.
    """
    rootId: ID
    """The maximum depth that can be reached when listing structure nodes."""
    depth: Int = 10
  ): CompanyStructure
  """
  The company team data filtered by the unique ID for a `CompanyTeam` object.
  """
  team(id: ID!): CompanyTeam
  """A company user filtered by the unique ID of a `Customer` object."""
  user(id: ID!): Customer
  """
  An object that contains a list of company users based on activity status.
  """
  users(
    """The type of company users to return."""
    filter: CompanyUsersFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CompanyUsers
  """
  The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
  """
  vat_tax_id: String
}

"""
Contains details about the address where the company is registered to conduct business.
"""
type CompanyLegalAddress {
  """The city where the company is registered to conduct business."""
  city: String
  """The country code of the company's legal address."""
  country_code: CountryCodeEnum
  """The company's postal code."""
  postcode: String
  """An object containing region data for the company."""
  region: CustomerAddressRegion
  """An array of strings that define the company's street address."""
  street: [String]
  """The company's phone number."""
  telephone: String
}

"""Contains details about the company administrator."""
type CompanyAdmin {
  """The email address of the company administrator."""
  email: String
  """The company administrator's first name."""
  firstname: String
  """
  The company administrator's gender (Male - 1, Female - 2, Not Specified - 3).
  """
  gender: Int
  """The unique ID for a `CompanyAdmin` object."""
  id: ID!
  """The job title of the company administrator."""
  job_title: String
  """The company administrator's last name."""
  lastname: String
}

"""Contains details about a company sales representative."""
type CompanySalesRepresentative {
  """The email address of the company sales representative."""
  email: String
  """The company sales representative's first name."""
  firstname: String
  """The company sales representative's last name."""
  lastname: String
}

"""Contains details about company users."""
type CompanyUsers {
  """
  An array of `CompanyUser` objects that match the specified filter criteria.
  """
  items: [Customer]!
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """The number of objects returned."""
  total_count: Int!
}

"""Contains an array of roles."""
type CompanyRoles {
  """A list of company roles that match the specified filter criteria."""
  items: [CompanyRole]!
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """The total number of objects matching the specified filter."""
  total_count: Int!
}

"""Contails details about a single role."""
type CompanyRole {
  """The unique ID for a `CompanyRole` object."""
  id: ID!
  """The name assigned to the role."""
  name: String
  """A list of permission resources defined for a role."""
  permissions: [CompanyAclResource]
  """The total number of users assigned the specified role."""
  users_count: Int
}

"""Contains details about the access control list settings of a resource."""
type CompanyAclResource {
  """An array of sub-resources."""
  children: [CompanyAclResource]
  """The unique ID for a `CompanyAclResource` object."""
  id: ID!
  """The sort order of an ACL resource."""
  sort_order: Int
  """The label assigned to the ACL resource."""
  text: String
}

"""Contains the response of a role name validation query."""
type IsCompanyRoleNameAvailableOutput {
  """Indicates whether the specified company role name is available."""
  is_role_name_available: Boolean!
}

"""Contains the response of a company user email validation query."""
type IsCompanyUserEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a company user.
  """
  is_email_available: Boolean!
}

"""Contains the response of a company admin email validation query."""
type IsCompanyAdminEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a company administrator.
  """
  is_email_available: Boolean!
}

"""Contains the response of a company email validation query."""
type IsCompanyEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a company.
  """
  is_email_available: Boolean!
}

union CompanyStructureEntity = CompanyTeam | Customer

"""
Contains an array of the individual nodes that comprise the company structure.
"""
type CompanyStructure {
  """An array of elements in a company structure."""
  items: [CompanyStructureItem]
}

"""Describes a company team."""
type CompanyTeam {
  """An optional description of the team."""
  description: String
  """The unique ID for a `CompanyTeam` object."""
  id: ID!
  """The display name of the team."""
  name: String
  """ID of the company structure"""
  structure_id: ID!
}

"""Defines the filter for returning a list of company users."""
input CompanyUsersFilterInput {
  """The activity status to filter on."""
  status: CompanyUserStatusEnum
}

"""Defines the list of company user status values."""
enum CompanyUserStatusEnum {
  """Only active users."""
  ACTIVE
  """Only inactive users."""
  INACTIVE
}

"""Contains the response to the request to create a company team."""
type CreateCompanyTeamOutput {
  """The new company team instance."""
  team: CompanyTeam!
}

"""Contains the response to the request to update a company team."""
type UpdateCompanyTeamOutput {
  """The updated company team instance."""
  team: CompanyTeam!
}

"""Contains the status of the request to delete a company team."""
type DeleteCompanyTeamOutput {
  """Indicates whether the delete operation succeeded."""
  success: Boolean!
}

"""Defines the input schema for creating a company team."""
input CompanyTeamCreateInput {
  """An optional description of the team."""
  description: String
  """The display name of the team."""
  name: String!
  """
  The ID of a node within a company's structure. This ID will be the parent of the created team.
  """
  target_id: ID
}

"""Defines the input schema for updating a company team."""
input CompanyTeamUpdateInput {
  """An optional description of the team."""
  description: String
  """The unique ID of the `CompanyTeam` object to update."""
  id: ID!
  """The display name of the team."""
  name: String
}

"""Contains the response to the request to update the company structure."""
type UpdateCompanyStructureOutput {
  """The updated company instance."""
  company: Company!
}

"""Defines the input schema for updating the company structure."""
input CompanyStructureUpdateInput {
  """The ID of a company that will be the new parent."""
  parent_tree_id: ID!
  """The ID of the company team that is being moved to another parent."""
  tree_id: ID!
}

"""Contains the response to the request to create a company."""
type CreateCompanyOutput {
  """The new company instance."""
  company: Company!
}

"""Contains the response to the request to update the company."""
type UpdateCompanyOutput {
  """The updated company instance."""
  company: Company!
}

"""Contains the response to the request to create a company user."""
type CreateCompanyUserOutput {
  """The new company user instance."""
  user: Customer!
}

"""Contains the response to the request to update the company user."""
type UpdateCompanyUserOutput {
  """The updated company user instance."""
  user: Customer!
}

"""Contains the response to the request to delete the company user."""
type DeleteCompanyUserOutput {
  """Indicates whether the company user has been deactivated successfully."""
  success: Boolean!
}

"""Contains the response to the request to create a company role."""
type CreateCompanyRoleOutput {
  """The new company role instance."""
  role: CompanyRole!
}

"""Contains the response to the request to update the company role."""
type UpdateCompanyRoleOutput {
  """The updated company role instance."""
  role: CompanyRole!
}

"""Contains the response to the request to delete the company role."""
type DeleteCompanyRoleOutput {
  """SIndicates whether the company role has been deleted successfully."""
  success: Boolean!
}

"""Defines the input schema for creating a new company."""
input CompanyCreateInput {
  """Defines the company administrator."""
  company_admin: CompanyAdminInput!
  """The email address of the company contact."""
  company_email: String!
  """The name of the company to create."""
  company_name: String!
  """Defines legal address data of the company."""
  legal_address: CompanyLegalAddressCreateInput!
  """The full legal name of the company."""
  legal_name: String
  """
  The resale number that is assigned to the company for tax reporting purposes.
  """
  reseller_id: String
  """
  The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
  """
  vat_tax_id: String
}

"""Defines the input schema for creating a company administrator."""
input CompanyAdminInput {
  """The company administrator's custom attributes."""
  custom_attributes: [AttributeValueInput]
  """The email address of the company administrator."""
  email: String!
  """The company administrator's first name."""
  firstname: String!
  """
  The company administrator's gender (Male - 1, Female - 2, Not Specified - 3).
  """
  gender: Int
  """The job title of the company administrator."""
  job_title: String
  """The company administrator's last name."""
  lastname: String!
  """The phone number of the company administrator."""
  telephone: String
}

"""Defines the input schema for defining a company's legal address."""
input CompanyLegalAddressCreateInput {
  """The city where the company is registered to conduct business."""
  city: String!
  """The company's country ID. Use the `countries` query to get this value."""
  country_id: CountryCodeEnum!
  """The postal code of the company."""
  postcode: String!
  """
  An object containing the region name and/or region ID where the company is registered to conduct business.
  """
  region: CustomerAddressRegionInput!
  """
  An array of strings that define the street address where the company is registered to conduct business.
  """
  street: [String]!
  """The primary phone number of the company."""
  telephone: String!
}

"""Defines the input schema for updating a company."""
input CompanyUpdateInput {
  """The email address of the company contact."""
  company_email: String
  """The name of the company to update."""
  company_name: String
  """The legal address data of the company."""
  legal_address: CompanyLegalAddressUpdateInput
  """The full legal name of the company."""
  legal_name: String
  """
  The resale number that is assigned to the company for tax reporting purposes.
  """
  reseller_id: String
  """
  The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
  """
  vat_tax_id: String
}

"""Defines the input schema for updating a company's legal address."""
input CompanyLegalAddressUpdateInput {
  """The city where the company is registered to conduct business."""
  city: String
  """The unique ID for a `Country` object."""
  country_id: CountryCodeEnum
  """The postal code of the company."""
  postcode: String
  """
  An object containing the region name and/or region ID where the company is registered to conduct business.
  """
  region: CustomerAddressRegionInput
  """
  An array of strings that define the street address where the company is registered to conduct business.
  """
  street: [String]
  """The primary phone number of the company."""
  telephone: String
}

"""Defines the input schema for creating a company user."""
input CompanyUserCreateInput {
  """The company user's email address"""
  email: String!
  """The company user's first name."""
  firstname: String!
  """The company user's job title or function."""
  job_title: String!
  """The company user's last name."""
  lastname: String!
  """The unique ID for a `CompanyRole` object."""
  role_id: ID!
  """Indicates whether the company user is ACTIVE or INACTIVE."""
  status: CompanyUserStatusEnum!
  """
  The ID of a node within a company's structure. This ID will be the parent of the created company user.
  """
  target_id: ID
  """The company user's phone number."""
  telephone: String!
}

"""Defines the input schema for updating a company user."""
input CompanyUserUpdateInput {
  """The company user's email address."""
  email: String
  """The company user's first name."""
  firstname: String
  """The unique ID of a `Customer` object."""
  id: ID!
  """The company user's job title or function."""
  job_title: String
  """The company user's last name."""
  lastname: String
  """The unique ID for a `CompanyRole` object."""
  role_id: ID
  """Indicates whether the company user is ACTIVE or INACTIVE."""
  status: CompanyUserStatusEnum
  """The company user's phone number."""
  telephone: String
}

"""Defines the input schema for creating a company role."""
input CompanyRoleCreateInput {
  """The name of the role to create."""
  name: String!
  """A list of resources the role can access."""
  permissions: [String]!
}

"""Defines the input schema for updating a company role."""
input CompanyRoleUpdateInput {
  """The unique ID for a `CompanyRole` object."""
  id: ID!
  """The name of the role to update."""
  name: String
  """A list of resources the role can access."""
  permissions: [String]
}

"""
Defines the input for returning matching companies the customer is assigned to.
"""
input UserCompaniesInput {
  """Specifies which page of results to return. The default value is 1."""
  currentPage: Int
  """
  Specifies the maximum number of results to return at once. This attribute is optional.
  """
  pageSize: Int
  """Defines the sorting of the results."""
  sort: [CompaniesSortInput]
}

"""An object that contains a list of companies customer is assigned to."""
type UserCompaniesOutput {
  """An array of companies customer is assigned to."""
  items: [CompanyBasicInfo]!
  """Provides navigation for the query response."""
  page_info: SearchResultPageInfo!
}

"""
Specifies which field to sort on, and whether to return the results in ascending or descending order.
"""
input CompaniesSortInput {
  """The field for sorting the results."""
  field: CompaniesSortFieldEnum!
  """Indicates whether to return results in ascending or descending order."""
  order: SortEnum!
}

"""The fields available for sorting the customer companies."""
enum CompaniesSortFieldEnum {
  """The name of the company."""
  NAME
}

"""The minimal required information to identify and display the company."""
type CompanyBasicInfo {
  """The unique ID of a `Company` object."""
  id: ID!
  """The full legal name of the company."""
  legal_name: String
  """The name of the company."""
  name: String
}

"""Defines the input schema for accepting the company invitation."""
input CompanyInvitationInput {
  """The invitation code."""
  code: String!
  """The company role id."""
  role_id: ID
  """Company user attributes in the invitation."""
  user: CompanyInvitationUserInput!
}

"""Company user attributes in the invitation."""
input CompanyInvitationUserInput {
  """The company unique identifier."""
  company_id: ID!
  """The customer unique identifier."""
  customer_id: ID!
  """The job title of a company user."""
  job_title: String
  """Indicates whether the company user is ACTIVE or INACTIVE."""
  status: CompanyUserStatusEnum
  """The phone number of the company user."""
  telephone: String
}

"""The result of accepting the company invitation."""
type CompanyInvitationOutput {
  """Indicates whether the customer was added to the company successfully."""
  success: Boolean
}

"""Defines an individual node in the company structure."""
type CompanyStructureItem {
  """A union of `CompanyTeam` and `Customer` objects."""
  entity: CompanyStructureEntity
  """The unique ID for a `CompanyStructureItem` object."""
  id: ID!
  """The ID of the parent item in the company hierarchy."""
  parent_id: ID
}

"""Contains a single dynamic block."""
type DynamicBlock {
  """The renderable HTML code of the dynamic block."""
  content: ComplexTextValue!
  """The unique ID of a `DynamicBlock` object."""
  uid: ID!
}

"""Contains an array of dynamic blocks."""
type DynamicBlocks {
  """An array containing individual dynamic blocks."""
  items: [DynamicBlock]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo
  """The number of returned dynamic blocks."""
  total_count: Int!
}

"""
Defines the dynamic block filter. The filter can identify the block type, location and IDs to return.
"""
input DynamicBlocksFilterInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String
  """An array of dynamic block UIDs to filter on."""
  dynamic_block_uids: [ID]
  """An array indicating the locations the dynamic block can be placed."""
  locations: [DynamicBlockLocationEnum]
  """The unique ID of the product currently viewed"""
  product_uid: ID
  """A value indicating the type of dynamic block to filter on."""
  type: DynamicBlockTypeEnum!
}

"""Indicates the selected Dynamic Blocks Rotator inline widget."""
enum DynamicBlockTypeEnum {
  SPECIFIED
  CART_PRICE_RULE_RELATED
  CATALOG_PRICE_RULE_RELATED
}

"""
Indicates the locations the dynamic block can be placed. If this field is not specified, the query returns all locations.
"""
enum DynamicBlockLocationEnum {
  CONTENT
  HEADER
  FOOTER
  LEFT
  RIGHT
}

type Currency {
  """
  An array of three-letter currency codes accepted by the store, such as USD and EUR.
  """
  available_currency_codes: [String]
  """The base currency set for the store, such as USD."""
  base_currency_code: String
  """The symbol for the specified base currency, such as $."""
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  """The currency that is displayed by default, such as USD."""
  default_display_currency_code: String
  """The currency symbol that is displayed by default, such as $."""
  default_display_currency_symbol: String
  """An array of exchange rates for currencies defined in the store."""
  exchange_rates: [ExchangeRate]
}

"""Lists the exchange rate."""
type ExchangeRate {
  """Specifies the store’s default currency to exchange to."""
  currency_to: String
  """The exchange rate for the store’s default currency."""
  rate: Float
}

type Country {
  """An array of regions within a particular country."""
  available_regions: [Region]
  """The name of the country in English."""
  full_name_english: String
  """The name of the country in the current locale."""
  full_name_locale: String
  """The unique ID for a `Country` object."""
  id: String
  """The three-letter abbreviation of the country, such as USA."""
  three_letter_abbreviation: String
  """The two-letter abbreviation of the country, such as US."""
  two_letter_abbreviation: String
}

type Region {
  """The two-letter code for the region, such as TX for Texas."""
  code: String
  """The unique ID for a `Region` object."""
  id: Int
  """The name of the region, such as Texas."""
  name: String
}

"""Contains a list of downloadable products."""
type CustomerDownloadableProducts {
  """An array of purchased downloadable items."""
  items: [CustomerDownloadableProduct]
}

"""Contains details about a single downloadable product."""
type CustomerDownloadableProduct {
  """The date and time the purchase was made."""
  date: String
  """The fully qualified URL to the download file."""
  download_url: String
  """The unique ID assigned to the item."""
  order_increment_id: String
  """The remaining number of times the customer can download the product."""
  remaining_downloads: String
  """
  Indicates when the product becomes available for download. Options are `Pending` and `Invoiced`.
  """
  status: String
}

"""
Contains details about downloadable products added to a requisition list.
"""
type DownloadableRequisitionListItem implements RequisitionListItemInterface {
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """An array of links for downloadable products in the requisition list."""
  links: [DownloadableProductLinks]
  """Details about a requisition list item."""
  product: ProductInterface!
  """The quantity of the product added to the requisition list."""
  quantity: Float!
  """An array of links to downloadable product samples."""
  samples: [DownloadableProductSamples]
  """The unique ID of an item in a requisition list."""
  uid: ID!
}

"""Defines the bundle products to add to the cart."""
input AddBundleProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of bundle products to add."""
  cart_items: [BundleProductCartItemInput]!
}

"""Defines a single bundle product."""
input BundleProductCartItemInput {
  """
  A mandatory array of options for the bundle product, including each chosen option and specified quantity.
  """
  bundle_options: [BundleOptionInput]!
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the bundle product."""
  data: CartItemInput!
}

"""Defines the input for a bundle option."""
input BundleOptionInput {
  """The ID of the option."""
  id: Int!
  """The number of the selected item to add to the cart."""
  quantity: Float!
  """An array with the chosen value of the option."""
  value: [String]!
}

"""Contains details about the cart after adding bundle products."""
type AddBundleProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""An implementation for bundle product cart items."""
type BundleCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item."""
  available_gift_wrapping: [GiftWrapping]!
  """An array containing the bundle options the shopper selected."""
  bundle_options: [SelectedBundleOption]!
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the cart item."""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""Contains details about a selected bundle option."""
type SelectedBundleOption {
  id: Int! @deprecated(reason: "Use `uid` instead")
  """The display name of the selected bundle product option."""
  label: String!
  """The type of selected bundle product option."""
  type: String!
  """The unique ID for a `SelectedBundleOption` object"""
  uid: ID!
  """An array of selected bundle option values."""
  values: [SelectedBundleOptionValue]!
}

"""Contains details about a value for a selected bundle option."""
type SelectedBundleOptionValue {
  """Use `uid` instead"""
  id: Int!
  """The display name of the value for the selected bundle product option."""
  label: String!
  """The price of the value for the selected bundle product option."""
  price: Float!
  """The quantity of the value for the selected bundle product option."""
  quantity: Float!
  """The unique ID for a `SelectedBundleOptionValue` object"""
  uid: ID!
}

"""
Can be used to retrieve the main price details in case of bundle product
"""
type PriceDetails {
  """The percentage of discount applied to the main product price"""
  discount_percentage: Float
  """The final price after applying the discount to the main product"""
  main_final_price: Float
  """The regular price of the main product"""
  main_price: Float
}

"""Defines an individual item within a bundle product."""
type BundleItem {
  """An ID assigned to each type of item in a bundle product."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """An array of additional options for this bundle item."""
  options: [BundleItemOption]
  """
  A number indicating the sequence order of this item compared to the other bundle items.
  """
  position: Int
  """The range of prices for the product"""
  price_range: PriceRange!
  """Indicates whether the item must be included in the bundle."""
  required: Boolean
  """The SKU of the bundle product."""
  sku: String
  """The display name of the item."""
  title: String
  """
  The input type that the customer uses to select the item. Examples include radio button and checkbox.
  """
  type: String
  """The unique ID for a `BundleItem` object."""
  uid: ID
}

"""
Defines the characteristics that comprise a specific bundle item and its options.
"""
type BundleItemOption {
  """
  Indicates whether the customer can change the number of items for this option.
  """
  can_change_quantity: Boolean
  """The ID assigned to the bundled item option."""
  id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether this option is the default option."""
  is_default: Boolean
  """The text that identifies the bundled item option."""
  label: String
  """
  When a bundle item contains multiple options, the relative position of this option compared to the other options.
  """
  position: Int
  """The price of the selected option."""
  price: Float
  """One of FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """Contains details about this product option."""
  product: ProductInterface
  """Indicates the quantity of this specific bundle item."""
  qty: Float @deprecated(reason: "Use `quantity` instead.")
  """The quantity of this specific bundle item."""
  quantity: Float
  """The unique ID for a `BundleItemOption` object."""
  uid: ID!
}

"""
Defines basic features of a bundle product and contains multiple BundleItems.
"""
type BundleProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether the bundle product has a dynamic price."""
  dynamic_price: Boolean
  """Indicates whether the bundle product has a dynamic SKU."""
  dynamic_sku: Boolean
  """
  Indicates whether the bundle product has a dynamically calculated weight.
  """
  dynamic_weight: Boolean
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """An array containing information about individual bundle items."""
  items: [BundleItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The price details of the main product"""
  price_details: PriceDetails
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """One of PRICE_RANGE or AS_LOW_AS."""
  price_view: PriceViewEnum
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """Indicates whether to ship bundle items together or individually."""
  ship_bundle_items: ShipBundleItemsEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
Defines whether a bundle product's price is displayed as the lowest possible value or as a range.
"""
enum PriceViewEnum {
  PRICE_RANGE
  AS_LOW_AS
}

"""Defines whether bundle items must be shipped together."""
enum ShipBundleItemsEnum {
  TOGETHER
  SEPARATELY
}

"""Defines bundle product options for `OrderItemInterface`."""
type BundleOrderItem implements OrderItemInterface {
  """A list of bundle options that are assigned to the bundle product."""
  bundle_options: [ItemSelectedBundleOption]
  """The final discount information for the product."""
  discounts: [Discount]
  """
  Indicates whether the order item is eligible to be in a return request.
  """
  eligible_for_return: Boolean
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the order item."""
  gift_wrapping: GiftWrapping
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """
  The ProductInterface object, which contains details about the base product
  """
  product: ProductInterface
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Defines bundle product options for `InvoiceItemInterface`."""
type BundleInvoiceItem implements InvoiceItemInterface {
  """
  A list of bundle options that are assigned to an invoiced bundle product.
  """
  bundle_options: [ItemSelectedBundleOption]
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Defines bundle product options for `ShipmentItemInterface`."""
type BundleShipmentItem implements ShipmentItemInterface {
  """A list of bundle options that are assigned to a shipped product."""
  bundle_options: [ItemSelectedBundleOption]
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Defines bundle product options for `CreditMemoItemInterface`."""
type BundleCreditMemoItem implements CreditMemoItemInterface {
  """
  A list of bundle options that are assigned to a bundle product that is part of a credit memo.
  """
  bundle_options: [ItemSelectedBundleOption]
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""A list of options of the selected bundle product."""
type ItemSelectedBundleOption {
  """The unique ID for a `ItemSelectedBundleOption` object."""
  id: ID! @deprecated(reason: "Use `uid` instead.")
  """The label of the option."""
  label: String!
  """The unique ID for a `ItemSelectedBundleOption` object."""
  uid: ID!
  """A list of products that represent the values of the parent option."""
  values: [ItemSelectedBundleOptionValue]
}

"""A list of values for the selected bundle product."""
type ItemSelectedBundleOptionValue {
  """The unique ID for a `ItemSelectedBundleOptionValue` object."""
  id: ID! @deprecated(reason: "Use `uid` instead.")
  """The price of the child bundle product."""
  price: Money!
  """The name of the child bundle product."""
  product_name: String!
  """The SKU of the child bundle product."""
  product_sku: String!
  """The number of this bundle product that were ordered."""
  quantity: Float!
  """The unique ID for a `ItemSelectedBundleOptionValue` object."""
  uid: ID!
}

"""Defines bundle product options for `WishlistItemInterface`."""
type BundleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """An array containing information about the selected bundle items."""
  bundle_options: [SelectedBundleOption]
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

type ProductAttributeMetadata implements AttributeMetadataInterface {
  """An array of attribute labels defined for the current store."""
  attribute_labels: [StoreLabels]
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: String
  """The data type of the attribute."""
  data_type: ObjectDataTypeEnum
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum
  """Indicates whether the attribute is a system attribute."""
  is_system: Boolean
  """The label assigned to the attribute."""
  label: String
  """The relative position of the attribute."""
  sort_order: Int
  """Frontend UI properties of the attribute."""
  ui_input: UiInputTypeInterface
  """The unique ID of an attribute."""
  uid: ID
  """Places in the store front where the attribute is used."""
  used_in_components: [CustomAttributesListsEnum]
}

enum CustomAttributesListsEnum {
  PRODUCT_DETAILS_PAGE
  PRODUCTS_LISTING
  PRODUCTS_COMPARE
  PRODUCT_SORT
  PRODUCT_FILTER
  PRODUCT_SEARCH_RESULTS_FILTER
  ADVANCED_CATALOG_SEARCH
}

"""Defines the input required to run the `applyGiftCardToCart` mutation."""
input ApplyGiftCardToCartInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
  """The gift card code to be applied to the cart."""
  gift_card_code: String!
}

"""Defines the possible output for the `applyGiftCardToCart` mutation."""
type ApplyGiftCardToCartOutput {
  """Describes the contents of the specified shopping cart."""
  cart: Cart!
}

"""
Defines the input required to run the `removeGiftCardFromCart` mutation.
"""
input RemoveGiftCardFromCartInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
  """The gift card code to be removed to the cart."""
  gift_card_code: String!
}

"""Defines the possible output for the `removeGiftCardFromCart` mutation."""
type RemoveGiftCardFromCartOutput {
  """The contents of the specified shopping cart."""
  cart: Cart!
}

"""Contains an applied gift card with applied and remaining balance."""
type AppliedGiftCard {
  """The amount applied to the current cart."""
  applied_balance: Money
  """The gift card account code."""
  code: String
  """The remaining balance on the gift card."""
  current_balance: Money
  """The expiration date of the gift card."""
  expiration_date: String
}

"""Contains the gift card code."""
input GiftCardAccountInput {
  """The applied gift card code."""
  gift_card_code: String!
}

"""Contains details about the gift card account."""
type GiftCardAccount {
  """The balance remaining on the gift card."""
  balance: Money
  """The gift card account code."""
  code: String
  """The expiration date of the gift card."""
  expiration_date: String
}

"""
Contains details about the sales total amounts used to calculate the final price.
"""
type OrderTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the order."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the order."""
  shipping_handling: ShippingHandling
  """The subtotal of the order, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The order tax details."""
  taxes: [TaxItem]
  """The gift card balance applied to the order."""
  total_giftcard: Money
  """The shipping amount for the order."""
  total_shipping: Money!
  """The amount of tax applied to the order."""
  total_tax: Money!
}

"""Deprecated: Use the `Wishlist` type instead."""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use the `Wishlist.items` field instead.")
  """The number of items in the wish list."""
  items_count: Int @deprecated(reason: "Use the `Wishlist.items_count` field instead.")
  """
  When multiple wish lists are enabled, the name the customer assigns to the wishlist.
  """
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source.")
  """An encrypted code that links to the wish list."""
  sharing_code: String @deprecated(reason: "Use the `Wishlist.sharing_code` field instead.")
  """The time of the last modification to the wish list."""
  updated_at: String @deprecated(reason: "Use the `Wishlist.updated_at` field instead.")
}

"""Contains a customer wish list."""
type Wishlist {
  """The unique ID for a `Wishlist` object."""
  id: ID
  items: [WishlistItem] @deprecated(reason: "Use the `items_v2` field instead.")
  """The number of items in the wish list."""
  items_count: Int
  """An array of items in the customer's wish list."""
  items_v2(currentPage: Int = 1, pageSize: Int = 20): WishlistItems
  """The name of the wish list."""
  name: String
  """An encrypted code that Magento uses to link to the wish list."""
  sharing_code: String
  """The time of the last modification to the wish list."""
  updated_at: String
  """Indicates whether the wish list is public or private."""
  visibility: WishlistVisibilityEnum!
}

"""The interface for wish list items."""
interface WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains an array of items in a wish list."""
type WishlistItems {
  """A list of items in the wish list."""
  items: [WishlistItemInterface]!
  """Contains pagination metadata."""
  page_info: SearchResultPageInfo
}

"""Contains details about a wish list item."""
type WishlistItem {
  """The time when the customer added the item to the wish list."""
  added_at: String
  """The customer's comment about this item."""
  description: String
  """The unique ID for a `WishlistItem` object."""
  id: Int
  """Details about the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item"""
  qty: Float
}

"""Contains the resultant wish list and any error information."""
type AddWishlistItemsToCartOutput {
  """
  An array of errors encountered while adding products to the customer's cart.
  """
  add_wishlist_items_to_cart_user_errors: [WishlistCartUserInputError]!
  """
  Indicates whether the attempt to add items to the customer's cart was successful.
  """
  status: Boolean!
  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""
Contains details about errors encountered when a customer added wish list items to the cart.
"""
type WishlistCartUserInputError {
  """An error code that describes the error encountered."""
  code: WishlistCartUserInputErrorType!
  """A localized error message."""
  message: String!
  """The unique ID of the `Wishlist` object containing an error."""
  wishlistId: ID!
  """The unique ID of the wish list item containing an error."""
  wishlistItemId: ID!
}

"""A list of possible error types."""
enum WishlistCartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""Defines the items to add to a wish list."""
input WishlistItemInput {
  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]
  """For complex product types, the SKU of the parent product."""
  parent_sku: String
  """The amount or number of items to add."""
  quantity: Float!
  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]
  """
  The SKU of the product to add. For complex product types, specify the child product SKU.
  """
  sku: String!
}

"""Contains the customer's wish list and any errors encountered."""
type AddProductsToWishlistOutput {
  """An array of errors encountered while adding products to a wish list."""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""Contains the customer's wish list and any errors encountered."""
type RemoveProductsFromWishlistOutput {
  """
  An array of errors encountered while deleting products from a wish list.
  """
  user_errors: [WishListUserInputError]!
  """Contains the wish list with after items were successfully deleted."""
  wishlist: Wishlist!
}

"""Defines updates to items in a wish list."""
input WishlistItemUpdateInput {
  """Customer-entered comments about the item."""
  description: String
  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]
  """The new amount or number of this item."""
  quantity: Float
  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]
  """The unique ID for a `WishlistItemInterface` object."""
  wishlist_item_id: ID!
}

"""Contains the customer's wish list and any errors encountered."""
type UpdateProductsInWishlistOutput {
  """An array of errors encountered while updating products in a wish list."""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully updated."""
  wishlist: Wishlist!
}

"""An error encountered while performing operations with WishList."""
type WishListUserInputError {
  """A wish list-specific error code."""
  code: WishListUserInputErrorType!
  """A localized error message."""
  message: String!
}

"""A list of possible error types."""
enum WishListUserInputErrorType {
  PRODUCT_NOT_FOUND
  UNDEFINED
}

"""Defines properties of a gift card."""
type GiftCardProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface & RoutableInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  Indicates whether the customer can provide a message to accompany the gift card.
  """
  allow_message: Boolean
  """
  Indicates whether shoppers have the ability to set the value of the gift card.
  """
  allow_open_amount: Boolean
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of customizable gift card options."""
  gift_card_options: [CustomizableOptionInterface]!
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """
  An array that contains information about the values and ID of a gift card.
  """
  giftcard_amounts: [GiftCardAmounts]
  """An enumeration that specifies the type of gift card."""
  giftcard_type: GiftCardTypeEnum
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """
  Indicates whether the customer can redeem the value on the card for cash.
  """
  is_redeemable: Boolean
  """Indicates whether the product can be returned."""
  is_returnable: String
  """
  The number of days after purchase until the gift card expires. A null value means there is no limit.
  """
  lifetime: Int
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """The maximum number of characters the gift message can contain."""
  message_max_length: Int
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """The maximum acceptable value of an open amount gift card."""
  open_amount_max: Float
  """The minimum acceptable value of an open amount gift card."""
  open_amount_min: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
Contains the value of a gift card, the website that generated the card, and related information.
"""
type GiftCardAmounts {
  """An internal attribute ID."""
  attribute_id: Int
  """The unique ID for a `GiftCardAmounts` object."""
  uid: ID!
  """The value of the gift card."""
  value: Float
  """An ID that is assigned to each unique gift card amount."""
  value_id: Int @deprecated(reason: "Use `uid` instead")
  """The ID of the website that generated the gift card."""
  website_id: Int
  """The value of the gift card."""
  website_value: Float
}

"""Specifies the gift card type."""
enum GiftCardTypeEnum {
  VIRTUAL
  PHYSICAL
  COMBINED
}

type GiftCardOrderItem implements OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """
  Indicates whether the order item is eligible to be in a return request.
  """
  eligible_for_return: Boolean
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """Selected gift card properties for an order item."""
  gift_card: GiftCardItem
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the order item."""
  gift_wrapping: GiftWrapping
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """
  The ProductInterface object, which contains details about the base product
  """
  product: ProductInterface
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

type GiftCardInvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """Selected gift card properties for an invoice item."""
  gift_card: GiftCardItem
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

type GiftCardCreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """Selected gift card properties for a credit memo item."""
  gift_card: GiftCardItem
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

type GiftCardShipmentItem implements ShipmentItemInterface {
  """Selected gift card properties for a shipment item."""
  gift_card: GiftCardItem
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Contains details about a gift card."""
type GiftCardItem {
  """The message from the sender to the recipient."""
  message: String
  """The email address of the receiver of a virtual gift card."""
  recipient_email: String
  """The name of the receiver of a physical or virtual gift card."""
  recipient_name: String
  """The email address of the sender of a virtual gift card."""
  sender_email: String
  """The name of the sender of a physical or virtual gift card."""
  sender_name: String
}

"""Contains details about a gift card that has been added to a cart."""
type GiftCardCartItem implements CartItemInterface {
  """The amount and currency of the gift card."""
  amount: Money!
  """An array of customizations applied to the gift card."""
  customizable_options: [SelectedCustomizableOption]!
  """Contains discount for quote line item."""
  discount: [Discount]
  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  True if requested quantity is less than available stock, false otherwise.
  """
  is_available: Boolean!
  """Line item max qty in quote template"""
  max_qty: Float
  """The message from the sender to the recipient."""
  message: String
  """Line item min qty in quote template"""
  min_qty: Float
  """The buyer's quote line item note."""
  note_from_buyer: [ItemNote]
  """The seller's quote line item note."""
  note_from_seller: [ItemNote]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The email address of the person receiving the gift card."""
  recipient_email: String
  """The name of the person receiving the gift card."""
  recipient_name: String!
  """The email address of the sender."""
  sender_email: String
  """The name of the sender."""
  sender_name: String!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""A single gift card added to a wish list."""
type GiftCardWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """Details about a gift card."""
  gift_card_options: GiftCardOptions!
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""
Contains details about the sender, recipient, and amount of a gift card.
"""
type GiftCardOptions {
  """The amount and currency of the gift card."""
  amount: Money
  """The custom amount and currency of the gift card."""
  custom_giftcard_amount: Money
  """A message to the recipient."""
  message: String
  """The email address of the person receiving the gift card."""
  recipient_email: String
  """The name of the person receiving the gift card."""
  recipient_name: String
  """The email address of the person sending the gift card."""
  sender_email: String
  """The name of the person sending the gift card."""
  sender_name: String
}

"""Contains the text of a gift message, its sender, and recipient"""
type GiftMessage {
  """Sender name"""
  from: String!
  """Gift message text"""
  message: String!
  """Recipient name"""
  to: String!
}

"""Defines a gift message."""
input GiftMessageInput {
  """The name of the sender."""
  from: String!
  """The text of the gift message."""
  message: String!
  """The name of the recepient."""
  to: String!
}

type SalesItemInterface {
  """The entered gift message for the order item"""
  gift_message: GiftMessage
}

"""Contains details about each of the customer's orders."""
type CustomerOrder {
  """Coupons applied to the order."""
  applied_coupons: [AppliedCoupon]!
  """The billing address for the order."""
  billing_address: OrderAddress
  """The shipping carrier for the order delivery."""
  carrier: String
  """Comments about the order."""
  comments: [SalesCommentItem]
  created_at: String @deprecated(reason: "Use the `order_date` field instead.")
  """A list of credit memos."""
  credit_memos: [CreditMemo]
  """Order customer email."""
  email: String
  """The entered gift message for the order"""
  gift_message: GiftMessage
  """Indicates whether the customer requested a gift receipt for the order."""
  gift_receipt_included: Boolean!
  """The selected gift wrapping for the order."""
  gift_wrapping: GiftWrapping
  grand_total: Float @deprecated(reason: "Use the `totals.grand_total` field instead.")
  """The unique ID for a `CustomerOrder` object."""
  id: ID!
  increment_id: String @deprecated(reason: "Use the `id` field instead.")
  """A list of invoices for the order."""
  invoices: [Invoice]!
  """An array containing the items purchased in this order."""
  items: [OrderItemInterface]
  """A list of order items eligible to be in a return request."""
  items_eligible_for_return: [OrderItemInterface]
  """The order number."""
  number: String!
  """The date the order was placed."""
  order_date: String!
  order_number: String! @deprecated(reason: "Use the `number` field instead.")
  """Payment details for the order."""
  payment_methods: [OrderPaymentMethod]
  """Indicates whether the customer requested a printed card for the order."""
  printed_card_included: Boolean!
  """Return requests associated with this order."""
  returns(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): Returns
  """A list of shipments for the order."""
  shipments: [OrderShipment]
  """The shipping address for the order."""
  shipping_address: OrderAddress
  """The delivery method for the order."""
  shipping_method: String
  """The current state of the order."""
  state: String!
  """The current status of the order."""
  status: String!
  """The token that can be used to retrieve the order using order query."""
  token: String!
  """Details about the calculated totals for this order."""
  total: OrderTotal
}

"""Order item details."""
interface OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """
  Indicates whether the order item is eligible to be in a return request.
  """
  eligible_for_return: Boolean
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the order item."""
  gift_wrapping: GiftWrapping
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """
  The ProductInterface object, which contains details about the base product
  """
  product: ProductInterface
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Contains the results of a gift registry search."""
type GiftRegistrySearchResult {
  """The date of the event."""
  event_date: String
  """The title given to the event."""
  event_title: String!
  """The URL key of the gift registry."""
  gift_registry_uid: ID!
  """The location of the event."""
  location: String
  """The name of the gift registry owner."""
  name: String!
  """The type of event being held."""
  type: String
}

"""Defines a dynamic attribute."""
input GiftRegistryDynamicAttributeInput {
  """A unique key for an additional attribute of the event."""
  code: ID!
  """A string that describes a dynamic attribute."""
  value: String!
}

"""Defines the sender of an invitation to view a gift registry."""
input ShareGiftRegistrySenderInput {
  """A brief message from the sender."""
  message: String!
  """The sender of the gift registry invitation."""
  name: String!
}

"""Defines a gift registry invitee."""
input ShareGiftRegistryInviteeInput {
  """The email address of the gift registry invitee."""
  email: String!
  """The name of the gift registry invitee."""
  name: String!
}

"""Defines an item to add to the gift registry."""
input AddGiftRegistryItemInput {
  """An array of options the customer has entered."""
  entered_options: [EnteredOptionInput]
  """A brief note about the item."""
  note: String
  """For complex product types, the SKU of the parent product."""
  parent_sku: String
  """The quantity of the product to add."""
  quantity: Float!
  """
  An array of strings corresponding to options the customer has selected.
  """
  selected_options: [String]
  """The SKU of the product to add to the gift registry."""
  sku: String!
}

"""Defines a new gift registry."""
input CreateGiftRegistryInput {
  """Additional attributes specified as a code-value pair."""
  dynamic_attributes: [GiftRegistryDynamicAttributeInput]
  """The name of the event."""
  event_name: String!
  """The ID of the selected event type."""
  gift_registry_type_uid: ID!
  """A message describing the event."""
  message: String!
  """Indicates whether the registry is PRIVATE or PUBLIC."""
  privacy_settings: GiftRegistryPrivacySettings!
  """The list of people who receive notifications about the registry."""
  registrants: [AddGiftRegistryRegistrantInput]!
  """The shipping address for all gift registry items."""
  shipping_address: GiftRegistryShippingAddressInput
  """Indicates whether the registry is ACTIVE or INACTIVE."""
  status: GiftRegistryStatus!
}

"""Defines updates to an item in a gift registry."""
input UpdateGiftRegistryItemInput {
  """The unique ID of a `giftRegistryItem` object."""
  gift_registry_item_uid: ID!
  """The updated description of the item."""
  note: String
  """The updated quantity of the gift registry item."""
  quantity: Float!
}

"""Defines updates to a `GiftRegistry` object."""
input UpdateGiftRegistryInput {
  """
  Additional attributes specified as a code-value pair. Unspecified dynamic attributes are not changed.
  """
  dynamic_attributes: [GiftRegistryDynamicAttributeInput]
  """The updated name of the event."""
  event_name: String
  """The updated message describing the event."""
  message: String
  """Indicates whether the gift registry is PRIVATE or PUBLIC."""
  privacy_settings: GiftRegistryPrivacySettings
  """The updated shipping address for all gift registry items."""
  shipping_address: GiftRegistryShippingAddressInput
  """Indicates whether the gift registry is ACTIVE or INACTIVE."""
  status: GiftRegistryStatus
}

"""Defines a new registrant."""
input AddGiftRegistryRegistrantInput {
  """Additional attributes specified as a code-value pair."""
  dynamic_attributes: [GiftRegistryDynamicAttributeInput]
  """The email address of the registrant."""
  email: String!
  """The first name of the registrant."""
  firstname: String!
  """The last name of the registrant."""
  lastname: String!
}

"""
Defines a shipping address for a gift registry. Specify either `address_data` or the `address_id`. If both are provided, validation will fail.
"""
input GiftRegistryShippingAddressInput {
  """Defines the shipping address for this gift registry."""
  address_data: CustomerAddressInput
  """The ID assigned to this customer address."""
  address_id: ID
}

"""Defines updates to an existing registrant."""
input UpdateGiftRegistryRegistrantInput {
  """
  As a result of the update, only the values of provided attributes will be affected. If the attribute is missing in the request, its value will not be changed.
  """
  dynamic_attributes: [GiftRegistryDynamicAttributeInput]
  """The updated email address of the registrant."""
  email: String
  """The updated first name of the registrant."""
  firstname: String
  """The unique ID of a `giftRegistryRegistrant` object."""
  gift_registry_registrant_uid: ID!
  """The updated last name of the registrant."""
  lastname: String
}

"""Contains the customer's gift registry."""
interface GiftRegistryOutputInterface {
  """The gift registry."""
  gift_registry: GiftRegistry
}

"""Contains details about the gift registry."""
type GiftRegistryOutput implements GiftRegistryOutputInterface {
  """The gift registry."""
  gift_registry: GiftRegistry
}

"""
Contains the status and any errors that encountered with the customer's gift register item.
"""
interface GiftRegistryItemUserErrorInterface {
  """
  Indicates whether the attempt to move the cart items to the gift registry was successful.
  """
  status: Boolean!
  """
  An array of errors encountered while moving items from the cart to the gift registry.
  """
  user_errors: [GiftRegistryItemsUserError]!
}

"""Contains error information."""
type GiftRegistryItemUserErrors implements GiftRegistryItemUserErrorInterface {
  """
  Indicates whether the attempt to move the cart items to the gift registry was successful.
  """
  status: Boolean!
  """
  An array of errors encountered while moving items from the cart to the gift registry.
  """
  user_errors: [GiftRegistryItemsUserError]!
}

"""
Contains details about an error that occurred when processing a gift registry item.
"""
type GiftRegistryItemsUserError {
  """An error code that describes the error encountered."""
  code: GiftRegistryItemsUserErrorType!
  """The unique ID of the gift registry item containing an error."""
  gift_registry_item_uid: ID
  """The unique ID of the `GiftRegistry` object containing an error."""
  gift_registry_uid: ID
  """A localized error message."""
  message: String!
  """The unique ID of the product containing an error."""
  product_uid: ID
}

"""Defines the error type."""
enum GiftRegistryItemsUserErrorType {
  """Used for handling out of stock products."""
  OUT_OF_STOCK
  """Used for exceptions like EntityNotFound."""
  NOT_FOUND
  """Used for other exceptions, such as database connection failures."""
  UNDEFINED
}

"""Contains the customer's gift registry and any errors encountered."""
type MoveCartItemsToGiftRegistryOutput implements GiftRegistryOutputInterface & GiftRegistryItemUserErrorInterface {
  """The gift registry."""
  gift_registry: GiftRegistry
  """
  Indicates whether the attempt to move the cart items to the gift registry was successful.
  """
  status: Boolean!
  """
  An array of errors encountered while moving items from the cart to the gift registry.
  """
  user_errors: [GiftRegistryItemsUserError]!
}

"""Contains the results of a request to delete a gift registry."""
type RemoveGiftRegistryOutput {
  """Indicates whether the gift registry was successfully deleted."""
  success: Boolean!
}

"""
Contains the results of a request to remove an item from a gift registry.
"""
type RemoveGiftRegistryItemsOutput {
  """The gift registry after removing items."""
  gift_registry: GiftRegistry
}

"""Contains the results of a request to update gift registry items."""
type UpdateGiftRegistryItemsOutput {
  """The gift registry after updating updating items."""
  gift_registry: GiftRegistry
}

"""Contains the results of a request to share a gift registry."""
type ShareGiftRegistryOutput {
  """Indicates whether the gift registry was successfully shared."""
  is_shared: Boolean!
}

"""Contains the results of a request to create a gift registry."""
type CreateGiftRegistryOutput {
  """The newly-created gift registry."""
  gift_registry: GiftRegistry
}

"""Contains the results of a request to update a gift registry."""
type UpdateGiftRegistryOutput {
  """The updated gift registry."""
  gift_registry: GiftRegistry
}

"""Contains the results of a request to add registrants."""
type AddGiftRegistryRegistrantsOutput {
  """The gift registry after adding registrants."""
  gift_registry: GiftRegistry
}

"""Contains the results a request to update registrants."""
type UpdateGiftRegistryRegistrantsOutput {
  """The gift registry after updating registrants."""
  gift_registry: GiftRegistry
}

"""Contains the results of a request to delete a registrant."""
type RemoveGiftRegistryRegistrantsOutput {
  """The gift registry after deleting registrants."""
  gift_registry: GiftRegistry
}

"""Contains details about a gift registry."""
type GiftRegistry {
  """
  The date on which the gift registry was created. Only the registry owner can access this attribute.
  """
  created_at: String!
  """
  An array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair.
  """
  dynamic_attributes: [GiftRegistryDynamicAttribute]
  """The name of the event."""
  event_name: String!
  """An array of products added to the gift registry."""
  items: [GiftRegistryItemInterface]
  """The message text the customer entered to describe the event."""
  message: String!
  """The customer who created the gift registry."""
  owner_name: String!
  """
  An enum that states whether the gift registry is PRIVATE or PUBLIC. Only the registry owner can access this attribute.
  """
  privacy_settings: GiftRegistryPrivacySettings!
  """Contains details about each registrant for the event."""
  registrants: [GiftRegistryRegistrant]
  """
  Contains the customer's shipping address. Only the registry owner can access this attribute.
  """
  shipping_address: CustomerAddress
  """
  An enum that states whether the gift registry is ACTIVE or INACTIVE. Only the registry owner can access this attribute.
  """
  status: GiftRegistryStatus!
  """The type of gift registry."""
  type: GiftRegistryType
  """The unique ID assigned to the gift registry."""
  uid: ID!
}

"""Contains details about a gift registry type."""
type GiftRegistryType {
  """
  An array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair.
  """
  dynamic_attributes_metadata: [GiftRegistryDynamicAttributeMetadataInterface]
  """The label assigned to the gift registry type on the Admin."""
  label: String!
  """The unique ID assigned to the gift registry type."""
  uid: ID!
}

interface GiftRegistryDynamicAttributeMetadataInterface {
  """Indicates which group the dynamic attribute a member of."""
  attribute_group: String!
  """The internal ID of the dynamic attribute."""
  code: ID!
  """
  The selected input type for this dynamic attribute. The value can be one of several static or custom types.
  """
  input_type: String!
  """Indicates whether the dynamic attribute is required."""
  is_required: Boolean!
  """The display name of the dynamic attribute."""
  label: String!
  """The order in which to display the dynamic attribute."""
  sort_order: Int
}

type GiftRegistryDynamicAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface {
  """Indicates which group the dynamic attribute a member of."""
  attribute_group: String!
  """The internal ID of the dynamic attribute."""
  code: ID!
  """
  The selected input type for this dynamic attribute. The value can be one of several static or custom types.
  """
  input_type: String!
  """Indicates whether the dynamic attribute is required."""
  is_required: Boolean!
  """The display name of the dynamic attribute."""
  label: String!
  """The order in which to display the dynamic attribute."""
  sort_order: Int
}

"""Defines the status of the gift registry."""
enum GiftRegistryStatus {
  ACTIVE
  INACTIVE
}

"""Defines the privacy setting of the gift registry."""
enum GiftRegistryPrivacySettings {
  PRIVATE
  PUBLIC
}

"""Contains details about a registrant."""
type GiftRegistryRegistrant {
  """An array of dynamic attributes assigned to the registrant."""
  dynamic_attributes: [GiftRegistryRegistrantDynamicAttribute]
  """
  The email address of the registrant. Only the registry owner can access this attribute.
  """
  email: String!
  """The first name of the registrant."""
  firstname: String!
  """The last name of the registrant."""
  lastname: String!
  """The unique ID assigned to the registrant."""
  uid: ID!
}

interface GiftRegistryDynamicAttributeInterface {
  """The internal ID of the dynamic attribute."""
  code: ID!
  """The display name of the dynamic attribute."""
  label: String!
  """A corresponding value for the code."""
  value: String!
}

type GiftRegistryRegistrantDynamicAttribute implements GiftRegistryDynamicAttributeInterface {
  """The internal ID of the dynamic attribute."""
  code: ID!
  """The display name of the dynamic attribute."""
  label: String!
  """A corresponding value for the code."""
  value: String!
}

type GiftRegistryDynamicAttribute implements GiftRegistryDynamicAttributeInterface {
  """The internal ID of the dynamic attribute."""
  code: ID!
  """Indicates which group the dynamic attribute is a member of."""
  group: GiftRegistryDynamicAttributeGroup!
  """The display name of the dynamic attribute."""
  label: String!
  """A corresponding value for the code."""
  value: String!
}

"""Defines the group type of a gift registry dynamic attribute."""
enum GiftRegistryDynamicAttributeGroup {
  EVENT_INFORMATION
  PRIVACY_SETTINGS
  REGISTRANT
  GENERAL_INFORMATION
  DETAILED_INFORMATION
  SHIPPING_ADDRESS
}

interface GiftRegistryItemInterface {
  """The date the product was added to the gift registry."""
  created_at: String!
  """A brief message about the gift registry item."""
  note: String
  """Details about the gift registry item."""
  product: ProductInterface
  """The requested quantity of the product."""
  quantity: Float!
  """The fulfilled quantity of the product."""
  quantity_fulfilled: Float!
  """The unique ID of a gift registry item."""
  uid: ID!
}

type GiftRegistryItem implements GiftRegistryItemInterface {
  """The date the product was added to the gift registry."""
  created_at: String!
  """A brief message about the gift registry item."""
  note: String
  """Details about the gift registry item."""
  product: ProductInterface
  """The requested quantity of the product."""
  quantity: Float!
  """The fulfilled quantity of the product."""
  quantity_fulfilled: Float!
  """The unique ID of a gift registry item."""
  uid: ID!
}

"""
Contains details about the selected or available gift wrapping options.
"""
type GiftWrapping {
  """The name of the gift wrapping design."""
  design: String!
  """The unique ID for a `GiftWrapping` object."""
  id: ID! @deprecated(reason: "Use `uid` instead")
  """The preview image for a gift wrapping option."""
  image: GiftWrappingImage
  """The gift wrapping price."""
  price: Money!
  """The unique ID for a `GiftWrapping` object."""
  uid: ID!
}

"""Points to an image associated with a gift wrapping option."""
type GiftWrappingImage {
  """The gift wrapping preview image label."""
  label: String!
  """The gift wrapping preview image URL."""
  url: String!
}

"""Contains prices for gift wrapping options."""
type GiftOptionsPrices {
  """Price of the gift wrapping for all individual order items."""
  gift_wrapping_for_items: Money
  """Price of the gift wrapping for the whole order."""
  gift_wrapping_for_order: Money
  """Price for the printed card."""
  printed_card: Money
}

"""Defines the gift options applied to the cart."""
input SetGiftOptionsOnCartInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
  """Gift message details for the cart."""
  gift_message: GiftMessageInput
  """Whether customer requested gift receipt for the cart."""
  gift_receipt_included: Boolean!
  """The unique ID for a `GiftWrapping` object to be used for the cart."""
  gift_wrapping_id: ID
  """Whether customer requested printed card for the cart."""
  printed_card_included: Boolean!
}

"""Contains the cart after gift options have been applied."""
type SetGiftOptionsOnCartOutput {
  """The modified cart object."""
  cart: Cart!
}

"""Contains details about bundle products added to a requisition list."""
type BundleRequisitionListItem implements RequisitionListItemInterface {
  """An array of selected options for a bundle product."""
  bundle_options: [SelectedBundleOption]!
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The quantity of the product added to the requisition list."""
  quantity: Float!
  """The unique ID of an item in a requisition list."""
  uid: ID!
}

"""
Defines a grouped product, which consists of simple standalone products that are presented as a group.
"""
type GroupedProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface {
  accessory_announcement_date: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_brand: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_custom_engraving_text: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_detailed_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_description_pagebuilder_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_gemstone_addon: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  accessory_recyclable_material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of cross-sell products."""
  crosssell_products: [ProductInterface]
  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]! @deprecated(reason: "Use Adobe Commerce `custom_attributesV2` query instead")
  """Product custom attributes."""
  custom_attributesV2(filters: AttributeFilterInput): ProductCustomAttributes
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_material: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  fashion_style: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """Indicates whether the product can be returned."""
  is_returnable: String
  """An array containing grouped product items."""
  items: [GroupedProductItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of related products."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Indicates whether the product is staged for a future campaign."""
  staged: Boolean!
  """Stock status of the product"""
  stock_status: ProductStockStatus
  """The file name of a swatch image."""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """An array of up-sell products."""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains information about an individual grouped product item."""
type GroupedProductItem {
  """The relative position of this item compared to the other group items."""
  position: Int
  """Details about this product option."""
  product: ProductInterface
  """The quantity of this grouped product item."""
  qty: Float
}

"""A grouped product wish list item."""
type GroupedProductWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""
AreaInput defines the parameters which will be used for filter by specified location.
"""
input AreaInput {
  """The radius for the search in KM."""
  radius: Int!
  """
  The country code where search must be performed. Required parameter together with region, city or postcode.
  """
  search_term: String!
}

"""
PickupLocationFilterInput defines the list of attributes and filters for the search.
"""
input PickupLocationFilterInput {
  """Filter by city."""
  city: FilterTypeInput
  """Filter by country."""
  country_id: FilterTypeInput
  """Filter by pickup location name."""
  name: FilterTypeInput
  """Filter by pickup location code."""
  pickup_location_code: FilterTypeInput
  """Filter by postcode."""
  postcode: FilterTypeInput
  """Filter by region."""
  region: FilterTypeInput
  """Filter by region id."""
  region_id: FilterTypeInput
  """Filter by street."""
  street: FilterTypeInput
}

"""
PickupLocationSortInput specifies attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input PickupLocationSortInput {
  """City where pickup location is placed."""
  city: SortEnum
  """Name of the contact person."""
  contact_name: SortEnum
  """Id of the country in two letters."""
  country_id: SortEnum
  """Description of the pickup location."""
  description: SortEnum
  """
  Distance to the address, requested by distance filter. Applicable only with distance filter. If distance sort order is present, all other sort orders will be ignored.
  """
  distance: SortEnum
  """Contact email of the pickup location."""
  email: SortEnum
  """Contact fax of the pickup location."""
  fax: SortEnum
  """Geographic latitude where pickup location is placed."""
  latitude: SortEnum
  """Geographic longitude where pickup location is placed."""
  longitude: SortEnum
  """
  The pickup location name. Customer use this to identify the pickup location.
  """
  name: SortEnum
  """Contact phone number of the pickup location."""
  phone: SortEnum
  """A code assigned to pickup location to identify the source."""
  pickup_location_code: SortEnum
  """Postcode where pickup location is placed."""
  postcode: SortEnum
  """Name of the region."""
  region: SortEnum
  """Id of the region."""
  region_id: SortEnum
  """Street where pickup location is placed."""
  street: SortEnum
}

"""Top level object returned in a pickup locations search."""
type PickupLocations {
  """An array of pickup locations that match the specific search request."""
  items: [PickupLocation]
  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo
  """The number of products returned."""
  total_count: Int
}

"""Defines Pickup Location information."""
type PickupLocation {
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String
  region: String
  region_id: Int
  street: String
}

"""Product Information used for Pickup Locations search."""
input ProductInfoInput {
  """Product SKU."""
  sku: String!
}

"""Identifies which customer requires remote shopping assistance."""
input GenerateCustomerTokenAsAdminInput {
  """
  The email address of the customer requesting remote shopping assistance.
  """
  customer_email: String!
}

"""Contains the generated customer token."""
type GenerateCustomerTokenAsAdminOutput {
  """The generated customer token."""
  customer_token: String!
}

"""Apply coupons to the cart."""
input ApplyCouponsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of valid coupon codes."""
  coupon_codes: [String]!
  """
  `replace` to replace the existing coupon(s) or `append` to add the coupon to the coupon(s) list.
  """
  type: ApplyCouponsStrategy
}

"""Remove coupons from the cart."""
input RemoveCouponsFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """
  An array of coupon codes to be removed from the quote. If coupon_codes is empty all coupons will be removed from the quote.
  """
  coupon_codes: [String]!
}

"""The strategy to apply coupons to the cart."""
enum ApplyCouponsStrategy {
  """Append new coupons keeping the coupons that have been applied before."""
  APPEND
  """
  Remove all the coupons from the cart and apply only new provided coupons.
  """
  REPLACE
}

"""Contains the cart and any errors after adding products."""
type ReorderItemsOutput {
  """Detailed information about the customer's cart."""
  cart: Cart!
  """An array of reordering errors."""
  userInputErrors: [CheckoutUserInputError]!
}

"""An error encountered while adding an item to the cart."""
type CheckoutUserInputError {
  """An error code that is specific to Checkout."""
  code: CheckoutUserInputErrorCodes!
  """A localized error message."""
  message: String!
  """
  The path to the input field that caused an error. See the GraphQL specification about path errors for details: http://spec.graphql.org/draft/#sec-Errors
  """
  path: [String]!
}

"""Identifies the filter to use for filtering orders."""
input CustomerOrdersFilterInput {
  """Filters by order number."""
  number: FilterStringTypeInput
}

"""
CustomerOrderSortInput specifies the field to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input CustomerOrderSortInput {
  """
  This enumeration indicates whether to return results in ascending or descending order
  """
  sort_direction: SortEnum!
  """Specifies the field to use for sorting"""
  sort_field: CustomerOrderSortableField!
}

"""Specifies the field to use for sorting"""
enum CustomerOrderSortableField {
  """Sorts customer orders by number"""
  NUMBER
  """Sorts customer orders by created_at field"""
  CREATED_AT
}

"""
The collection of orders that match the conditions defined in the filter.
"""
type CustomerOrders {
  """An array of customer orders."""
  items: [CustomerOrder]!
  """Contains pagination metadata."""
  page_info: SearchResultPageInfo
  """The total count of customer orders."""
  total_count: Int
}

"""
Contains detailed information about an order's billing and shipping addresses.
"""
type OrderAddress {
  """The city or town."""
  city: String!
  """The customer's company."""
  company: String
  """The customer's country."""
  country_code: CountryCodeEnum
  """The fax number."""
  fax: String
  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String!
  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String!
  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """The state or province name."""
  region: String
  """The unique ID for a `Region` object of a pre-defined region."""
  region_id: ID
  """An array of strings that define the street number and name."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number."""
  telephone: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

type OrderItem implements OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """
  Indicates whether the order item is eligible to be in a return request.
  """
  eligible_for_return: Boolean
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The selected gift wrapping for the order item."""
  gift_wrapping: GiftWrapping
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """
  The ProductInterface object, which contains details about the base product
  """
  product: ProductInterface
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Represents order item options like selected or entered."""
type OrderItemOption {
  """The name of the option."""
  label: String!
  """The value of the option."""
  value: String!
}

"""Contains tax item details."""
type TaxItem {
  """The amount of tax applied to the item."""
  amount: Money!
  """The rate used to calculate the tax."""
  rate: Float!
  """A title that describes the tax."""
  title: String!
}

"""Contains invoice details."""
type Invoice {
  """Comments on the invoice."""
  comments: [SalesCommentItem]
  """The unique ID for a `Invoice` object."""
  id: ID!
  """Invoiced product details."""
  items: [InvoiceItemInterface]
  """Sequential invoice number."""
  number: String!
  """Invoice total amount details."""
  total: InvoiceTotal
}

"""Contains detailes about invoiced items."""
interface InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

type InvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Contains price details from an invoice."""
type InvoiceTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the invoice."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the invoice."""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The invoice tax details."""
  taxes: [TaxItem]
  """The shipping amount for the invoice."""
  total_shipping: Money!
  """The amount of tax applied to the invoice."""
  total_tax: Money!
}

"""Contains details about shipping and handling costs."""
type ShippingHandling {
  """The shipping amount, excluding tax."""
  amount_excluding_tax: Money
  """The shipping amount, including tax."""
  amount_including_tax: Money
  """The applied discounts to the shipping."""
  discounts: [ShippingDiscount]
  """Details about taxes applied for shipping."""
  taxes: [TaxItem]
  """The total amount for shipping."""
  total_amount: Money!
}

"""
Defines an individual shipping discount. This discount can be applied to shipping.
"""
type ShippingDiscount {
  """The amount of the discount."""
  amount: Money!
}

"""Contains order shipment details."""
type OrderShipment {
  """Comments added to the shipment."""
  comments: [SalesCommentItem]
  """The unique ID for a `OrderShipment` object."""
  id: ID!
  """An array of items included in the shipment."""
  items: [ShipmentItemInterface]
  """The sequential credit shipment number."""
  number: String!
  """An array of shipment tracking details."""
  tracking: [ShipmentTracking]
}

"""Contains details about a comment."""
type SalesCommentItem {
  """The text of the message."""
  message: String!
  """The timestamp of the comment."""
  timestamp: String!
}

"""Order shipment item details."""
interface ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

type ShipmentItem implements ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Contains order shipment tracking details."""
type ShipmentTracking {
  """The shipping carrier for the order delivery."""
  carrier: String!
  """The tracking number of the order shipment."""
  number: String
  """The shipment tracking title."""
  title: String!
}

"""Contains details about the payment method used to pay for the order."""
type OrderPaymentMethod {
  """Additional data per payment method type."""
  additional_data: [KeyValue]
  """The label that describes the payment method."""
  name: String!
  """The payment method code that indicates how the order was paid for."""
  type: String!
}

"""Contains credit memo details."""
type CreditMemo {
  """Comments on the credit memo."""
  comments: [SalesCommentItem]
  """The unique ID for a `CreditMemo` object."""
  id: ID!
  """An array containing details about refunded items."""
  items: [CreditMemoItemInterface]
  """The sequential credit memo number."""
  number: String!
  """Details about the total refunded amount."""
  total: CreditMemoTotal
}

"""Credit memo item details."""
interface CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

type CreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""Contains credit memo price details."""
type CreditMemoTotal {
  """An adjustment manually applied to the order."""
  adjustment: Money!
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the credit memo."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the credit memo."""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The credit memo tax details."""
  taxes: [TaxItem]
  """The shipping amount for the credit memo."""
  total_shipping: Money!
  """The amount of tax applied to the credit memo."""
  total_tax: Money!
}

"""Contains a key-value pair."""
type KeyValue {
  """The name part of the key/value pair."""
  name: String
  """The value part of the key/value pair."""
  value: String
}

enum CheckoutUserInputErrorCodes {
  REORDER_NOT_AVAILABLE
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""This enumeration defines the scope type for customer orders."""
enum ScopeTypeEnum {
  GLOBAL
  WEBSITE
  STORE
}

"""Input to retrieve an order based on token."""
input OrderTokenInput {
  """Order token."""
  token: String!
}

"""Input to retrieve an order based on details."""
input OrderInformationInput {
  """Order billing address email."""
  email: String!
  """Order number."""
  number: String!
  """Order billing address postcode."""
  postcode: String!
}

"""Identifies a quote to be duplicated"""
input DuplicateNegotiableQuoteInput {
  """ID for the newly duplicated quote."""
  duplicated_quote_uid: ID!
  """ID of the quote to be duplicated."""
  quote_uid: ID!
}

"""Contains the newly created negotiable quote."""
type DuplicateNegotiableQuoteOutput {
  """Negotiable Quote resulting from duplication operation."""
  quote: NegotiableQuote
}

"""Contains details about a negotiable quote template."""
type NegotiableQuoteTemplate {
  """The first and last name of the buyer."""
  buyer: NegotiableQuoteUser!
  """A list of comments made by the buyer and seller."""
  comments: [NegotiableQuoteComment]
  """The expiration period of the negotiable quote template."""
  expiration_date: String!
  """A list of status and price changes for the negotiable quote template."""
  history: [NegotiableQuoteHistoryEntry]
  """Indicates whether the minimum and maximum quantity settings are used."""
  is_min_max_qty_used: Boolean!
  """
  Indicates whether the negotiable quote template contains only virtual products.
  """
  is_virtual: Boolean!
  """The list of items in the negotiable quote template."""
  items: [CartItemInterface]
  """Commitment for maximum orders"""
  max_order_commitment: Int!
  """Commitment for minimum orders"""
  min_order_commitment: Int!
  """The title assigned to the negotiable quote template."""
  name: String!
  """A list of notifications for the negotiable quote template."""
  notifications: [QuoteTemplateNotificationMessage]
  """
  A set of subtotals and totals applied to the negotiable quote template.
  """
  prices: CartPrices
  """A list of shipping addresses applied to the negotiable quote template."""
  shipping_addresses: [NegotiableQuoteShippingAddress]!
  """The status of the negotiable quote template."""
  status: String!
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
  """The total number of items in the negotiable quote template."""
  total_quantity: Float!
}

"""Contains data for a negotiable quote template in a grid."""
type NegotiableQuoteTemplateGridItem {
  """The date and time the negotiable quote template was activated."""
  activated_at: String!
  """Company name the quote template is assigned to"""
  company_name: String!
  """The expiration period of the negotiable quote template."""
  expiration_date: String!
  """Indicates whether the minimum and maximum quantity settings are used."""
  is_min_max_qty_used: Boolean!
  """The date and time the negotiable quote template was last shared."""
  last_shared_at: String!
  """Commitment for maximum orders"""
  max_order_commitment: Int!
  """The minimum negotiated grand total of the negotiable quote template."""
  min_negotiated_grand_total: Float!
  """Commitment for minimum orders"""
  min_order_commitment: Int!
  """The title assigned to the negotiable quote template."""
  name: String!
  """The number of orders placed for the negotiable quote template."""
  orders_placed: Int!
  """The first and last name of the sales representative."""
  sales_rep_name: String!
  """State of the negotiable quote template."""
  state: String!
  """The status of the negotiable quote template."""
  status: String!
  """The first and last name of the buyer."""
  submitted_by: String!
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""
Contains a list of negotiable templates that match the specified filter.
"""
type NegotiableQuoteTemplatesOutput {
  """A list of negotiable quote templates"""
  items: [NegotiableQuoteTemplateGridItem]!
  """Contains pagination metadata"""
  page_info: SearchResultPageInfo!
  """Contains the default sort field and all available sort fields."""
  sort_fields: SortFields
  """The number of negotiable quote templates returned"""
  total_count: Int!
}

"""Contains the updated negotiable quote template."""
type UpdateNegotiableQuoteTemplateItemsQuantityOutput {
  """The updated negotiable quote template."""
  quote_template: NegotiableQuoteTemplate
}

"""Contains the generated negotiable quote id."""
type GenerateNegotiableQuoteFromTemplateOutput {
  """The unique ID of a generated `NegotiableQuote` object."""
  negotiable_quote_uid: ID!
}

"""
Contains details about a failed delete operation on a negotiable quote template.
"""
type DeleteNegotiableQuoteTemplateOutput {
  """A message that describes the error."""
  error_message: String
  """Flag to mark whether the delete operation was successful."""
  status: Boolean!
}

"""Contains a notification message for a negotiable quote template."""
type QuoteTemplateNotificationMessage {
  """The notification message."""
  message: String!
  """The type of notification message."""
  type: String!
}

"""Defines a filter to limit the negotiable quotes to return."""
input NegotiableQuoteTemplateFilterInput {
  """Filter by state of one or more negotiable quote templates."""
  state: FilterEqualTypeInput
  """Filter by status of one or more negotiable quote templates."""
  status: FilterEqualTypeInput
}

"""Defines the field to use to sort a list of negotiable quotes."""
input NegotiableQuoteTemplateSortInput {
  """Whether to return results in ascending or descending order."""
  sort_direction: SortEnum!
  """The specified sort field."""
  sort_field: NegotiableQuoteTemplateSortableField!
}

"""Defines properties of a negotiable quote template request."""
input RequestNegotiableQuoteTemplateInput {
  """
  The cart ID of the quote to create the new negotiable quote template from.
  """
  cart_id: ID!
}

"""Specifies the items to update."""
input UpdateNegotiableQuoteTemplateQuantitiesInput {
  """An array of items to update."""
  items: [NegotiableQuoteTemplateItemQuantityInput]!
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the updated quantity of an item."""
input NegotiableQuoteTemplateItemQuantityInput {
  """The unique ID of a `CartItemInterface` object."""
  item_id: ID!
  """
  The new max quantity of the negotiable quote template item. Only used if is_min_max_qty_used is true on the template.
  """
  max_qty: Float
  """
  The new min quantity of the negotiable quote template item. Only used if is_min_max_qty_used is true on the template.
  """
  min_qty: Float
  """The new quantity of the negotiable quote item."""
  quantity: Float!
}

"""
Defines the shipping address to assign to the negotiable quote template.
"""
input SetNegotiableQuoteTemplateShippingAddressInput {
  """A shipping adadress to apply to the negotiable quote template."""
  shipping_address: NegotiableQuoteTemplateShippingAddressInput!
  """The unique ID of a `NegotiableQuote` object."""
  template_id: ID!
}

"""Defines shipping addresses for the negotiable quote template."""
input NegotiableQuoteTemplateShippingAddressInput {
  """A shipping address."""
  address: NegotiableQuoteAddressInput
  """
  An ID from the company user's address book that uniquely identifies the address to be used for shipping.
  """
  customer_address_uid: ID
  """Text provided by the company user."""
  customer_notes: String
}

"""Specifies the quote template properties to update."""
input SubmitNegotiableQuoteTemplateForReviewInput {
  """A comment for the seller to review."""
  comment: String
  """Commitment for maximum orders"""
  max_order_commitment: Int
  """Commitment for minimum orders"""
  min_order_commitment: Int
  """The title assigned to the negotiable quote template."""
  name: String
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the quote template id to accept quote template."""
input AcceptNegotiableQuoteTemplateInput {
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the quote template id to open quote template."""
input OpenNegotiableQuoteTemplateInput {
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the template id, from which to generate quote from."""
input GenerateNegotiableQuoteFromTemplateInput {
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Defines the items to remove from the specified negotiable quote."""
input RemoveNegotiableQuoteTemplateItemsInput {
  """
  An array of IDs indicating which items to remove from the negotiable quote.
  """
  item_uids: [ID]!
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the quote template id of the quote template to cancel"""
input CancelNegotiableQuoteTemplateInput {
  """A comment to provide reason of cancellation."""
  cancellation_comment: String
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Specifies the quote template id of the quote template to delete"""
input DeleteNegotiableQuoteTemplateInput {
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  template_id: ID!
}

"""Sets quote item note."""
input QuoteTemplateLineItemNoteInput {
  """The unique ID of a `CartLineItem` object."""
  item_id: ID!
  """The note text to be added."""
  note: String
  """The unique ID of a `NegotiableQuoteTemplate` object."""
  templateId: ID!
}

enum NegotiableQuoteTemplateSortableField {
  """Sorts negotiable quote templates by template id."""
  TEMPLATE_ID
  """Sorts negotiable quote templates by the date they were last shared."""
  LAST_SHARED_AT
}

"""Contains details about prior company credit operations."""
type CompanyCreditHistory {
  """An array of company credit operations."""
  items: [CompanyCreditOperation]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
  """
  The number of the company credit operations matching the specified filter.
  """
  total_count: Int
}

"""Contains details about a single company credit operation."""
type CompanyCreditOperation {
  """The amount of the company credit operation."""
  amount: Money
  """The credit balance as a result of the operation."""
  balance: CompanyCredit!
  """
  The purchase order number associated with the company credit operation.
  """
  custom_reference_number: String
  """The date the operation occurred."""
  date: String!
  """The type of the company credit operation."""
  type: CompanyCreditOperationType!
  """The company user that submitted the company credit operation."""
  updated_by: CompanyCreditOperationUser!
}

"""
Defines the administrator or company user that submitted a company credit operation.
"""
type CompanyCreditOperationUser {
  """The name of the company user submitting the company credit operation."""
  name: String!
  """The type of the company user submitting the company credit operation."""
  type: CompanyCreditOperationUserType!
}

"""Contains company credit balances and limits."""
type CompanyCredit {
  """
  The sum of the credit limit and the outstanding balance. If the company has exceeded the credit limit, the amount is as a negative value.
  """
  available_credit: Money!
  """The amount of credit extended to the company."""
  credit_limit: Money!
  """
  The amount reimbursed, less the total due from all orders placed using the Payment on Account payment method. The amount can be a positive or negative value.
  """
  outstanding_balance: Money!
}

enum CompanyCreditOperationType {
  ALLOCATION
  UPDATE
  PURCHASE
  REIMBURSEMENT
  REFUND
  REVERT
}

enum CompanyCreditOperationUserType {
  CUSTOMER
  ADMIN
}

"""Defines a filter for narrowing the results of a credit history search."""
input CompanyCreditHistoryFilterInput {
  """
  The purchase order number associated with the company credit operation.
  """
  custom_reference_number: String
  """The type of the company credit operation."""
  operation_type: CompanyCreditOperationType
  """The name of the person submitting the company credit operation."""
  updated_by: String
}

"""Contains the result of the `subscribeEmailToNewsletter` operation."""
type SubscribeEmailToNewsletterOutput {
  """The status of the subscription request."""
  status: SubscriptionStatusesEnum
}

"""Indicates the status of the request."""
enum SubscriptionStatusesEnum {
  NOT_ACTIVE
  SUBSCRIBED
  UNSUBSCRIBED
  UNCONFIRMED
}

type CancellationReason {
  description: String!
}

"""Defines the order to cancel."""
input CancelOrderInput {
  """Order ID."""
  order_id: ID!
  """Cancellation reason."""
  reason: String!
}

"""Contains the updated customer order and error message if any."""
type CancelOrderOutput {
  """Error encountered while cancelling the order."""
  error: String
  """Updated customer order."""
  order: CustomerOrder
}

type UiAttributeTypePageBuilder implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

"""Gets the payment SDK URLs and values"""
type GetPaymentSDKOutput {
  """The payment SDK parameters"""
  sdkParams: [PaymentSDKParamsItem]
}

type PaymentSDKParamsItem {
  """The payment method code used in the order"""
  code: String
  """The payment SDK parameters"""
  params: [SDKParams]
}

"""Contains the payment order details"""
type PaymentOrderOutput {
  """PayPal order ID"""
  id: String
  """The order ID generated by Payment Services"""
  mp_order_id: String
  """Details about the card used on the order"""
  payment_source_details: PaymentSourceDetails
  """The status of the payment order"""
  status: String
}

type PaymentSourceDetails {
  """Details about the card used on the order"""
  card: Card
}

type Card {
  """Card bin details"""
  bin_details: CardBin
  """Expiration month of the card"""
  card_expiry_month: String
  """Expiration year of the card"""
  card_expiry_year: String
  """Last four digits of the card"""
  last_digits: String
  """Name on the card"""
  name: String
}

type CardBin {
  """Card bin number"""
  bin: String
}

"""
Contains payment order details that are used while processing the payment order
"""
input CreatePaymentOrderInput {
  """The customer cart ID"""
  cartId: String!
  """Defines the origin location for that payment request"""
  location: PaymentLocation!
  """The code for the payment method used in the order"""
  methodCode: String!
  """The identifiable payment source for the payment method"""
  paymentSource: String!
  """Indicates whether the payment information should be vaulted"""
  vaultIntent: Boolean
}

"""Synchronizes the payment order details"""
input SyncPaymentOrderInput {
  """The customer cart ID"""
  cartId: String!
  """PayPal order ID"""
  id: String!
}

"""
Contains payment order details that are used while processing the payment order
"""
type CreatePaymentOrderOutput {
  """The amount of the payment order"""
  amount: Float
  """The currency of the payment order"""
  currency_code: String
  """PayPal order ID"""
  id: String
  """The order ID generated by Payment Services"""
  mp_order_id: String
  """The status of the payment order"""
  status: String
}

"""Defines the origin location for that payment request"""
enum PaymentLocation {
  PRODUCT_DETAIL
  MINICART
  CART
  CHECKOUT
  ADMIN
}

"""Retrieves the payment configuration for a given location"""
type PaymentConfigOutput {
  """ApplePay payment method configuration"""
  apple_pay: ApplePayConfig
  """GooglePay payment method configuration"""
  google_pay: GooglePayConfig
  """Hosted fields payment method configuration"""
  hosted_fields: HostedFieldsConfig
  """Smart Buttons payment method configuration"""
  smart_buttons: SmartButtonsConfig
}

"""
Contains payment fields that are common to all types of payment methods.
"""
interface PaymentConfigItem {
  """The payment method code as defined in the payment gateway"""
  code: String
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """The name displayed for the payment method"""
  title: String
}

type PaymentCommonConfig implements PaymentConfigItem {
  """The payment method code as defined in the payment gateway"""
  code: String
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """The name displayed for the payment method"""
  title: String
}

type HostedFieldsConfig implements PaymentConfigItem {
  """Vault payment method code"""
  cc_vault_code: String
  """The payment method code as defined in the payment gateway"""
  code: String
  """Card vault enabled"""
  is_vault_enabled: Boolean
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The payment source for the payment method"""
  payment_source: String
  """Card and bin details required"""
  requires_card_details: Boolean
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """Whether 3DS is activated; true if 3DS mode is not OFF."""
  three_ds: Boolean @deprecated(reason: "Use 'three_ds_mode' instead.")
  """3DS mode"""
  three_ds_mode: ThreeDSMode
  """The name displayed for the payment method"""
  title: String
}

"""3D Secure mode."""
enum ThreeDSMode {
  OFF
  SCA_WHEN_REQUIRED
  SCA_ALWAYS
}

type SmartButtonsConfig implements PaymentConfigItem {
  """The styles for the PayPal Smart Button configuration"""
  button_styles: ButtonStyles
  """The payment method code as defined in the payment gateway"""
  code: String
  """Indicates whether to display the PayPal Pay Later message"""
  display_message: Boolean
  """Indicates whether to display Venmo"""
  display_venmo: Boolean
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Contains details about the styles for the PayPal Pay Later message"""
  message_styles: MessageStyles
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """The name displayed for the payment method"""
  title: String
}

type ApplePayConfig implements PaymentConfigItem {
  """The styles for the ApplePay Smart Button configuration"""
  button_styles: ButtonStyles
  """The payment method code as defined in the payment gateway"""
  code: String
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The payment source for the payment method"""
  payment_source: String
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """The name displayed for the payment method"""
  title: String
}

type GooglePayConfig implements PaymentConfigItem {
  """The styles for the GooglePay Button configuration"""
  button_styles: GooglePayButtonStyles
  """The payment method code as defined in the payment gateway"""
  code: String
  """Indicates whether the payment method is displayed"""
  is_visible: Boolean
  """Defines the payment intent (Authorize or Capture"""
  payment_intent: String
  """The payment source for the payment method"""
  payment_source: String
  """The PayPal parameters required to load the JS SDK"""
  sdk_params: [SDKParams]
  """
  The relative order the payment method is displayed on the checkout page
  """
  sort_order: String
  """3DS mode"""
  three_ds_mode: ThreeDSMode
  """The name displayed for the payment method"""
  title: String
}

type ButtonStyles {
  """The button color"""
  color: String
  """The button height in pixels"""
  height: Int
  """The button label"""
  label: String
  """The button layout"""
  layout: String
  """The button shape"""
  shape: String
  """Indicates whether the tagline is displayed"""
  tagline: Boolean
  """
  Defines if the button uses default height. If the value is false, the value of height is used
  """
  use_default_height: Boolean
}

type GooglePayButtonStyles {
  """The button color"""
  color: String
  """The button height in pixels"""
  height: Int
  """The button type"""
  type: String
}

type MessageStyles {
  """The message layout"""
  layout: String
  """The message logo"""
  logo: MessageStyleLogo
}

type MessageStyleLogo {
  """The type of logo for the PayPal Pay Later messaging"""
  type: String
}

"""Defines the name and value of a SDK parameter"""
type SDKParams {
  """The name of the SDK parameter"""
  name: String
  """The value of the SDK parameter"""
  value: String
}

"""Vault payment inputs"""
input VaultMethodInput {
  """The payment source for the payment method"""
  payment_source: String
  """The payment services order ID"""
  payments_order_id: String
  """PayPal order ID"""
  paypal_order_id: String
  """The public hash of the token."""
  public_hash: String
}

"""Smart button payment inputs"""
input SmartButtonMethodInput {
  """The payment source for the payment method"""
  payment_source: String
  """The payment services order ID"""
  payments_order_id: String
  """PayPal order ID"""
  paypal_order_id: String
}

"""Apple Pay inputs"""
input ApplePayMethodInput {
  """The payment source for the payment method"""
  payment_source: String
  """The payment services order ID"""
  payments_order_id: String
  """PayPal order ID"""
  paypal_order_id: String
}

"""Google Pay inputs"""
input GooglePayMethodInput {
  """The payment source for the payment method"""
  payment_source: String
  """The payment services order ID"""
  payments_order_id: String
  """PayPal order ID"""
  paypal_order_id: String
}

"""Hosted Fields payment inputs"""
input HostedFieldsInput {
  """Card bin number"""
  cardBin: String
  """Expiration month of the card"""
  cardExpiryMonth: String
  """Expiration year of the card"""
  cardExpiryYear: String
  """Last four digits of the card"""
  cardLast4: String
  """Name on the card"""
  holderName: String
  """
  Indicates whether details about the shopper's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for the Payment Services payment integration.
  """
  is_active_payment_token_enabler: Boolean
  """The payment source for the payment method"""
  payment_source: String
  """The payment services order ID"""
  payments_order_id: String
  """PayPal order ID"""
  paypal_order_id: String
}

"""Describe the variables needed to create a vault card setup token"""
input CreateVaultCardSetupTokenInput {
  """The setup token information"""
  setup_token: VaultSetupTokenInput!
  """The 3DS mode"""
  three_ds_mode: ThreeDSMode
}

"""The payment source information"""
input VaultSetupTokenInput {
  """The payment source information"""
  payment_source: PaymentSourceInput!
}

"""The payment source information"""
input PaymentSourceInput {
  """The card payment source information"""
  card: CardPaymentSourceInput!
}

"""The card payment source information"""
input CardPaymentSourceInput {
  """The billing address of the card"""
  billing_address: BillingAddressPaymentSourceInput!
  """The name on the cardholder"""
  name: String
}

"""The billing address information"""
input BillingAddressPaymentSourceInput {
  """The first line of the address"""
  address_line_1: String
  """The second line of the address"""
  address_line_2: String
  """The city of the address"""
  city: String
  """The country of the address"""
  country_code: String!
  """The postal code of the address"""
  postal_code: String
  """The region of the address"""
  region: String
}

"""The setup token id information"""
type CreateVaultCardSetupTokenOutput {
  """The setup token id"""
  setup_token: String!
}

"""Describe the variables needed to create a vault payment token"""
input CreateVaultCardPaymentTokenInput {
  """Description of the vaulted card"""
  card_description: String
  """The setup token obtained by the createVaultCardSetupToken endpoint"""
  setup_token_id: String!
}

"""The vault token id and information about the payment source"""
type CreateVaultCardPaymentTokenOutput {
  """The payment source information"""
  payment_source: PaymentSourceOutput!
  """The vault payment token information"""
  vault_token_id: String!
}

"""The payment source information"""
type PaymentSourceOutput {
  """The card payment source information"""
  card: CardPaymentSourceOutput!
}

"""The card payment source information"""
type CardPaymentSourceOutput {
  """The brand of the card"""
  brand: String
  """The expiry of the card"""
  expiry: String
  """The last digits of the card"""
  last_digits: String
}

"""Retrieves the vault configuration"""
type VaultConfigOutput {
  """Credit card vault method configuration"""
  credit_card: VaultCreditCardConfig
}

type VaultCreditCardConfig {
  """Is vault enabled"""
  is_vault_enabled: Boolean
  """The parameters required to load the Paypal JS SDK"""
  sdk_params: [SDKParams]
  """3DS mode"""
  three_ds_mode: ThreeDSMode
}

"""
Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
  """The payment method code."""
  code: String!
  """
  Indicates whether the buyer selected the quick checkout button. The default value is false.
  """
  express_button: Boolean
  """
  A set of relative URLs that PayPal uses in response to various actions during the authorization process.
  """
  urls: PaypalExpressUrlsInput!
  """
  Indicates whether the buyer clicked the PayPal credit button. The default value is false.
  """
  use_paypal_credit: Boolean
}

"""Deprecated. Use `PaypalExpressTokenOutput` instead."""
type PaypalExpressToken {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use `PaypalExpressTokenOutput.paypal_urls` instead.")
  """The token returned by PayPal."""
  token: String @deprecated(reason: "Use `PaypalExpressTokenOutput.token` instead.")
}

"""
Contains the token returned by PayPal and a set of URLs that allow the buyer to authorize payment and adjust checkout details. Applies to Express Checkout and Payments Standard payment methods.
"""
type PaypalExpressTokenOutput {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList
  """The token returned by PayPal."""
  token: String
}

"""
Contains information used to generate PayPal iframe for transaction. Applies to Payflow Link and Payments Advanced payment methods.
"""
type PayflowLinkToken {
  """The mode for the Payflow transaction."""
  mode: PayflowLinkMode
  """The PayPal URL used for requesting a Payflow form."""
  paypal_url: String
  """The secure token generated by PayPal."""
  secure_token: String
  """The secure token ID generated by PayPal."""
  secure_token_id: String
}

"""
Contains the secure URL used for the Payments Pro Hosted Solution payment method.
"""
type HostedProUrl {
  """The secure URL generated by PayPal."""
  secure_form_url: String
}

"""
Contains the required input to request the secure URL for Payments Pro Hosted Solution payment.
"""
input HostedProUrlInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
"""
input HostedProInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. For example, if the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. For example, if the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains required input for Express Checkout and Payments Standard payments.
"""
input PaypalExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!
  """The token returned by the `createPaypalExpressToken` mutation."""
  token: String!
}

"""Contains required input for Payflow Express Checkout payments."""
input PayflowExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!
  """The token returned by the createPaypalExpressToken mutation."""
  token: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressUrlsInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the page that PayPal redirects to when the payment has been put on hold for additional review. This condition mostly applies to ACH transactions, and is not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success_pending.html, the relative URL is paypal/action/success_pending.html.
  """
  pending_url: String
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
  """
  The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. Not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success.html, the relative URL is paypal/action/success.html.
  """
  success_url: String
}

"""
Contains a set of URLs that allow the buyer to authorize payment and adjust checkout details for Express Checkout and Payments Standard transactions.
"""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details."""
  edit: String
  """The URL to the PayPal login page."""
  start: String
}

"""
A set of relative URLs that PayPal uses in response to various actions during the authorization process. Adobe Commerce prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
  """
  error_url: String!
  """
  The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains information required to fetch payment token information for the Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
}

"""
Indicates the mode for payment. Applies to the Payflow Link and Payments Advanced payment methods.
"""
enum PayflowLinkMode {
  TEST
  LIVE
}

"""
Contains input required to fetch payment token information for the Payflow Pro and Payments Pro payment methods.
"""
input PayflowProTokenInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""Contains input for the Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information."""
  cc_details: CreditCardDetailsInput!
  """
  Indicates whether details about the shopper's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for the PayPal Payflow Pro payment integration.
  """
  is_active_payment_token_enabler: Boolean
}

"""Required fields for Payflow Pro and Payments Pro credit card payments."""
input CreditCardDetailsInput {
  """The credit card expiration month."""
  cc_exp_month: Int!
  """The credit card expiration year."""
  cc_exp_year: Int!
  """The last 4 digits of the credit card."""
  cc_last_4: Int!
  """The credit card type."""
  cc_type: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for the Payflow Pro and Payment Pro payment methods.
"""
input PayflowProUrlInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
  """
  error_url: String!
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type PayflowProToken {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!
  """A non-zero value if any errors occurred."""
  result: Int!
  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!
  """A secure token generated by PayPal."""
  secure_token: String!
  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type CreatePayflowProTokenOutput {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!
  """A non-zero value if any errors occurred."""
  result: Int!
  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!
  """A secure token generated by PayPal."""
  secure_token: String!
  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""
Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
"""
input PayflowProResponseInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
  """The payload returned from PayPal."""
  paypal_payload: String!
}

type PayflowProResponseOutput {
  """The cart with the updated selected payment method."""
  cart: Cart!
}

"""Contains required input for payment methods with Vault support."""
input VaultTokenInput {
  """The public hash of the payment token."""
  public_hash: String!
}

"""Contains the comment to be added to a purchase order."""
input AddPurchaseOrderCommentInput {
  """Comment text."""
  comment: String!
  """The unique ID of a purchase order."""
  purchase_order_uid: ID!
}

"""Contains the successfully added comment."""
type AddPurchaseOrderCommentOutput {
  """The purchase order comment."""
  comment: PurchaseOrderComment!
}

"""Contains details about a purchase order."""
type PurchaseOrder {
  """The approval flows for each applied rules."""
  approval_flow: [PurchaseOrderRuleApprovalFlow]!
  """
  Purchase order actions available to the customer. Can be used to display action buttons on the client.
  """
  available_actions: [PurchaseOrderAction]!
  """The set of comments applied to the purchase order."""
  comments: [PurchaseOrderComment]!
  """The date the purchase order was created."""
  created_at: String!
  """The company user who created the purchase order."""
  created_by: Customer
  """The log of the events related to the purchase order."""
  history_log: [PurchaseOrderHistoryItem]!
  """The purchase order number."""
  number: String!
  """The reference to the order placed based on the purchase order."""
  order: CustomerOrder
  """The quote related to the purchase order."""
  quote: Cart
  """The current status of the purchase order."""
  status: PurchaseOrderStatus!
  """A unique identifier for the purchase order."""
  uid: ID!
  """The date the purchase order was last updated."""
  updated_at: String!
}

"""Defines which purchase orders to act on."""
input PurchaseOrdersActionInput {
  """An array of purchase order UIDs."""
  purchase_order_uids: [ID]!
}

"""Returns a list of updated purchase orders and any error messages."""
type PurchaseOrdersActionOutput {
  """An array of error messages encountered while performing the operation."""
  errors: [PurchaseOrderActionError]!
  """A list of purchase orders."""
  purchase_orders: [PurchaseOrder]!
}

"""Contains details about a failed action."""
type PurchaseOrderActionError {
  """The returned error message."""
  message: String!
  """The error type."""
  type: PurchaseOrderErrorType!
}

enum PurchaseOrderErrorType {
  NOT_FOUND
  OPERATION_NOT_APPLICABLE
  COULD_NOT_SAVE
  NOT_VALID_DATA
  UNDEFINED
}

enum PurchaseOrderAction {
  REJECT
  CANCEL
  VALIDATE
  APPROVE
  PLACE_ORDER
}

enum PurchaseOrderStatus {
  PENDING
  APPROVAL_REQUIRED
  APPROVED
  ORDER_IN_PROGRESS
  ORDER_PLACED
  ORDER_FAILED
  REJECTED
  CANCELED
  APPROVED_PENDING_PAYMENT
}

"""Contains details about a comment."""
type PurchaseOrderComment {
  """The user who left the comment."""
  author: Customer
  """The date and time when the comment was created."""
  created_at: String!
  """The text of the comment."""
  text: String!
  """A unique identifier of the comment."""
  uid: ID!
}

"""Contains details about a status change."""
type PurchaseOrderHistoryItem {
  """The activity type of the event."""
  activity: String!
  """The date and time when the event happened."""
  created_at: String!
  """The message representation of the event."""
  message: String!
  """A unique identifier of the purchase order history item."""
  uid: ID!
}

"""Defines the criteria to use to filter the list of purchase orders."""
input PurchaseOrdersFilterInput {
  """Include only purchase orders made by subordinate company users."""
  company_purchase_orders: Boolean
  """Filter by the creation date of the purchase order."""
  created_date: FilterRangeTypeInput
  """
  Include only purchase orders that are waiting for the customer’s approval.
  """
  require_my_approval: Boolean
  """Filter by the status of the purchase order."""
  status: PurchaseOrderStatus
}

"""Contains a list of purchase orders."""
type PurchaseOrders {
  """Purchase orders matching the search criteria."""
  items: [PurchaseOrder]!
  """Page information of search result's current page."""
  page_info: SearchResultPageInfo
  """Total number of purchase orders found matching the search criteria."""
  total_count: Int
}

"""Specifies the quote to be converted to a purchase order."""
input PlacePurchaseOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Specifies the purchase order to convert to an order."""
input PlaceOrderForPurchaseOrderInput {
  """The unique ID of a purchase order."""
  purchase_order_uid: ID!
}

"""Contains the results of the request to place a purchase order."""
type PlacePurchaseOrderOutput {
  """Placed purchase order."""
  purchase_order: PurchaseOrder!
}

"""Contains the results of the request to place an order."""
type PlaceOrderForPurchaseOrderOutput {
  """Placed order."""
  order: CustomerOrder!
}

"""Defines the purchase order and cart to act on."""
input AddPurchaseOrderItemsToCartInput {
  """The ID to assign to the cart."""
  cart_id: String!
  """Purchase order unique ID."""
  purchase_order_uid: ID!
  """Replace existing cart or merge items."""
  replace_existing_cart_items: Boolean!
}

"""Defines the changes to be made to an approval rule."""
input UpdatePurchaseOrderApprovalRuleInput {
  """
  An updated list of company user role IDs to which this purchase order approval rule should be applied. When an empty array is provided, the rule is applied to all user roles in the system, including those created in the future.
  """
  applies_to: [ID]
  """
  An updated list of B2B user roles that can approve this purchase order approval rule.
  """
  approvers: [ID]
  """The updated condition of the purchase order approval rule."""
  condition: CreatePurchaseOrderApprovalRuleConditionInput
  """The updated approval rule description."""
  description: String
  """The updated approval rule name."""
  name: String
  """The updated status of the purchase order approval rule."""
  status: PurchaseOrderApprovalRuleStatus
  """Unique identifier for the purchase order approval rule."""
  uid: ID!
}

"""Defines a new purchase order approval rule."""
input PurchaseOrderApprovalRuleInput {
  """
  A list of company user role IDs to which this purchase order approval rule should be applied. When an empty array is provided, the rule is applied to all user roles in the system, including those created in the future.
  """
  applies_to: [ID]!
  """
  A list of B2B user roles that can approve this purchase order approval rule.
  """
  approvers: [ID]!
  """The condition of the purchase order approval rule."""
  condition: CreatePurchaseOrderApprovalRuleConditionInput!
  """A summary of the purpose of the purchase order approval rule."""
  description: String
  """The purchase order approval rule name."""
  name: String!
  """The status of the purchase order approval rule."""
  status: PurchaseOrderApprovalRuleStatus!
}

"""Defines a set of conditions that apply to a rule."""
input CreatePurchaseOrderApprovalRuleConditionInput {
  """
  The amount to be compared in a purchase order approval rule. This field is mutually exclusive with condition quantity.
  """
  amount: CreatePurchaseOrderApprovalRuleConditionAmountInput
  """The type of approval rule."""
  attribute: PurchaseOrderApprovalRuleType!
  """Defines how to evaluate an amount or quantity in a purchase order."""
  operator: PurchaseOrderApprovalRuleConditionOperator!
  """
  The quantity to be compared in a purchase order approval rule. This field is mutually exclusive with condition amount.
  """
  quantity: Int
}

"""Specifies the amount and currency to evaluate."""
input CreatePurchaseOrderApprovalRuleConditionAmountInput {
  """Purchase order approval rule condition amount currency."""
  currency: CurrencyEnum!
  """Purchase order approval rule condition amount value."""
  value: Float!
}

"""Contains metadata that can be used to render rule edit forms."""
type PurchaseOrderApprovalRuleMetadata {
  """A list of B2B user roles that the rule can be applied to."""
  available_applies_to: [CompanyRole]!
  """
  A list of currencies that can be used to create approval rules based on amounts, for example shipping cost rules.
  """
  available_condition_currencies: [AvailableCurrency]!
  """
  A list of B2B user roles that can be specified as approvers for the approval rules.
  """
  available_requires_approval_from: [CompanyRole]!
}

"""
Defines the code and symbol of a currency that can be used for purchase orders.
"""
type AvailableCurrency {
  """3-letter currency code, for example USD."""
  code: CurrencyEnum!
  """Currency symbol, for example $."""
  symbol: String!
}

"""Contains the approval rules that the customer can see."""
type PurchaseOrderApprovalRules {
  """A list of purchase order approval rules visible to the customer."""
  items: [PurchaseOrderApprovalRule]!
  """Result pagination details."""
  page_info: SearchResultPageInfo
  """
  The total number of purchase order approval rules visible to the customer.
  """
  total_count: Int
}

"""Contains details about a purchase order approval rule."""
type PurchaseOrderApprovalRule {
  """
  The name of the user(s) affected by the the purchase order approval rule.
  """
  applies_to_roles: [CompanyRole]!
  """
  The name of the user who needs to approve purchase orders that trigger the approval rule.
  """
  approver_roles: [CompanyRole]!
  """Condition which triggers the approval rule."""
  condition: PurchaseOrderApprovalRuleConditionInterface
  """The date the purchase order rule was created."""
  created_at: String!
  """The name of the user who created the purchase order approval rule."""
  created_by: String!
  """Description of the purchase order approval rule."""
  description: String
  """The name of the purchase order approval rule."""
  name: String!
  """The status of the purchase order approval rule."""
  status: PurchaseOrderApprovalRuleStatus!
  """The unique identifier for the purchase order approval rule."""
  uid: ID!
  """The date the purchase order rule was last updated."""
  updated_at: String!
}

"""Purchase order rule condition details."""
interface PurchaseOrderApprovalRuleConditionInterface {
  """The type of purchase order approval rule."""
  attribute: PurchaseOrderApprovalRuleType
  """The operator to be used for evaluating the approval rule condition."""
  operator: PurchaseOrderApprovalRuleConditionOperator
}

"""
Contains approval rule condition details, including the amount to be evaluated.
"""
type PurchaseOrderApprovalRuleConditionAmount implements PurchaseOrderApprovalRuleConditionInterface {
  """
  The amount to be be used for evaluation of the approval rule condition.
  """
  amount: Money!
  """The type of purchase order approval rule."""
  attribute: PurchaseOrderApprovalRuleType
  """The operator to be used for evaluating the approval rule condition."""
  operator: PurchaseOrderApprovalRuleConditionOperator
}

"""
Contains approval rule condition details, including the quantity to be evaluated.
"""
type PurchaseOrderApprovalRuleConditionQuantity implements PurchaseOrderApprovalRuleConditionInterface {
  """The type of purchase order approval rule."""
  attribute: PurchaseOrderApprovalRuleType
  """The operator to be used for evaluating the approval rule condition."""
  operator: PurchaseOrderApprovalRuleConditionOperator
  """The quantity to be used for evaluation of the approval rule condition."""
  quantity: Int
}

enum PurchaseOrderApprovalRuleConditionOperator {
  MORE_THAN
  LESS_THAN
  MORE_THAN_OR_EQUAL_TO
  LESS_THAN_OR_EQUAL_TO
}

enum PurchaseOrderApprovalRuleStatus {
  ENABLED
  DISABLED
}

enum PurchaseOrderApprovalRuleType {
  GRAND_TOTAL
  SHIPPING_INCL_TAX
  NUMBER_OF_SKUS
}

"""
Contains details about approval roles applied to the purchase order and status changes.
"""
type PurchaseOrderRuleApprovalFlow {
  """The approval flow event related to the rule."""
  events: [PurchaseOrderApprovalFlowEvent]!
  """The name of the applied rule."""
  rule_name: String!
}

"""
Contains details about a single event in the approval flow of the purchase order.
"""
type PurchaseOrderApprovalFlowEvent {
  """A formatted message."""
  message: String
  """The approver name."""
  name: String
  """The approver role."""
  role: String
  """The status related to the event."""
  status: PurchaseOrderApprovalFlowItemStatus
  """The date and time the event was updated."""
  updated_at: String
}

enum PurchaseOrderApprovalFlowItemStatus {
  PENDING
  APPROVED
  REJECTED
}

"""Defines the purchase orders to be validated."""
input ValidatePurchaseOrdersInput {
  """An array of the purchase order IDs."""
  purchase_order_uids: [ID]!
}

"""Contains the results of validation attempts."""
type ValidatePurchaseOrdersOutput {
  """An array of error messages encountered while performing the operation."""
  errors: [ValidatePurchaseOrderError]!
  """An array of the purchase orders in the request."""
  purchase_orders: [PurchaseOrder]!
}

"""Contains details about a failed validation attempt."""
type ValidatePurchaseOrderError {
  """The returned error message."""
  message: String!
  """Error type."""
  type: ValidatePurchaseOrderErrorType!
}

enum ValidatePurchaseOrderErrorType {
  NOT_FOUND
  OPERATION_NOT_APPLICABLE
  COULD_NOT_SAVE
  NOT_VALID_DATA
  UNDEFINED
}

"""Specifies the IDs of the approval rules to delete."""
input DeletePurchaseOrderApprovalRuleInput {
  """An array of purchase order approval rule IDs."""
  approval_rule_uids: [ID]!
}

"""
Contains any errors encountered while attempting to delete approval rules.
"""
type DeletePurchaseOrderApprovalRuleOutput {
  """An array of error messages encountered while performing the operation."""
  errors: [DeletePurchaseOrderApprovalRuleError]!
}

"""
Contains details about an error that occurred when deleting an approval rule .
"""
type DeletePurchaseOrderApprovalRuleError {
  """The text of the error message."""
  message: String
  """The error type."""
  type: DeletePurchaseOrderApprovalRuleErrorType
}

enum DeletePurchaseOrderApprovalRuleErrorType {
  UNDEFINED
  NOT_FOUND
}

"""Assigns a specific `cart_id` to the empty cart."""
input ClearCartInput {
  """The unique ID of a `Cart` object."""
  uid: ID!
}

"""Output of the request to clear the customer cart."""
type ClearCartOutput {
  """The cart after clear cart items."""
  cart: Cart
  """An array of errors encountered while clearing the cart item"""
  errors: [ClearCartError]
}

"""Contains details about errors encountered when a customer clear cart."""
type ClearCartError {
  """A localized error message"""
  message: String!
  """A cart-specific error type."""
  type: ClearCartErrorType!
}

enum ClearCartErrorType {
  NOT_FOUND
  UNAUTHORISED
  INACTIVE
  UNDEFINED
}

enum ReCaptchaFormEnum {
  PLACE_ORDER
  CONTACT
  CUSTOMER_LOGIN
  CUSTOMER_FORGOT_PASSWORD
  CUSTOMER_CREATE
  CUSTOMER_EDIT
  NEWSLETTER
  PRODUCT_REVIEW
  SENDFRIEND
  BRAINTREE
}

"""Contains reCAPTCHA V3-Invisible configuration details."""
type ReCaptchaConfigurationV3 {
  """The position of the invisible reCAPTCHA badge on each page."""
  badge_position: String!
  """The message that appears to the user if validation fails."""
  failure_message: String!
  """
  A list of forms on the storefront that have been configured to use reCAPTCHA V3.
  """
  forms: [ReCaptchaFormEnum]!
  """Return whether recaptcha is enabled or not"""
  is_enabled: Boolean!
  """
  A two-character code that specifies the language that is used for Google reCAPTCHA text and messaging.
  """
  language_code: String
  """
  The minimum score that identifies a user interaction as a potential risk.
  """
  minimum_score: Float!
  """
  The website key generated when the Google reCAPTCHA account was registered.
  """
  website_key: String!
}

"""
Contains details about configurable products added to a requisition list.
"""
type ConfigurableRequisitionListItem implements RequisitionListItemInterface {
  """Selected configurable options for an item in the requisition list."""
  configurable_options: [SelectedConfigurableOption]
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The quantity of the product added to the requisition list."""
  quantity: Float!
  """The unique ID of an item in a requisition list."""
  uid: ID!
}

"""Contains an array of product reviews."""
type ProductReviews {
  """An array of product reviews."""
  items: [ProductReview]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
}

"""Contains details of a product review."""
type ProductReview {
  """The average of all ratings for this product."""
  average_rating: Float!
  """The date the review was created."""
  created_at: String!
  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!
  """The reviewed product."""
  product: ProductInterface!
  """
  An array of ratings by rating category, such as quality, price, and value.
  """
  ratings_breakdown: [ProductReviewRating]!
  """The summary (title) of the review."""
  summary: String!
  """The review text."""
  text: String!
}

"""Contains data about a single aspect of a product review."""
type ProductReviewRating {
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!
  """
  The rating value given by customer. By default, possible values range from 1 to 5.
  """
  value: String!
}

"""Contains an array of metadata about each aspect of a product review."""
type ProductReviewRatingsMetadata {
  """An array of product reviews sorted by position."""
  items: [ProductReviewRatingMetadata]!
}

"""Contains details about a single aspect of a product review."""
type ProductReviewRatingMetadata {
  """An encoded rating ID."""
  id: String!
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!
  """List of product review ratings sorted by position."""
  values: [ProductReviewRatingValueMetadata]!
}

"""Contains details about a single value in a product review."""
type ProductReviewRatingValueMetadata {
  """A ratings scale, such as the number of stars awarded."""
  value: String!
  """An encoded rating value ID."""
  value_id: String!
}

"""Contains the completed product review."""
type CreateProductReviewOutput {
  """Product review details."""
  review: ProductReview!
}

"""Defines a new product review."""
input CreateProductReviewInput {
  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!
  """
  The ratings details by category. For example, Price: 5 stars, Quality: 4 stars, etc.
  """
  ratings: [ProductReviewRatingInput]!
  """The SKU of the reviewed product."""
  sku: String!
  """The summary (title) of the review."""
  summary: String!
  """The review text."""
  text: String!
}

"""Contains the reviewer's rating for a single aspect of a review."""
input ProductReviewRatingInput {
  """An encoded rating ID."""
  id: String!
  """An encoded rating value ID."""
  value_id: String!
}

"""Contains details about a customer's reward points."""
type RewardPoints {
  """The current balance of reward points."""
  balance: RewardPointsAmount
  """
  The balance history of reward points. If the ability for customers to view the balance history has been disabled in the Admin, this field will be set to null.
  """
  balance_history: [RewardPointsBalanceHistoryItem]
  """The current exchange rates for reward points."""
  exchange_rates: RewardPointsExchangeRates
  """The subscription status of emails related to reward points."""
  subscription_status: RewardPointsSubscriptionStatus
}

type RewardPointsAmount {
  """The reward points amount in store currency."""
  money: Money!
  """The reward points amount in points."""
  points: Float!
}

"""
Lists the reward points exchange rates. The values depend on the customer group.
"""
type RewardPointsExchangeRates {
  """How many points are earned for a given amount spent."""
  earning: RewardPointsRate
  """
  How many points must be redeemed to get a given amount of currency discount at the checkout.
  """
  redemption: RewardPointsRate
}

"""Contains details about customer's reward points rate."""
type RewardPointsRate {
  """
  The money value for the exchange rate. For earnings, this is the amount spent to earn the specified points. For redemption, this is the amount of money the number of points represents.
  """
  currency_amount: Float!
  """
  The number of points for an exchange rate. For earnings, this is the number of points earned. For redemption, this is the number of points needed for redemption.
  """
  points: Float!
}

"""Indicates whether the customer subscribes to reward points emails."""
type RewardPointsSubscriptionStatus {
  """
  Indicates whether the customer subscribes to 'Reward points balance updates' emails.
  """
  balance_updates: RewardPointsSubscriptionStatusesEnum!
  """
  Indicates whether the customer subscribes to 'Reward points expiration notifications' emails.
  """
  points_expiration_notifications: RewardPointsSubscriptionStatusesEnum!
}

enum RewardPointsSubscriptionStatusesEnum {
  SUBSCRIBED
  NOT_SUBSCRIBED
}

"""Contain details about the reward points transaction."""
type RewardPointsBalanceHistoryItem {
  """The award points balance after the completion of the transaction."""
  balance: RewardPointsAmount
  """The reason the balance changed."""
  change_reason: String!
  """The date of the transaction."""
  date: String!
  """The number of points added or deducted in the transaction."""
  points_change: Float!
}

"""Contains the customer cart."""
type ApplyRewardPointsToCartOutput {
  """The customer cart after reward points are applied."""
  cart: Cart!
}

"""Contains the customer cart."""
type RemoveRewardPointsFromCartOutput {
  """The customer cart after reward points are removed."""
  cart: Cart!
}

"""Contains information needed to start a return request."""
input RequestReturnInput {
  """
  Text the buyer entered that describes the reason for the refund request.
  """
  comment_text: String
  """
  The email address the buyer enters to receive notifications about the status of the return.
  """
  contact_email: String
  """An array of items to be returned."""
  items: [RequestReturnItemInput]!
  """The unique ID for a `Order` object."""
  order_uid: ID!
}

"""Contains details about an item to be returned."""
input RequestReturnItemInput {
  """Details about a custom attribute that was entered."""
  entered_custom_attributes: [EnteredCustomAttributeInput]
  """The unique ID for a `OrderItemInterface` object."""
  order_item_uid: ID!
  """The quantity of the item to be returned."""
  quantity_to_return: Float!
  """
  An array of selected custom option IDs associated with the item to be returned. For example, the IDs for the selected color and size of a configurable product.
  """
  selected_custom_attributes: [SelectedCustomAttributeInput]
}

"""Contains details about a custom text attribute that the buyer entered."""
input EnteredCustomAttributeInput {
  """A string that identifies the entered custom attribute."""
  attribute_code: String!
  """The text or other entered value."""
  value: String!
}

"""Contains details about an attribute the buyer selected."""
input SelectedCustomAttributeInput {
  """A string that identifies the selected attribute."""
  attribute_code: String!
  """
  The unique ID for a `CustomAttribute` object of a selected custom attribute.
  """
  value: ID!
}

"""Contains the response to a return request."""
type RequestReturnOutput {
  """Details about a single return request."""
  return: Return
  """An array of return requests."""
  returns(
    """
    Specifies the maximum number of results to return at once. The default is 20.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default is 1."""
    currentPage: Int = 1
  ): Returns
}

"""Defines a return comment."""
input AddReturnCommentInput {
  """The text added to the return request."""
  comment_text: String!
  """The unique ID for a `Return` object."""
  return_uid: ID!
}

"""Contains details about the return request."""
type AddReturnCommentOutput {
  """The modified return."""
  return: Return
}

"""Defines tracking information to be added to the return."""
input AddReturnTrackingInput {
  """The unique ID for a `ReturnShippingCarrier` object."""
  carrier_uid: ID!
  """The unique ID for a `Returns` object."""
  return_uid: ID!
  """The shipping tracking number for this return request."""
  tracking_number: String!
}

"""Contains the response after adding tracking information."""
type AddReturnTrackingOutput {
  """Details about the modified return."""
  return: Return
  """Details about shipping for a return."""
  return_shipping_tracking: ReturnShippingTracking
}

"""Defines the tracking information to delete."""
input RemoveReturnTrackingInput {
  """The unique ID for a `ReturnShippingTracking` object."""
  return_shipping_tracking_uid: ID!
}

"""Contains the response after deleting tracking information."""
type RemoveReturnTrackingOutput {
  """Contains details about the modified return."""
  return: Return
}

"""Contains a list of customer return requests."""
type Returns {
  """A list of return requests."""
  items: [Return]
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """The total number of return requests."""
  total_count: Int
}

"""Contains details about a return."""
type Return {
  """A list of shipping carriers available for returns."""
  available_shipping_carriers: [ReturnShippingCarrier]
  """A list of comments posted for the return request."""
  comments: [ReturnComment]
  """The date the return was requested."""
  created_at: String!
  """Data from the customer who created the return request."""
  customer: ReturnCustomer!
  """A list of items being returned."""
  items: [ReturnItem]
  """A human-readable return number."""
  number: String!
  """The order associated with the return."""
  order: CustomerOrder
  """Shipping information for the return."""
  shipping: ReturnShipping
  """The status of the return request."""
  status: ReturnStatus
  """The unique ID for a `Return` object."""
  uid: ID!
}

"""The customer information for the return."""
type ReturnCustomer {
  """The email address of the customer."""
  email: String!
  """The first name of the customer."""
  firstname: String
  """The last name of the customer."""
  lastname: String
}

"""Contains details about a product being returned."""
type ReturnItem {
  """Return item custom attributes that are visible on the storefront."""
  custom_attributes: [ReturnCustomAttribute] @deprecated(reason: "Use custom_attributesV2 instead.")
  """Custom attributes that are visible on the storefront."""
  custom_attributesV2: [AttributeValueInterface]
  """
  Provides access to the product being returned, including information about selected and entered options.
  """
  order_item: OrderItemInterface!
  """The quantity of the item the merchant authorized to be returned."""
  quantity: Float!
  """The quantity of the item requested to be returned."""
  request_quantity: Float!
  """The return status of the item."""
  status: ReturnItemStatus!
  """The unique ID for a `ReturnItem` object."""
  uid: ID!
}

"""Return Item attribute metadata."""
type ReturnItemAttributeMetadata implements CustomAttributeMetadataInterface {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: ID!
  """Default attribute value."""
  default_value: String
  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum!
  """The frontend class of the attribute."""
  frontend_class: String
  """The frontend input type of the attribute."""
  frontend_input: AttributeFrontendInputEnum
  """The template used for the input of the attribute (e.g., 'date')."""
  input_filter: InputFilterEnum
  """Whether the attribute value is required."""
  is_required: Boolean!
  """Whether the attribute value must be unique."""
  is_unique: Boolean!
  """The label assigned to the attribute."""
  label: String
  """The number of lines of the attribute value."""
  multiline_count: Int
  """Attribute options."""
  options: [CustomAttributeOptionInterface]!
  """The position of the attribute in the form."""
  sort_order: Int
  """The validation rules of the attribute value."""
  validate_rules: [ValidationRule]
}

"""Contains details about a `ReturnCustomerAttribute` object."""
type ReturnCustomAttribute {
  """A description of the attribute."""
  label: String!
  """The unique ID for a `ReturnCustomAttribute` object."""
  uid: ID!
  """A JSON-encoded value of the attribute."""
  value: String!
}

"""Contains details about a return comment."""
type ReturnComment {
  """The name or author who posted the comment."""
  author_name: String!
  """The date and time the comment was posted."""
  created_at: String!
  """The contents of the comment."""
  text: String!
  """The unique ID for a `ReturnComment` object."""
  uid: ID!
}

"""Contains details about the return shipping address."""
type ReturnShipping {
  """The merchant-defined return shipping address."""
  address: ReturnShippingAddress
  """
  The unique ID for a `ReturnShippingTracking` object. If a single UID is specified, the array contains a single tracking record. Otherwise, array contains all tracking information.
  """
  tracking(uid: ID): [ReturnShippingTracking]
}

"""Contains details about the carrier on a return."""
type ReturnShippingCarrier {
  """A description of the shipping carrier."""
  label: String!
  """
  The unique ID for a `ReturnShippingCarrier` object assigned to the shipping carrier.
  """
  uid: ID!
}

"""Contains shipping and tracking details."""
type ReturnShippingTracking {
  """Contains details of a shipping carrier."""
  carrier: ReturnShippingCarrier!
  """Details about the status of a shipment."""
  status: ReturnShippingTrackingStatus
  """A tracking number assigned by the carrier."""
  tracking_number: String!
  """
  The unique ID for a `ReturnShippingTracking` object assigned to the tracking item.
  """
  uid: ID!
}

"""Contains the status of a shipment."""
type ReturnShippingTrackingStatus {
  """Text that describes the status."""
  text: String!
  """Indicates whether the status type is informational or an error."""
  type: ReturnShippingTrackingStatusType!
}

enum ReturnShippingTrackingStatusType {
  INFORMATION
  ERROR
}

"""
Contains details about the shipping address used for receiving returned items.
"""
type ReturnShippingAddress {
  """The city for product returns."""
  city: String!
  """The merchant's contact person."""
  contact_name: String
  """An object that defines the country for product returns."""
  country: Country!
  """The postal code for product returns."""
  postcode: String!
  """An object that defines the state or province for product returns."""
  region: Region!
  """The street address for product returns."""
  street: [String]!
  """The telephone number for product returns."""
  telephone: String
}

enum ReturnStatus {
  PENDING
  AUTHORIZED
  PARTIALLY_AUTHORIZED
  RECEIVED
  PARTIALLY_RECEIVED
  APPROVED
  PARTIALLY_APPROVED
  REJECTED
  PARTIALLY_REJECTED
  DENIED
  PROCESSED_AND_CLOSED
  CLOSED
}

enum ReturnItemStatus {
  PENDING
  AUTHORIZED
  RECEIVED
  APPROVED
  REJECTED
  DENIED
}

"""Defines the wish list visibility types."""
enum WishlistVisibilityEnum {
  PUBLIC
  PRIVATE
}

"""Contains the wish list."""
type CreateWishlistOutput {
  """The newly-created wish list"""
  wishlist: Wishlist!
}

"""
Contains the status of the request to delete a wish list and an array of the customer's remaining wish lists.
"""
type DeleteWishlistOutput {
  """Indicates whether the wish list was deleted."""
  status: Boolean!
  """A list of undeleted wish lists."""
  wishlists: [Wishlist]!
}

"""Contains the source and target wish lists after copying products."""
type CopyProductsBetweenWishlistsOutput {
  """The destination wish list containing the copied products."""
  destination_wishlist: Wishlist!
  """The wish list that the products were copied from."""
  source_wishlist: Wishlist!
  """An array of errors encountered while copying products in a wish list."""
  user_errors: [WishListUserInputError]!
}

"""Specifies the IDs of items to copy and their quantities."""
input WishlistItemCopyInput {
  """
  The quantity of this item to copy to the destination wish list. This value can't be greater than the quantity in the source wish list.
  """
  quantity: Float
  """The unique ID of the `WishlistItemInterface` object to be copied."""
  wishlist_item_id: ID!
}

"""Specifies the IDs of the items to move and their quantities."""
input WishlistItemMoveInput {
  """
  The quantity of this item to move to the destination wish list. This value can't be greater than the quantity in the source wish list.
  """
  quantity: Float
  """The unique ID of the `WishlistItemInterface` object to be moved."""
  wishlist_item_id: ID!
}

"""Defines the name and visibility of a new wish list."""
input CreateWishlistInput {
  """The name of the new wish list."""
  name: String!
  """Indicates whether the wish list is public or private."""
  visibility: WishlistVisibilityEnum!
}

"""Contains the name and visibility of an updated wish list."""
type UpdateWishlistOutput {
  """The wish list name."""
  name: String!
  """The unique ID of a `Wishlist` object."""
  uid: ID!
  """Indicates whether the wish list is public or private."""
  visibility: WishlistVisibilityEnum!
}

"""Contains the source and target wish lists after moving products."""
type MoveProductsBetweenWishlistsOutput {
  """
  The destination wish list after receiving products moved from the source wish list.
  """
  destination_wishlist: Wishlist!
  """The source wish list after moving products from it."""
  source_wishlist: Wishlist!
  """An array of errors encountered while moving products to a wish list."""
  user_errors: [WishListUserInputError]!
}

type SearchTerm {
  """Containes the popularity of the selected Search Term"""
  popularity: Int
  """Containes the query_text of the selected Search Term"""
  query_text: String
  """Containes the Url of the selected Search Term"""
  redirect: String
}

"""Defines the referenced product and the email sender and recipients."""
input SendEmailToFriendInput {
  """The ID of the product that the sender is referencing."""
  product_id: Int!
  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipientInput]!
  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSenderInput!
}

"""Contains details about the sender."""
input SendEmailToFriendSenderInput {
  """The email address of the sender."""
  email: String!
  """The text of the message to be sent."""
  message: String!
  """The name of the sender."""
  name: String!
}

"""Contains details about a recipient."""
input SendEmailToFriendRecipientInput {
  """The email address of the recipient."""
  email: String!
  """The name of the recipient."""
  name: String!
}

"""Contains information about the sender and recipients."""
type SendEmailToFriendOutput {
  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipient]
  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSender
}

"""An output object that contains information about the sender."""
type SendEmailToFriendSender {
  """The email address of the sender."""
  email: String!
  """The text of the message to be sent."""
  message: String!
  """The name of the sender."""
  name: String!
}

"""An output object that contains information about the recipient."""
type SendEmailToFriendRecipient {
  """The email address of the recipient."""
  email: String!
  """The name of the recipient."""
  name: String!
}

"""
Contains details about the configuration of the Email to a Friend feature.
"""
type SendFriendConfiguration {
  """Indicates whether the Email to a Friend feature is enabled."""
  enabled_for_customers: Boolean!
  """Indicates whether the Email to a Friend feature is enabled for guests."""
  enabled_for_guests: Boolean!
}

"""
Deprecated. Use `TierPrice` instead. Defines a tier price, which is a quantity discount offered to a specific customer group.
"""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "Not relevant for the storefront.")
  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "Use `TierPrice.discount` instead.")
  """
  The number of items that must be purchased to qualify for tier pricing.
  """
  qty: Float @deprecated(reason: "Use `TierPrice.quantity` instead.")
  """The price of the fixed price item."""
  value: Float @deprecated(reason: "Use `TierPrice.final_price` instead.")
  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "Not relevant for the storefront.")
}

"""Defines a price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount
  """The price of the product at this tier."""
  final_price: Money
  """
  The minimum number of items that must be purchased to qualify for this price tier.
  """
  quantity: Float
}

interface SwatchLayerFilterItemInterface {
  """Data required to render a swatch filter item."""
  swatch_data: SwatchData
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """Data required to render a swatch filter item."""
  swatch_data: SwatchData
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

"""Describes the swatch type and a value."""
type SwatchData {
  """The type of swatch filter item: 1 - text; 2 - image."""
  type: String
  """The value for the swatch item. It could be text or an image link."""
  value: String
}

interface SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type ImageSwatchData implements SwatchDataInterface {
  """The URL assigned to the thumbnail of the swatch image."""
  thumbnail: String
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type TextSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type ColorSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

"""Swatch attribute metadata input types."""
enum SwatchInputTypeEnum {
  BOOLEAN
  DATE
  DATETIME
  DROPDOWN
  FILE
  GALLERY
  HIDDEN
  IMAGE
  MEDIA_IMAGE
  MULTILINE
  MULTISELECT
  PRICE
  SELECT
  TEXT
  TEXTAREA
  UNDEFINED
  VISUAL
  WEIGHT
}

enum TaxWrappingEnum {
  DISPLAY_EXCLUDING_TAX
  DISPLAY_INCLUDING_TAX
  DISPLAY_TYPE_BOTH
}

"""
Indicates whether the request succeeded and returns the remaining customer payment tokens.
"""
type DeletePaymentTokenOutput {
  """A container for the customer's remaining payment tokens."""
  customerPaymentTokens: CustomerPaymentTokens
  """Indicates whether the request succeeded."""
  result: Boolean!
}

"""Contains payment tokens stored in the customer's vault."""
type CustomerPaymentTokens {
  """An array of payment tokens."""
  items: [PaymentToken]!
}

"""The stored payment method available to the customer."""
type PaymentToken {
  """A description of the stored account details."""
  details: String
  """The payment method code associated with the token."""
  payment_method_code: String!
  """The public hash of the token."""
  public_hash: String!
  """Specifies the payment token type."""
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types."""
enum PaymentTokenTypeEnum {
  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  card
  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  account
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """The amount of the Fixed Product Tax."""
  amount: Money
  """The display label assigned to the Fixed Product Tax."""
  label: String
}

"""Lists display settings for the Fixed Product Tax."""
enum FixedProductTaxDisplaySettings {
  """
  The displayed price includes the FPT amount without displaying the `ProductPrice.fixed_product_taxes` values. This value corresponds to 'Including FPT only'.
  """
  INCLUDE_FPT_WITHOUT_DETAILS
  """
  The displayed price includes the FPT amount while displaying the values of `ProductPrice.fixed_product_taxes` separately. This value corresponds to 'Including FPT and FPT description'.
  """
  INCLUDE_FPT_WITH_DETAILS
  """
  The displayed price does not include the FPT amount. The values of `ProductPrice.fixed_product_taxes` and the price including the FPT are displayed separately. This value corresponds to 'Excluding FPT, Including FPT description and final price.'
  """
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS
  """
  The displayed price does not include the FPT amount. The values from `ProductPrice.fixed_product_taxes` are not displayed. This value corresponds to 'Excluding FPT'.
  """
  EXCLUDE_FPT_WITHOUT_DETAILS
  """
  The FPT feature is not enabled. You can omit `ProductPrice.fixed_product_taxes` from your query.
  """
  FPT_DISABLED
}

type UiAttributeTypeFixedProductTax implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean
  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

"""Contains details about gift cards added to a requisition list."""
type GiftCardRequisitionListItem implements RequisitionListItemInterface {
  """Selected custom options for an item in the requisition list."""
  customizable_options: [SelectedCustomizableOption]!
  """An array that defines gift card properties."""
  gift_card_options: GiftCardOptions!
  """Details about a requisition list item."""
  product: ProductInterface!
  """The amount added."""
  quantity: Float!
  """The unique ID for the requisition list item."""
  uid: ID!
}

input BraintreeInput {
  """
  Contains a fingerprint provided by Braintree JS SDK and should be sent with sale transaction details to the Braintree payment gateway.
  """
  device_data: String
  """
  States whether the payment details (Credit/Debit Card, PayPal Account) entered by a customer should be tokenized for later usage. Required only if Vault is enabled for the relevant Braintree payment integration.
  """
  is_active_payment_token_enabler: Boolean!
  """
  The one-time payment token generated by Braintree payment gateway based on payment details (Card, PayPal). Required field to make sale transaction.
  """
  payment_method_nonce: String!
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

input BraintreeVaultInput {
  device_data: String
  public_hash: String!
}